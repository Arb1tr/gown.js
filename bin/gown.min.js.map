{"version":3,"sources":["../../lib/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/core/Control.js","gown.min.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/src/index.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mouseWheelSupport.js","src/utils/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","GOWN","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"Control","PIXI","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","updateTransform","redraw","mousePos","data","getLocalPosition","defineProperty","get","_enabled","set","value","_width","width","invalidDimensions","_height","height",2,"Skinable","skinCache","undefined","invalidState","controlSetTheme","preloadSkins","changeSkin","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_currentState","updateDimensions","_skinName","./Control",3,"Application","background","fullscreen","renderer","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","cleanup","removeCanvas","removeChild","_removeBackground","onresize","resize","bg","children","child","_fullscreen","removeEventListener","_onresize","bind","addEventListener","_background","Array","Sprite","../Control",4,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","hitArea","Rectangle","type","currentState","_pressed","_over","hoverSkin","redrawSkinable","createLabel","labelText","text","_label","style","textStyle","Text","updateLabelDimensions","x","Math","floor","y","skinableSetTheme","font","labelFont","color","labelColor","indexOf","label","../Skinable",5,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","posToCoord","substring","_isBitmapFont","prevCharCode","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",6,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","updateRenderable","j","renderable","getChildAt","max","../layout/ViewPortBounds",7,"ScrollArea","content","addListener","scrolldelta","bar","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","direction","scrollAuto","scroll","_scrollContent","contentMoved","min","updateBar","thumb","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",8,"ScrollBar","scrollArea","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",9,"ScrollThumb","scrollable","defaultSkin","thumbSkin","THUMB_STATES","thumbSize","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","local","stopPropagation","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","move","isNaN","maxWidth","maxHeight","./Button",10,"mode","DESKTOP_MODE","_inverse","touchStart","handleDown","touchEnd","MOBILE_MODE","center","target","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","showProgress","./ScrollThumb",11,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","pixelToValue","position","maximum","valueToPixel","sliderData","../../utils/SliderData",12,"TextInput","displayAsPassword","_displayAsPassword","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","cursor","selectionBg","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","_origText","replace","setText","_maxChars","setMaxLength","maxChars","setType","updateSelection","start","end","setSelection","updateSelectionBg","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","cursorPos","drawCursor","time","Date","now","visible","mouse","selectionStart","curPos","originalEvent","getText","sel","getSelection","./InputControl",13,"ToggleButton","slice","push","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","_selected","selected","state","substr","toggle","buttonHandleEvent",14,"HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/InputControl","./controls/LayoutGroup","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",15,"./LayoutAlignment",16,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",17,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","NaN","explicitSpace","paddingStart","./Layout",18,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",19,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",20,21,22,23,"_drawShape","graphics","moveTo","lineTo","./Shape",24,"drawEllipse",25,"reverse","_reverse",26,"radius","_radius","drawRoundedRect",27,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",28,"_skins","fill","textureCache","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","_jsonPath","loader","add","load","loadComplete","resources","textures","getScaleContainer","grid","scope","texture","getImage","removeTheme","../../utils/ScaleContainer",29,"console","warn","core","utils","./core","./utils",30,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","removeAttribute","setAttribute","_maxLength","_type","getType",31,"rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","_applyScales","elem","scaleOriginals","ceil","worldTransform","d","_updateScales","_positionTilable","scaleOriginal","w","h","clone","rightX","bottomY","middleWidth","centerHeight","fromFrame","frameId","TextureCache",32,33,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",34,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",35,"centerVertical","parent","centerHorizontal"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,KAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCSA,QAAA0B,KACAC,KAAAC,UAAAL,KAAAf,MACAA,KAAAqB,QAAArB,KAAAqB,WAAA,EAEArB,KAAAsB,aAAA,EAGAJ,EAAAK,UAAAC,OAAAC,OAAAN,KAAAC,UAAAG,WACAL,EAAAK,UAAAG,YAAAR,EACAzB,EAAAD,QAAA0B,EAUAA,EAAAK,UAAAI,SAAA,SAAAC,GACAA,IAAA5B,KAAA4B,OAAAA,IAIA5B,KAAA4B,MAAAA,EACA5B,KAAA6B,aAAA,IASAX,EAAAK,UAAAO,gBAAA,WACA9B,KAAA+B,QACA/B,KAAA+B,SAGAZ,KAAAC,UAAAG,UAAAO,gBAAAf,KAAAf,OASAkB,EAAAK,UAAAS,SAAA,SAAA9B,GACA,MAAAA,GAAA+B,KAAAC,iBAAAlC,OASAkB,EAAAK,UAAAQ,OAAA,aAUAP,OAAAW,eAAAjB,EAAAK,UAAA,WACAa,IAAA,WACA,MAAApC,MAAAqC,UAEAC,IAAA,SAAAC,GACAvC,KAAAqC,SAAAE,KAcAf,OAAAW,eAAAjB,EAAAK,UAAA,SACAa,IAAA,WACA,MAAApC,MAAAwC,QAGAF,IAAA,SAAAG,GACAzC,KAAAwC,OAAAC,EAEAzC,KAAA0C,mBAAA,KAaAlB,OAAAW,eAAAjB,EAAAK,UAAA,UACAa,IAAA,WAEA,MAAApC,MAAA2C,SAEAL,IAAA,SAAAM,GAEA5C,KAAA2C,QAAAC,EACA5C,KAAA0C,mBAAA,UCKMG,GAAG,SAASnC,EAAQjB,EAAOD,GCxHjC,QAAAsD,GAAAlB,GAKA,GAJAV,EAAAH,KAAAf,MACAA,KAAA+C,aACA/C,KAAA2B,SAAAC,GAAA3B,KAAA2B,OAEAoB,SAAAhD,KAAA4B,MACA,KAAA,IAAAhB,OAAA,mCAIAZ,MAAAiD,cAAA,EACAjD,KAAA0C,mBAAA,EArBA,GAAAxB,GAAAR,EAAA,YAwBAoC,GAAAvB,UAAAC,OAAAC,OAAAP,EAAAK,WACAuB,EAAAvB,UAAAG,YAAAoB,EACArD,EAAAD,QAAAsD,EAEAA,EAAAvB,UAAA2B,gBAAAhC,EAAAK,UAAAI,SAOAmB,EAAAvB,UAAAI,SAAA,SAAAC,GACAA,IAAA5B,KAAA4B,OAAAA,IAIA5B,KAAAkD,gBAAAtB,GACA5B,KAAAmD,eAEAnD,KAAAiD,cAAA,IASAH,EAAAvB,UAAA6B,WAAA,SAAAC,GACArD,KAAAsD,eAAAD,IACArD,KAAAuD,UAAAvD,KAAAsD,aACAtD,KAAAwD,WAAAH,EAAA,GACAA,EAAAI,MAAA,EACAzD,KAAAsD,aAAAD,GAGArD,KAAAiD,cAAA,GAQAH,EAAAvB,UAAA4B,aAAA,aAWAL,EAAAvB,UAAAmC,SAAA,SAAAC,EAAAC,GACA,GAAAP,EACArD,MAAA+C,UAAAY,GACAN,EAAArD,KAAA+C,UAAAY,IAEAN,EAAArD,KAAA4B,MAAAiC,QAAA7D,KAAA8D,SAAAH,GACA3D,KAAA+C,UAAAY,GAAAN,GAEAA,GACAO,EAAA7C,KAAAf,KAAAqD,IAWAP,EAAAvB,UAAAQ,OAAA,WAGA/B,KAAAuD,YAEAvD,KAAAuD,UAAAE,MAAA,EACAzD,KAAAuD,UAAA,MAEAvD,KAAAiD,cACAjD,KAAA0D,SAAA1D,KAAA+D,cAAA/D,KAAAoD,YAEApD,KAAAsD,cACAtD,KAAA0C,mBACA1C,KAAAwC,OAAA,GAAAxC,KAAA2C,QAAA,IAEA3C,KAAAsD,aAAAb,MAAAzC,KAAAwC,OACAxC,KAAAsD,aAAAV,OAAA5C,KAAA2C,QACA3C,KAAA0C,mBAAA,EACA1C,KAAAgE,qBAIAlB,EAAAvB,UAAAyC,iBAAA,aAaAxC,OAAAW,eAAAW,EAAAvB,UAAA,YACAa,IAAA,WACA,MAAApC,MAAAiE,WAEA3B,IAAA,SAAAC,GACAvC,KAAAiE,YAAA1B,IAGAvC,KAAAiE,UAAA1B,EACAvC,KAAAiD,cAAA,QDsIGiB,YAAY,IAAIC,GAAG,SAASzD,EAAQjB,EAAOD,GEpQ9C,QAAA4E,GAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAA,IAAAD,EAAA,CACAC,EAAA,GAAArD,MAAAC,SACA,IAAAqB,GAAA,IACAG,EAAA,GACA0B,KACA7B,EAAA5C,OAAA4E,WACA7B,EAAA/C,OAAA6E,aAEAH,EAAApD,KAAAwD,mBACAlC,EAAAG,GAAAgC,gBAAA,WACAC,SAAAC,KAAAC,YAAAR,EAAAS,MAGAhF,KAAAiF,OAAAT,EACAxE,KAAAkF,UAAAX,EAEAvE,KAAAwC,OAAA+B,EAAA9B,MACAzC,KAAA2C,QAAA4B,EAAA3B,OAEA1B,EAAAH,KAAAf,MACAwE,EAAAW,SAAAnF,MACAA,KAAAoF,UAEApF,KAAAqE,WAAAA,EACArE,KAAAsE,WAAAA,IAAA,EA1CA,GAAApD,GAAAR,EAAA,aA6CA0D,GAAA7C,UAAAC,OAAAC,OAAAP,EAAAK,WACA6C,EAAA7C,UAAAG,YAAA0C,EACA3E,EAAAD,QAAA4E,EAQAA,EAAA7C,UAAA6D,QAAA,WACA,GAAAb,GAAAvE,KAAAkF,UACAV,EAAAxE,KAAAiF,OACAG,EAAA,WACAb,EAAAc,OAAAb,GACAc,sBAAAF,GAEAE,uBAAAF,IAWAhB,EAAA7C,UAAAgE,oBAAA,SAAAC,EAAA/C,EAAAG,GACA,GAAA6C,GAAAZ,SAAAa,cAAA,SACAD,GAAAhD,MAAAA,GAAA,IACAgD,EAAA7C,OAAAA,GAAA,GAGA,KAAA,GAFA+C,GAAAF,EAAAG,WAAA,MACAC,EAAAF,EAAAG,qBAAA,EAAA,EAAA,EAAAL,EAAA7C,QACAjC,EAAA,EAAAA,EAAA6E,EAAAxE,OAAAL,IACAkF,EAAAE,aAAApF,EAAA6E,EAAA7E,GAIA,OAFAgF,GAAAK,UAAAH,EACAF,EAAAM,SAAA,EAAA,EAAAR,EAAAhD,MAAAgD,EAAA7C,QACAzB,KAAA+E,QAAAC,WAAAV,IAUArB,EAAA7C,UAAA6E,QAAA,SAAAC,GACAA,EAAAA,IAAA,EACAA,GACAxB,SAAAC,KAAAwB,YAAAtG,KAAAkF,UAAAF,MAEAhF,KAAAiF,OAAA,KACAjF,KAAAkF,UAAA,KACAlF,KAAAuG,oBACAvG,KAAAsE,YAAA,GAQAF,EAAA7C,UAAAiF,SAAA,WACAxG,KAAAwC,OAAA3C,OAAA4E,WACAzE,KAAA2C,QAAA9C,OAAA6E,YACA1E,KAAAkF,UAAAuB,OAAAzG,KAAAwC,OAAAxC,KAAA2C,SACA3C,KAAA0G,KACA1G,KAAA0G,GAAAjE,MAAAzC,KAAAwC,OACAxC,KAAA0G,GAAA9D,OAAA5C,KAAA2C,QAEA,KAAA,GAAAhC,GAAA,EAAAA,EAAAX,KAAA2G,SAAA3F,OAAAL,IAAA,CACA,GAAAiG,GAAA5G,KAAA2G,SAAAhG,EACAiG,GAAAJ,UACAI,EAAAJ,SAAAxG,KAAAwC,OAAAxC,KAAA2C,WAUAyB,EAAA7C,UAAAgF,kBAAA,WACAvG,KAAA0G,KACA1G,KAAAsG,YAAAtG,KAAA0G,IACA1G,KAAA0G,GAAA,OAUAlF,OAAAW,eAAAiC,EAAA7C,UAAA,cACAa,IAAA,WACA,MAAApC,MAAA6G,aAEAvE,IAAA,SAAAC,GACAvC,KAAA6G,cAAAtE,EACA1C,OAAAiH,oBAAA,SAAA9G,KAAA+G,YACA/G,KAAA6G,aAAAtE,IACAvC,KAAA+G,UAAA/G,KAAAwG,SAAAQ,KAAAhH,MACAH,OAAAoH,iBAAA,SAAAjH,KAAA+G,YAEA/G,KAAA6G,YAAAtE,KAUAf,OAAAW,eAAAiC,EAAA7C,UAAA,cACAa,IAAA,WACA,MAAApC,MAAAkH,aAEA5E,IAAA,SAAAC,GACAA,IAAAvC,KAAAkH,cAGAlH,KAAAuG,oBACAhE,YAAA4E,QACAnH,KAAA0G,GAAA,GAAAvF,MAAAiG,OAAApH,KAAAuF,oBAAAhD,IACAvC,KAAA0G,GAAAjE,MAAAzC,KAAAwC,OACAxC,KAAA0G,GAAA9D,OAAA5C,KAAA2C,QACA3C,KAAAwD,WAAAxD,KAAA0G,GAAA,IAEA1G,KAAAkF,UAAAN,gBAAArC,EAEAvC,KAAAkH,YAAA3E,QF0RG8E,aAAa,IAAIC,GAAG,SAAS5G,EAAQjB,EAAOD,GGrc/C,QAAA+H,GAAA3F,GACA5B,KAAA8D,SAAA9D,KAAA8D,UAAAyD,EAAAC,UACAxH,KAAAyH,aAAAzH,KAAAyH,cAAAF,EAAAG,WACA5E,EAAA/B,KAAAf,KAAA4B,GACA5B,KAAA2H,YAAA,MAEA3H,KAAA4H,aAAA,EAEA5H,KAAA6H,WAAA7H,KAAA8H,UACA9H,KAAA+H,SAAA/H,KAAAgI,eAAAhI,KAAAiI,QACAjI,KAAAkI,gBAAAlI,KAAAmI,SArBA,GAAArF,GAAApC,EAAA,cAwBA6G,GAAAhG,UAAAC,OAAAC,OAAAqB,EAAAvB,WACAgG,EAAAhG,UAAAG,YAAA6F,EACA9H,EAAAD,QAAA+H,EAGAA,EAAAC,UAAA,SAWAD,EAAAa,GAAA,KAUAb,EAAAc,KAAA,OAWAd,EAAAe,MAAA,QAUAf,EAAAG,YACAH,EAAAc,KAAAd,EAAAe,MAAAf,EAAAa,IASAb,EAAAhG,UAAA4B,aAAA,WACA,IAAA,GAAAxC,GAAA,EAAAA,EAAAX,KAAAyH,aAAAzG,OAAAL,IAAA,CACA,GAAAgD,GAAA3D,KAAAyH,aAAA9G,GACA0C,EAAArD,KAAA4B,MAAAiC,QAAA7D,KAAA8D,SAAAH,EACA3D,MAAA+C,UAAAY,GAAAN,EACAA,IACArD,KAAAwD,WAAAH,EAAA,GACAA,EAAAI,MAAA,EACAzD,KAAAyC,QACAY,EAAAZ,MAAAzC,KAAAyC,OAEAzC,KAAA4C,SACAS,EAAAT,OAAA5C,KAAA4C,WAMA2E,EAAAhG,UAAAuG,UAAA,WACA9H,KAAA2H,YAAAJ,EAAAc,OAGAd,EAAAhG,UAAA0G,QAAA,WACAjI,KAAA2H,YAAAJ,EAAAa,KAGAb,EAAAhG,UAAAgH,UAAA,aAGAhB,EAAAhG,UAAAiH,UAAA,WACAxI,KAAA2H,YAAAJ,EAAAe,QAGAf,EAAAhG,UAAA4G,SAAA,WACAnI,KAAA2H,YAAA,QASAJ,EAAAhG,UAAAyC,iBAAA,WACAhE,KAAAyI,SACAzI,KAAAyI,QAAAhG,MAAAzC,KAAAyC,MACAzC,KAAAyI,QAAA7F,OAAA5C,KAAA4C,QAEA5C,KAAAyI,QAAA,GAAAtH,MAAAuH,UAAA,EAAA,EAAA1I,KAAAyC,MAAAzC,KAAA4C,OAEA,KAAA,GAAAjC,GAAA,EAAAA,EAAAX,KAAAyH,aAAAzG,OAAAL,IAAA,CACA,GAAAgD,GAAA3D,KAAAyH,aAAA9G,GACA0C,EAAArD,KAAA+C,UAAAY,EACAN,KACAA,EAAAZ,MAAAzC,KAAAyC,MACAY,EAAAT,OAAA5C,KAAA4C,UAWA2E,EAAAhG,UAAAoG,YAAA,SAAAgB,GACA3I,KAAAqC,WAGAsG,IAAApB,EAAAc,MACArI,KAAA4I,aAAArB,EAAAc,KACArI,KAAA6I,UAAA,GACAF,IAAApB,EAAAa,IACApI,KAAA6I,UAAA,EACA7I,KAAA8I,OAAA9I,KAAA4B,MAAAmH,UACA/I,KAAA4I,aAAArB,EAAAe,MAEAtI,KAAA4I,aAAArB,EAAAa,IAEAO,IAAApB,EAAAe,OACAtI,KAAA8I,OAAA,EACA9I,KAAA6I,SACA7I,KAAA4I,aAAArB,EAAAc,KACArI,KAAA4B,MAAAmH,YACA/I,KAAA4I,aAAArB,EAAAe,SAGAtI,KAAA8I,QACA9I,KAAA8I,OAAA,GAEA9I,KAAA4I,aAAArB,EAAAa,MAKAb,EAAAhG,UAAAyH,eAAAlG,EAAAvB,UAAAQ,OAOAwF,EAAAhG,UAAAQ,OAAA,WACA/B,KAAA4H,aACA5H,KAAAiJ,cAEAjJ,KAAAgJ,kBAQAzB,EAAAhG,UAAA0H,YAAA,WACAjJ,KAAAkJ,WACAlJ,KAAAkJ,UAAAC,KAAAnJ,KAAAoJ,OACApJ,KAAAkJ,UAAAG,MAAArJ,KAAA4B,MAAA0H,YAEAtJ,KAAAkJ,UAAA,GAAA/H,MAAAoI,KAAAvJ,KAAAoJ,OAAApJ,KAAA4B,MAAA0H,WACAtJ,KAAAmF,SAAAnF,KAAAkJ,YAEAlJ,KAAAwJ,wBACAxJ,KAAA4H,aAAA,GAQAL,EAAAhG,UAAAiI,sBAAA,WACAxJ,KAAAkJ,WAAAlJ,KAAAkJ,UAAAC,OACAnJ,KAAAkJ,UAAAO,EAAAC,KAAAC,OAAA3J,KAAAyC,MAAAzC,KAAAkJ,UAAAzG,OAAA,GACAzC,KAAAkJ,UAAAU,EAAAF,KAAAC,OAAA3J,KAAA4C,OAAA5C,KAAAkJ,UAAAtG,QAAA,KAIA2E,EAAAhG,UAAAsI,iBAAA/G,EAAAvB,UAAAI,SAQA4F,EAAAhG,UAAAI,SAAA,SAAAC,GAEA5B,KAAAkJ,YACAlJ,KAAA4H,YAAA5H,KAAA4H,aACA5H,KAAAkJ,UAAAY,OAAA9J,KAAA4B,MAAAmI,WACA/J,KAAAkJ,UAAAc,QAAAhK,KAAA4B,MAAAqI,YAEAjK,KAAA6J,iBAAAjI,IAUAJ,OAAAW,eAAAoF,EAAAhG,UAAA,gBACAa,IAAA,WACA,MAAApC,MAAA+D,eAEAzB,IAAA,SAAAC,GACA,GAAAvC,KAAA+D,gBAAAxB,EAAA,CAGA,GAAAvC,KAAAyH,aAAAyC,QAAA3H,GAAA,EACA,KAAA,IAAA3B,OAAA,kBAAA2B,EAAA,IAEAvC,MAAA+D,cAAAxB,EAEAvC,KAAAiD,cAAA,MAUAzB,OAAAW,eAAAoF,EAAAhG,UAAA,SACAa,IAAA,WACA,MAAApC,MAAAoJ,QAEA9G,IAAA,SAAA6H,GACAnK,KAAAoJ,SAAAe,IAGAnK,KAAAoJ,OAAAe,EACAnK,KAAA4H,aAAA,QHodGwC,cAAc,IAAIC,GAAG,SAAS3J,EAAQjB,EAAOD,GI1tBhD,QAAA8K,GAAAnB,EAAAvH,GACAkB,EAAA/B,KAAAf,KAAA4B,GACA5B,KAAAmJ,KAAAA,GAAA,GAEAoB,EAAAC,cACAxK,KAAAyK,UAAA,EAQAzK,KAAA0K,YAAA,EAQA1K,KAAA2K,UAAA,EAAA,GApCA,GAAA7H,GAAApC,EAAA,eACA6J,EAAA7J,EAAA,2BAsCA4J,GAAA/I,UAAAC,OAAAC,OAAAqB,EAAAvB,WACA+I,EAAA/I,UAAAG,YAAA4I,EACA7K,EAAAD,QAAA8K,EASAA,EAAAM,aAAA,KAEAN,EAAA/I,UAAAsJ,QAAA,aAGAP,EAAA/I,UAAAuJ,UAAA,aAUAR,EAAA/I,UAAAwJ,SAAA,SAAAtB,GAGA,GAAAN,GAAAnJ,KAAAgL,SAAA7B,KACA8B,EAAAjL,KAAAgL,SAAAvB,EACAyB,EAAA/B,EAAAnI,MAEA,IAAAyI,EAAAzJ,KAAAmL,UAAAhC,GAAA8B,EAGA,IAAA,GAAAtK,GAAA,EAAAA,EAAAwI,EAAAnI,OAAAL,IAGA,GADAsK,GAAAjL,KAAAmL,UAAAhC,EAAAxI,IACAsK,GAAAxB,EACA,CACAyB,EAAAvK,CACA,OAKA,MAAAX,MAAA2K,SAAA,GAAAO,GAGAZ,EAAA/I,UAAA6J,WAAA,SAAAF,GACA,GAAA/B,GAAAnJ,KAAAgL,SAAA7B,KACA8B,EAAAjL,KAAAgL,SAAAvB,CAEA,OAAAyB,GAAA/B,EAAAnI,OACAiK,EAAAjL,KAAAmL,UAAAhC,EAAAkC,UAAA,EAAAH,IAEAD,EAAAjL,KAAAmL,UAAAhC,IAWAmB,EAAA/I,UAAA4J,UAAA,SAAAhC,GACA,GAAAnJ,KAAAmJ,KAAAmC,cAMA,CAIA,IAAA,GAHAC,GAAA,KACA9I,EAAA,EACAR,EAAAjC,KAAAgL,SAAAQ,MACA7K,EAAA,EAAAA,EAAAwI,EAAAnI,OAAAL,IAAA,CACA,GAAA8K,GAAAtC,EAAAuC,WAAA/K,GACAgL,EAAA1J,EAAA2J,MAAAH,EACAE,KAGAJ,GAAAI,EAAAE,QAAAN,KACA9I,GAAAkJ,EAAAE,QAAAN,IAEA9I,GAAAkJ,EAAAG,SACAP,EAAAE,GAEA,MAAAhJ,GAAAzC,KAAAgL,SAAAe,OApBA,GAAApG,GAAA3F,KAAAgL,SAAAgB,OACA,OAAArG,GAAAsG,YAAA9C,GAAA,IAAA1G,OA4BA6H,EAAA/I,UAAA2K,MAAA,WAEAjM,KAAAqK,aAAAM,eAAA5K,OAKAC,KAAAqK,aAAAM,cACA3K,KAAAqK,aAAAM,aAAAuB,OAIAlM,KAAAqK,aAAAM,aAAA5K,KACAA,KAAAyK,UAAA,EAGAzK,KAAAoM,UAWA7B,EAAA2B,UASA1K,OAAAW,eAAAmI,EAAA/I,UAAA,YACAa,IAAA,WACA,MAAApC,MAAAqM,WAEA/J,IAAA,SAAA4J,GACAlM,KAAAqM,UAAAH,KAIA5B,EAAA/I,UAAA+K,iBAAA,WACAtM,KAAAyK,WAAAzK,KAAA0K,YAEA1K,KAAAmM,OAEAnM,KAAA0K,YAAA,GAOAJ,EAAA/I,UAAA6K,QAAA,aAQA9B,EAAA/I,UAAA4K,KAAA,WACAlM,KAAAqK,aAAAM,eAAA5K,OACAC,KAAAqK,aAAAM,aAAA,KACA5K,KAAAyK,UAAA,EAGAF,EAAA4B,OACAnM,KAAAuM,WASAjC,EAAA/I,UAAAgL,OAAA,aAIAjC,EAAA6B,KAAA,WACAlM,KAAAqK,aAAAM,eACA3K,KAAAqK,aAAAM,aAAAF,aACAzK,KAAAqK,aAAAM,aAAAuB,OACAlM,KAAAqK,aAAAM,aAAA,OAGA/K,OAAAoH,iBAAA,OAAAqD,EAAA6B,MAAA,KJ4uBGK,2BAA2B,GAAGpC,cAAc,IAAIqC,GAAG,SAAS/L,EAAQjB,EAAOD,GKx8B9E,QAAAkN,KACA1M,KAAA2M,aAAA3M,KAAA2M,cAAA,KACA3M,KAAA4M,cAAA5M,KAAA4M,eAAA,KACA1L,EAAAH,KAAAf,MACAA,KAAA6M,gBAAA,GAAAC,GACA9M,KAAA+M,aAAA,EAhBA,GAAA7L,GAAAR,EAAA,cACAoM,EAAApM,EAAA,2BAkBAgM,GAAAnL,UAAAC,OAAAC,OAAAP,EAAAK,WACAmL,EAAAnL,UAAAG,YAAAgL,EACAjN,EAAAD,QAAAkN,EAOAA,EAAAnL,UAAAQ,OAAA,WACA,GAAAiL,IAAA,CACAhN,MAAAwC,QAAAxC,KAAA6M,gBAAAI,gBAAAjN,KAAAwC,SAEAxC,KAAA6M,gBAAAI,cAAAjN,KAAAwC,OACAwK,GAAA,GAEAhN,KAAA2C,SAAA3C,KAAA6M,gBAAAK,iBAAAlN,KAAA2C,UAEA3C,KAAA6M,gBAAAK,eAAAlN,KAAA2C,QACAqK,GAAA,GAEAhN,KAAAmN,SACAnN,KAAA+M,aAAAC,GAAAhN,KAAAmN,OAAAC,cACApN,KAAAmN,OAAAA,OAAAnN,KAAA2G,SAAA3G,KAAA6M,iBACA7M,KAAA+M,aAAA,EACA/M,KAAAmN,OAAAJ,aAAA,IAKAL,EAAAnL,UAAA4D,SAAA,SAAAyB,GACA,GAAAyG,GAAAnM,EAAAK,UAAA4D,SAAApE,KAAAf,KAAA4G,EAEA,OADA5G,MAAA+M,aAAA,EACAM,GAIAX,EAAAnL,UAAAiC,WAAA,SAAAoD,EAAAsE,GACA,GAAAmC,GAAAnM,EAAAK,UAAAiC,WAAAzC,KAAAf,KAAA4G,EAAAsE,EAEA,OADAlL,MAAA+M,aAAA,EACAM,GAQAX,EAAAnL,UAAA+L,UAAA,SAAAC,GACA,GAAAC,GAAA,GAAAtM,EACAsM,GAAA/K,MAAA+K,EAAA5K,OAAA2K,EACAvN,KAAAmF,SAAAqI,IAcAd,EAAAnL,UAAAkM,kBAAA,SAAA7G,EAAA6C,EAAAG,EAAAnH,EAAAG,GACA,MAAAgE,GAAA6C,EAAAhH,EAAAgH,GACA7C,EAAAgD,EAAAhH,EAAAgH,GACAhD,EAAA6C,EAAAA,EAAA7C,EAAAnE,OACAmE,EAAAgD,EAAAA,EAAAhD,EAAAhE,QAaA8J,EAAAnL,UAAAmM,iBAAA,SAAAjE,EAAAG,EAAAnH,EAAAG,GACA,IAAA,GAAAjC,GAAA,EAAAgN,EAAA3N,KAAA2G,SAAA3F,OAAA2M,EAAAhN,EAAAA,IAAA,CACA,GAAAiG,GAAA5G,KAAA2G,SAAAhG,EACAiG,GAAAgH,WAAA5N,KAAAyN,kBAAA7G,EAAA6C,EAAAG,EAAAnH,EAAAG,KAWApB,OAAAW,eAAAuK,EAAAnL,UAAA,SACAe,IAAA,SAAAG,GACAzC,KAAAwC,OAAAC,GAEAL,IAAA,WACA,GAAApC,KAAAwC,OAAA,EACA,MAAAxC,MAAAwC,MAEA,IAAAC,GAAA,CACA,IAAAzC,KAAA2G,SACA,IAAA,GAAAhG,GAAA,EAAAA,EAAAX,KAAA2G,SAAA3F,OAAAL,IAAA,CACA,GAAAiG,GAAA5G,KAAA6N,WAAAlN,EACA8B,GAAAiH,KAAAoE,IAAArL,EAAAmE,EAAA6C,EAAA7C,EAAAnE,OAGA,MAAAA,MAUAjB,OAAAW,eAAAuK,EAAAnL,UAAA,UACAe,IAAA,SAAAM,GACA5C,KAAA2C,QAAAC,GAEAR,IAAA,WACA,GAAApC,KAAA2C,QAAA,EACA,MAAA3C,MAAA2C,OAEA,IAAAC,GAAA,CACA,IAAA5C,KAAA2G,SACA,IAAA,GAAAhG,GAAA,EAAAA,EAAAX,KAAA2G,SAAA3F,OAAAL,IAAA,CACA,GAAAiG,GAAA5G,KAAA6N,WAAAlN,EACAiC,GAAA8G,KAAAoE,IAAAlL,EAAAgE,EAAAgD,EAAAhD,EAAAhE,QAGA,MAAAA,QLw9BGyE,aAAa,EAAE0G,2BAA2B,KAAKC,GAAG,SAAStN,EAAQjB,EAAOD,GMvmC7E,QAAAyO,GAAAC,EAAAC,EAAAC,EAAAC,GACArO,KAAAmO,YAAAA,IAAA,EACAnO,KAAAqO,IAAAA,GAAA,KACAnN,EAAAH,KAAAf,MACAA,KAAAkO,QAAAA,GAAA,KACAlO,KAAAsO,KAAAtL,OACAhD,KAAAqB,SAAA,EACArB,KAAAuO,UAAA,EAEAvO,KAAAwO,gBAAAP,EAAAQ,YAEAzO,KAAAoO,YAAAA,GAAA,GAEApO,KAAAsB,aAAA,EAEAtB,KAAA+H,SAAA/H,KAAAkI,gBAAAlI,KAAAgI,eAAAhI,KAAAiI,QACAjI,KAAA6H,WAAA7H,KAAA8H,UACA9H,KAAA0O,UAAA1O,KAAAuI,UA7BA,GAAArH,GAAAR,EAAA,cACAiO,EAAAjO,EAAA,4BA+BAuN,GAAA1M,UAAAC,OAAAC,OAAAP,EAAAK,WACA0M,EAAA1M,UAAAG,YAAAuM,EACAxO,EAAAD,QAAAyO,EAIAA,EAAAQ,YAAA,OACAR,EAAAW,gBAAA,WACAX,EAAAY,kBAAA,aAOAZ,EAAA1M,UAAAuN,sBAAA,WACA,MAAA9O,MAAAkO,QAAAf,QACAnN,KAAAkO,QAAAf,OAAA4B,YAAAJ,EAAAK,sBASAf,EAAA1M,UAAA0N,QAAA,WACA,MAAAjP,MAAAkO,QAAAtL,QAAA5C,KAAA4C,QACA5C,KAAAkO,QAAAzL,MAAAzC,KAAAyC,OAUAwL,EAAA1M,UAAA2N,UAAA,WACA,GAAAC,GAAAnP,KAAAwO,kBAAAP,EAAAQ,YACAW,EAAAnB,EAAAW,eAQA,QAJA5O,KAAAwO,kBAAAP,EAAAY,mBACAM,IAAAnP,KAAA8O,yBAAA9O,KAAAiP,cACAG,EAAAnB,EAAAY,mBAEAO,GAQAnB,EAAA1M,UAAA8N,eAAA,SAAA5F,EAAAG,GAEA,GAAAwF,GAAApP,KAAAkP,YACAI,GAAA,CAuBA,OAtBAF,KAAAnB,EAAAY,mBACA7O,KAAAkO,QAAAzL,MAAAzC,KAAAyC,QAEAgH,EAAAC,KAAA6F,IAAA9F,EAAA,GACAzJ,KAAAkO,QAAAzL,QACAgH,EAAAC,KAAAoE,IAAArE,IAAAzJ,KAAAkO,QAAAzL,MAAAzC,KAAAyC,SAEAzC,KAAAkO,QAAAzE,EAAAC,KAAAC,MAAAF,GACA6F,GAAA,GAGAF,IAAAnB,EAAAW,iBACA5O,KAAAkO,QAAAtL,OAAA5C,KAAA4C,SAEAgH,EAAAF,KAAA6F,IAAA3F,EAAA,GACA5J,KAAAkO,QAAAtL,QAAA5C,KAAAkO,QAAAtE,EAAA,IACAA,EAAAF,KAAAoE,IAAAlE,IAAA5J,KAAAkO,QAAAtL,OAAA5C,KAAA4C,UAEA5C,KAAAkO,QAAAtE,EAAAF,KAAAC,MAAAC,GACA0F,GAAA,GAGAA,GAIArB,EAAA1M,UAAAiO,UAAA,WACA,GAAAxP,KAAAqO,KAAArO,KAAAqO,IAAAoB,OAAAzP,KAAAkO,QAAA,CACA,GAAAkB,GAAApP,KAAAkP,WACAE,KAAAnB,EAAAY,oBACA7O,KAAAqO,IAAAoB,MAAAhG,EAAAC,KAAAC,OAAA3J,KAAAkO,QAAAzE,GACAzJ,KAAAkO,QAAAzL,MAAAzC,KAAAyC,QACAzC,KAAAqO,IAAA5L,MAAAzC,KAAAqO,IAAAoB,MAAAhN,SAEA2M,IAAAnB,EAAAW,kBACA5O,KAAAqO,IAAAoB,MAAA7F,EAAAF,KAAAC,OAAA3J,KAAAkO,QAAAtE,GACA5J,KAAAkO,QAAAtL,OAAA5C,KAAA4C,SACA5C,KAAAqO,IAAAzL,OAAA5C,KAAAqO,IAAAoB,MAAA7M,YAUAqL,EAAA1M,UAAAuG,UAAA,SAAA4H,GACA,GAAAxE,GAAAwE,EAAAzN,KAAAC,iBAAAlC,KACAA,MAAA2P,SACA3P,KAAA2P,QACAzE,EAAAzB,EAAAzJ,KAAAkO,QAAAzE,EACAyB,EAAAtB,EAAA5J,KAAAkO,QAAAtE,KAUAqE,EAAA1M,UAAAgH,UAAA,SAAAmH,GACA,GAAA1P,KAAA2P,OAAA,CACA,GAAAzE,GAAAwE,EAAAzN,KAAAC,iBAAAlC,KACAA,MAAAqP,eACAnE,EAAAzB,EAAAzJ,KAAA2P,OAAA,GACAzE,EAAAtB,EAAA5J,KAAA2P,OAAA,KACA3P,KAAAwP,cAUAvB,EAAA1M,UAAA0G,QAAA,WACAjI,KAAA2P,OAAA,MAuBA1B,EAAA1M,UAAAqO,WAAA,WACA5P,KAAA4C,QAAA5C,KAAAyC,OAAAzC,KAAAuO,UACAvL,SAAAhD,KAAAsO,OACAtO,KAAAsO,KAAA,GAAAnN,MAAA0O,UAEA7P,KAAA8P,aAEA9P,KAAAsO,MACAtO,KAAAsO,KAAAyB,QAEA/P,KAAAsO,KAAAtL,SAUAiL,EAAA1M,UAAAuO,SAAA,WACA,GAAA5E,GAAA,GAAA/J,MAAA6O,MAAA,EAAA,GACAlQ,EAAAE,KAAAiQ,SAAA/E,EACAlL,MAAAsO,KAAAyB,QACAG,UAAA,OAAA,GACAC,SAAArQ,EAAA2J,EAAA3J,EAAA8J,EAAA5J,KAAAyC,MAAAzC,KAAA4C,QACAwN,UACApQ,KAAAyI,SACAzI,KAAAyI,QAAAhG,MAAAzC,KAAAyC,MACAzC,KAAAyI,QAAA7F,OAAA5C,KAAA4C,QAEA5C,KAAAyI,QAAA,GAAAtH,MAAAuH,UAAA,EAAA,EAAA1I,KAAAyC,MAAAzC,KAAA4C,SAUAqL,EAAA1M,UAAAQ,OAAA,WACA/B,KAAAkO,QAAAR,kBACA1N,KAAAkO,QAAAR,kBAAA1N,KAAAkO,QAAAzE,GAAAzJ,KAAAkO,QAAAtE,EAAA5J,KAAAyC,MAAAzC,KAAA4C,QAGA5C,KAAAqQ,UACArQ,KAAA4P,aACA5P,KAAAqQ,SAAA,IAUA7O,OAAAW,eAAA8L,EAAA1M,UAAA,WACAe,IAAA,SAAA4L,GACAlO,KAAAsQ,UACAtQ,KAAAsG,YAAA4H,GAEAlO,KAAAsQ,SAAApC,EACAA,GACAlO,KAAAmF,SAAA+I,IAGA9L,IAAA,WACA,MAAApC,MAAAsQ,YAWA9O,OAAAW,eAAA8L,EAAA1M,UAAA,SACAa,IAAA,WACA,MAAApC,MAAAwC,OAGAxC,KAAAwC,OAFAxC,KAAAsQ,SAAA7N,OAIAH,IAAA,SAAAG,GACAzC,KAAAwC,OAAAC,EACAzC,KAAAqQ,SAAA,KAUA7O,OAAAW,eAAA8L,EAAA1M,UAAA,UACAa,IAAA,WACA,MAAApC,MAAA2C,QAGA3C,KAAA2C,QAFA3C,KAAAsQ,SAAA1N,QAIAN,IAAA,SAAAM,GACA5C,KAAA2C,QAAAC,EACA5C,KAAAqQ,SAAA,ONwnCGhJ,aAAa,EAAEkJ,4BAA4B,KAAKC,GAAG,SAAS9P,EAAQjB,EAAOD,GO15C9E,QAAAiR,GAAAC,EAAAjB,EAAA7N,GACA5B,KAAA0Q,WAAAA,EACA1Q,KAAA8D,SAAA9D,KAAA8D,UAAA2M,EAAAjJ,UAEAxE,SAAAhD,KAAA2Q,cACA3Q,KAAA2Q,YAAAC,EAAAC,WACAH,GAAAA,EAAAxC,SACAwC,EAAAxC,QAAAf,OAAA4B,YACAJ,EAAAmC,qBACA9Q,KAAA2Q,YAAAC,EAAAG,WAGAL,IAGAA,EAAArC,IAAArO,MAEA4Q,EAAA7P,KAAAf,KAAAyP,EAAA7N,GA7BA,GAAAgP,GAAAlQ,EAAA,gBACAiO,EAAAjO,EAAA,4BA+BA+P,GAAAlP,UAAAC,OAAAC,OAAAmP,EAAArP,WACAkP,EAAAlP,UAAAG,YAAA+O,EACAhR,EAAAD,QAAAiR,EAGAA,EAAAjJ,UAAA,aAEAiJ,EAAAlP,UAAAyP,iBAAAJ,EAAArP,UAAAQ,OAKA0O,EAAAlP,UAAAQ,OAAA,WACA/B,KAAAiR,eACAjR,KAAA0Q,YAAA1Q,KAAAyP,QACAzP,KAAA2Q,cAAAC,EAAAC,WACA7Q,KAAAyP,MAAAhN,MAAAiH,KAAAoE,IAAA,GAAA9N,KAAA0Q,WAAAjO,OACAzC,KAAA0Q,WAAAxC,QAAAzL,MAAAzC,KAAA0Q,WAAAjO,QAEAzC,KAAAyP,MAAA7M,OAAA8G,KAAAoE,IAAA,GAAA9N,KAAA0Q,WAAA9N,QACA5C,KAAA0Q,WAAAxC,QAAAtL,OAAA5C,KAAA0Q,WAAA9N,UAGA5C,KAAAgR,iBAAAhR,QAUAyQ,EAAAlP,UAAA2P,WAAA,SAAAzH,EAAAG,GACA5J,KAAA0Q,YAAA1Q,KAAA0Q,WAAAxC,UAEAlO,KAAA2Q,cAAAC,EAAAC,WACA7Q,KAAA0Q,WAAArB,iBACArP,KAAA0Q,WAAAxC,QAAAzL,MAAAzC,KAAA0Q,WAAAjO,QACAgH,GAAAzJ,KAAA0Q,WAAAjO,MAAAzC,KAAAyP,MAAAhN,QACA,GAEAzC,KAAA0Q,WAAArB,eACA,IACArP,KAAA0Q,WAAAxC,QAAAtL,OAAA5C,KAAA0Q,WAAA9N,SACAgH,GAAA5J,KAAA0Q,WAAA9N,OAAA5C,KAAAyP,MAAA7M,cP46CG2N,4BAA4B,GAAGY,eAAe,KAAKC,GAAG,SAAS1Q,EAAQjB,EAAOD,GQ/+CjF,QAAA6R,GAAAC,EAAA1P,GACA5B,KAAAsR,WAAAA,CACA,IAAAC,GAAAF,EAAA7J,SACA5F,GAAA4P,YACAD,EAAAhK,EAAAC,WAEAxH,KAAA8D,SAAA9D,KAAA8D,UAAAyN,EACA3P,EAAA4P,YACAxR,KAAAyH,aAAA4J,EAAAI,cAEAzR,KAAAyC,MAAAb,EAAA8P,WAAA,GACA1R,KAAA4C,OAAAhB,EAAA8P,WAAA,GACAnK,EAAAxG,KAAAf,KAAA4B,GACA5B,KAAAiR,cAAA,EAEAjR,KAAA0O,UAAA1O,KAAAuI,UAEAvI,KAAA2R,UAAA3R,KAAA8H,UAEA9H,KAAA+H,SAAA/H,KAAAkI,gBAAAlI,KAAAiI,QA7BA,GAAAV,GAAA7G,EAAA,WAgCA2Q,GAAA9P,UAAAC,OAAAC,OAAA8F,EAAAhG,WACA8P,EAAA9P,UAAAG,YAAA2P,EACA5R,EAAAD,QAAA6R,EAGAA,EAAA7J,UAAA,eAEA6J,EAAAI,cACA,gBAAA,cACA,kBAAA,gBACA,mBAAA,iBAGA,IAAAG,GAAApQ,OAAAqQ,yBAAAtK,EAAAhG,UAAA,eAQAC,QAAAW,eAAAkP,EAAA9P,UAAA,gBACAe,IAAA,SAAAC,GACAvC,KAAA4B,MAAA4P,YAEAjP,EAAAvC,KAAAsR,WAAAX,YAAA,IAAApO,GAEAqP,EAAAtP,IAAAvB,KAAAf,KAAAuC,MAIA8O,EAAA9P,UAAAuQ,gBAAAvK,EAAAhG,UAAAuG,UACAuJ,EAAA9P,UAAAuG,UAAA,SAAA4H,GACA1P,KAAA8R,gBAAApC,EACA,IAAAqC,GAAArC,EAAAzN,KAAAC,iBAAAlC,KAAAsR,WACAtR,MAAAsR,WAAA3B,QAAAoC,EAAAtI,EAAAsI,EAAAnI,GAEA8F,EAAAsC,mBAGAX,EAAA9P,UAAA0Q,gBAAA1K,EAAAhG,UAAAgH,UACA8I,EAAA9P,UAAAgH,UAAA,SAAAmH,GACA1P,KAAAiS,gBAAAvC,GACA1P,KAAAsR,WAAAY,WAAAxC,IAGA2B,EAAA9P,UAAA4Q,cAAA5K,EAAAhG,UAAA0G,QACAoJ,EAAA9P,UAAA0G,QAAA,SAAAyH,GACA1P,KAAAmS,cAAAzC,GACA1P,KAAAsR,WAAAc,YASAf,EAAA9P,UAAA8Q,UAAA,SAAAhP,GACArD,KAAAqD,OAAAA,IACArD,KAAAqD,MACArD,KAAAsG,YAAAtG,KAAAqD,MAGArD,KAAAmF,SAAA9B,GACArD,KAAAqD,KAAAA,GAEAA,EAAAoG,EAAAC,KAAAC,OAAA3J,KAAAyC,MAAAY,EAAAiP,YAAA7P,OAAA,GACAY,EAAAuG,EAAAF,KAAAC,OAAA3J,KAAA4C,OAAAS,EAAAiP,YAAA1P,QAAA,GACA5C,KAAAiR,cAAA,GAQAI,EAAA9P,UAAAQ,OAAA,WACA/B,KAAAgJ,iBACAhJ,KAAAiR,cAAAjR,KAAA4B,MAAA4P,WACAxR,KAAA0D,SAAA1D,KAAAsR,WAAAX,YAAA,SAAA3Q,KAAAqS,YAcAhB,EAAA9P,UAAAgR,KAAA,SAAA9I,EAAAG,GACA,GAAA5J,KAAAsR,WAAAX,cAAA1Q,KAAA2Q,WAAAC,WAAA,CACA,GAAA2B,MAAA/I,GACA,OAAA,CAIA,IAFAA,EAAAC,KAAA6F,IAAA9F,EAAAzJ,KAAAsR,WAAAmB,YACAhJ,EAAAC,KAAAoE,IAAArE,EAAA,GACAA,IAAAzJ,KAAAyJ,EAEA,MADAzJ,MAAAyJ,EAAAA,GACA,MAEA,CACA,GAAA+I,MAAA5I,GACA,OAAA,CAIA,IAFAA,EAAAF,KAAA6F,IAAA3F,EAAA5J,KAAAsR,WAAAoB,aACA9I,EAAAF,KAAAoE,IAAAlE,EAAA,GACAA,IAAA5J,KAAA4J,EAEA,MADA5J,MAAA4J,EAAAA,GACA,EAGA,OAAA,KR4/CG+I,WAAW,IAAIC,IAAI,SAASlS,EAAQjB,EAAOD,GStoD9C,QAAAoR,GAAAnB,EAAA7N,GACA5B,KAAA6S,KAAA7S,KAAA6S,MAAAjC,EAAAkC,aAEAhQ,EAAA/B,KAAAf,KAAA4B,GAEA5B,KAAA2Q,YAAA3Q,KAAA2Q,aAAAC,EAAAC,WAEA7Q,KAAAyP,MAAAA,GAAA,GAAA4B,GAAArR,KAAAA,KAAA4B,OACA5B,KAAAmF,SAAAnF,KAAAyP,OAEAzP,KAAAiR,cAAA,EACAjR,KAAA+S,UAAA,EACA/S,KAAA2P,OAAA,KAGA3P,KAAAoO,YAAA,GAEApO,KAAAgT,WAAAhT,KAAA8H,UAAA9H,KAAAiT,WACAjT,KAAAkT,SAAAlT,KAAAiI,QAAAjI,KAAAgI,eAAAhI,KAAAoS,SA5BA,GAAAtP,GAAApC,EAAA,eACA2Q,EAAA3Q,EAAA,gBA8BAkQ,GAAArP,UAAAC,OAAAC,OAAAqB,EAAAvB,WACAqP,EAAArP,UAAAG,YAAAkP,EACAnR,EAAAD,QAAAoR,EASAA,EAAAkC,aAAA,UAQAlC,EAAAuC,YAAA,SAQAvC,EAAAC,WAAA,aAQAD,EAAAG,SAAA,WASAH,EAAArP,UAAA0R,WAAA,SAAAvD,GACA,GAAAqC,GAAArC,EAAAzN,KAAAC,iBAAAlC,MACAoT,GACA3J,EAAAsI,EAAAtI,EAAAzJ,KAAAyP,MAAAhN,MAAA,EACAmH,EAAAmI,EAAAnI,EAAA5J,KAAAyP,MAAA7M,OAAA,EAEA8M,GAAA2D,SAAArT,MACAA,KAAAsT,UAAAF,EAAA3J,EAAA2J,EAAAxJ,KACA5J,KAAA2P,QAAAoC,EAAAtI,EAAAsI,EAAAnI,GAGA5J,KAAAkR,WAAAa,EAAAtI,EAAAsI,EAAAnI,KASAgH,EAAArP,UAAA6Q,SAAA,WACApS,KAAA2P,OAAA,MASAiB,EAAArP,UAAA2Q,WAAA,SAAAxC,GACA,GAAA1P,KAAA2P,OAAA,CACA,GAAAoC,GAAArC,EAAAzN,KAAAC,iBAAAlC,MACAyJ,EAAAzJ,KAAAyP,MAAAhG,EAAAsI,EAAAtI,EAAAzJ,KAAA2P,OAAA,GACA/F,EAAA5J,KAAAyP,MAAA7F,EAAAmI,EAAAnI,EAAA5J,KAAA2P,OAAA,EACA3P,MAAAsT,UAAA7J,EAAAG,KAGA5J,KAAAkR,WAAAzH,EAAAG,GACA5J,KAAA2P,OAAA,GAAAoC,EAAAtI,EACAzJ,KAAA2P,OAAA,GAAAoC,EAAAnI,KAWAgH,EAAArP,UAAAgS,YAAA,SAAAC,GACA,GAAA/J,GAAAzJ,KAAAyP,MAAAhG,EAAA+J,EAAAC,MAAAzT,KAAAoO,YACAxE,EAAA5J,KAAAyP,MAAA7F,EAAA4J,EAAAC,MAAAzT,KAAAoO,WACApO,MAAAsT,UAAA7J,EAAAG,IACA5J,KAAAkR,WAAAzH,EAAAG,IAYAgH,EAAArP,UAAA2P,WAAA,SAAAzH,EAAAG,KAUAgH,EAAArP,UAAAmS,oBAAA,WACA,GAAA1T,KAAA2T,aAGA,GAAA3T,KAAA2Q,cAAAC,EAAAC,WAAA,CACA,GAAA+C,GAAA5T,KAAAyP,MAAAhG,EAAAzJ,KAAAyP,MAAAhN,MAAA,CACAzC,MAAA6T,SACA7T,KAAA2T,aAAAlK,EAAAmK,EACA5T,KAAA2T,aAAAlR,MAAAzC,KAAAyC,MAAAmR,EACA5T,KAAA2T,aAAA/Q,OAAA5C,KAAAqD,KAAAT,SAEA5C,KAAA2T,aAAAlK,EAAA,EACAzJ,KAAA2T,aAAAlR,MAAAmR,EACA5T,KAAA2T,aAAA/Q,OAAA5C,KAAAqD,KAAAT,YAEA,CACA,GAAAkR,GAAA9T,KAAAyP,MAAA7F,EAAA5J,KAAAyP,MAAA7M,OAAA,CACA5C,MAAA6T,SACA7T,KAAA2T,aAAA/J,EAAAkK,EACA9T,KAAA2T,aAAA/Q,OAAA5C,KAAA4C,OAAAkR,EACA9T,KAAA2T,aAAAlR,MAAAzC,KAAAqD,KAAAZ,QAEAzC,KAAA2T,aAAA/J,EAAA,EACA5J,KAAA2T,aAAA/Q,OAAAkR,EACA9T,KAAA2T,aAAAlR,MAAAzC,KAAAqD,KAAAZ,SAYAmO,EAAArP,UAAAkR,SAAA,WACA,MAAAzS,MAAAyC,MAAAzC,KAAAyP,MAAAhN,OAUAmO,EAAArP,UAAAmR,UAAA,WACA,MAAA1S,MAAA4C,OAAA5C,KAAAyP,MAAA7M,QAYAgO,EAAArP,UAAA+R,UAAA,SAAA7J,EAAAG,GACA,MAAA5J,MAAAyP,MAAA8C,KAAA9I,EAAAG,IACA5J,KAAA0T,uBACA,IAEA,GASA9C,EAAArP,UAAA8Q,UAAA,SAAAhP,GACArD,KAAAqD,OAAAA,IACArD,KAAAqD,MACArD,KAAAsG,YAAAtG,KAAAqD,MAGArD,KAAAwD,WAAAH,EAAA,GACArD,KAAAqD,KAAAA,EACArD,KAAA2T,cACA3T,KAAA0T,wBAYA9C,EAAArP,UAAAwS,aAAA,SAAA1Q,GACArD,KAAA2T,eAAAtQ,IACArD,KAAA2T,cACA3T,KAAAsG,YAAAtG,KAAA2T,cAEAtQ,EAAAZ,MAAAY,EAAAT,OAAA,EACA5C,KAAAwD,WAAAH,EAAA,GACArD,KAAA2T,aAAAtQ,EACArD,KAAAqD,MACArD,KAAA0T,wBAUA9C,EAAArP,UAAAQ,OAAA,WACA/B,KAAAiR,cAAAjR,KAAAyP,QACAzP,KAAA0D,SAAA1D,KAAA2Q,YAAA,YAAA3Q,KAAA+T,cACA/T,KAAA0D,SAAA1D,KAAA2Q,YAAA,SAAA3Q,KAAAqS,WACArS,KAAAqD,OACArD,KAAA2Q,cAAAC,EAAAC,WACA7Q,KAAAqD,KAAAZ,MAAAzC,KAAAyC,MAEAzC,KAAAqD,KAAAT,OAAA5C,KAAA4C,OAEA5C,KAAAiR,cAAA,KAaAzP,OAAAW,eAAAyO,EAAArP,UAAA,SACAa,IAAA,WACA,MAAApC,MAAAwC,QAEAF,IAAA,SAAAG,GACAzC,KAAAwC,OAAAC,EACAzC,KAAAiR,cAAA,EACAjR,KAAAyP,QACAzP,KAAAyP,MAAAwB,cAAA,MAWAzP,OAAAW,eAAAyO,EAAArP,UAAA,WACAa,IAAA,WACA,MAAApC,MAAA+S,UAEAzQ,IAAA,SAAAuR,GACAA,IAAA7T,KAAA+S,WACA/S,KAAA+S,SAAAc,EAEA7T,KAAA2Q,cAAAC,EAAAC,WACA7Q,KAAAsT,UAAA,EAAAtT,KAAAyC,MAAAzC,KAAAyP,MAAAhG,GAEAzJ,KAAAsT,UAAA,EAAAtT,KAAA4C,OAAA5C,KAAAyP,MAAA7F,GAGA5J,KAAAiR,cAAA,EACAjR,KAAAyP,QACAzP,KAAAyP,MAAAwB,cAAA,OAaAzP,OAAAW,eAAAyO,EAAArP,UAAA,UACAa,IAAA,WACA,MAAApC,MAAA2C,SAEAL,IAAA,SAAAM,GACA5C,KAAA2C,QAAAC,EACA5C,KAAAiR,cAAA,EACAjR,KAAAyP,QACAzP,KAAAyP,MAAAwB,cAAA,QTspDG7G,cAAc,EAAE4J,gBAAgB,IAAIC,IAAI,SAASvT,EAAQjB,EAAOD,GUn+DnE,QAAA0U,GAAAzE,EAAA7N,GACA5B,KAAA8D,SAAA9D,KAAA8D,UAAAoQ,EAAA1M,UAEAxH,KAAAmU,SAAAnU,KAAAmU,UAAA,EACAnU,KAAAoU,SAAApU,KAAAoU,UAAA,IACApU,KAAAqU,KAAArU,KAAAqU,MAAA,EACArU,KAAAsU,KAAAtU,KAAAsU,MAAA,GACAtU,KAAAuU,OAAAvU,KAAAwU,QACAxU,KAAAyU,OAAA,KAEA7D,EAAA7P,KAAAf,KAAAyP,EAAA7N,GAtBA,GAAAgP,GAAAlQ,EAAA,gBACAgU,EAAAhU,EAAA,yBAwBAwT,GAAA3S,UAAAC,OAAAC,OAAAmP,EAAArP,WACA2S,EAAA3S,UAAAG,YAAAwS,EACAzU,EAAAD,QAAA0U,EAGAA,EAAA1M,UAAA,aAQA0M,EAAA3S,UAAA2P,WAAA,SAAAzH,EAAAG,GACA,GAAAsB,GAAA,CAEAA,GADAlL,KAAA2Q,cAAAC,EAAAC,WACApH,EAEAG,EAEA5J,KAAAuC,MAAAvC,KAAA2U,aAAAzJ,IAUAgJ,EAAA3S,UAAAoT,aAAA,SAAAC,GACA,GAAA9G,GAAA,CASA,OAPAA,GADA9N,KAAA2Q,cAAAC,EAAAC,WACA7Q,KAAAyS,WAEAzS,KAAA0S,YAEA1S,KAAA+S,WACA6B,EAAA9G,EAAA8G,GAEAA,EAAA9G,GAAA9N,KAAA6U,QAAA7U,KAAAwU,SAAAxU,KAAAwU,SAUAN,EAAA3S,UAAAuT,aAAA,SAAAvS,GACA,GAAAuL,GAAA,CAEAA,GADA9N,KAAA2Q,cAAAC,EAAAC,WACA7Q,KAAAyS,WAEAzS,KAAA0S,WAEA,IAAAkC,IAAArS,EAAAvC,KAAAwU,UAAAxU,KAAA6U,QAAA7U,KAAAwU,SAAA1G,CAIA,OAHA9N,MAAA+S,WACA6B,EAAA9G,EAAA8G,GAEAA,GAUApT,OAAAW,eAAA+R,EAAA3S,UAAA,SACAa,IAAA,WACA,MAAApC,MAAAuU,QAEAjS,IAAA,SAAAC,GACA,IAAAiQ,MAAAjQ,KAGAA,EAAAmH,KAAA6F,IAAAhN,EAAAvC,KAAA6U,SACAtS,EAAAmH,KAAAoE,IAAAvL,EAAAvC,KAAAwU,SACAxU,KAAAuU,SAAAhS,GAAA,CAKA,GAAA2I,GAAAlL,KAAA8U,aAAAvS,EAQA,IAPAvC,KAAA2Q,cAAAC,EAAAC,WACA7Q,KAAAsT,UAAApI,EAAA,GAEAlL,KAAAsT,UAAA,EAAApI,GAGAlL,KAAAuU,OAAAhS,EACAvC,KAAAyU,OAAA,CACA,GAAAM,GAAA,GAAAL,EACAK,GAAAxS,MAAAvC,KAAAuU,OACAQ,EAAA1B,OAAArT,KACAA,KAAAyU,OAAAM,QAYAvT,OAAAW,eAAA+R,EAAA3S,UAAA,WACAa,IAAA,WACA,MAAApC,MAAAmU,UAEA7R,IAAA,SAAAkS,IACAhC,MAAAgC,IAAAxU,KAAAwU,UAAAA,GAAAA,EAAAxU,KAAA6U,UACA7U,KAAAmU,SAAAK,GAEAxU,KAAAuU,OAAAvU,KAAAwU,UACAxU,KAAAuC,MAAAvC,KAAAuU,WAYA/S,OAAAW,eAAA+R,EAAA3S,UAAA,WACAa,IAAA,WACA,MAAApC,MAAAoU,UAEA9R,IAAA,SAAAuS,IACArC,MAAAqC,IAAA7U,KAAA6U,UAAAA,GAAAA,EAAA7U,KAAAwU,UACAxU,KAAAoU,SAAAS,GAEA7U,KAAAuU,OAAAvU,KAAA6U,UACA7U,KAAAuC,MAAAsS,QVq/DGG,yBAAyB,GAAG7D,eAAe,KAAK8D,IAAI,SAASvU,EAAQjB,EAAOD,GW1oE/E,QAAA0V,GAAA/L,EAAAgM,EAAAvT,GAEA5B,KAAA8D,SAAA9D,KAAA8D,UAAAoR,EAAA1N,UACAxH,KAAAyH,aAAAzH,KAAAyH,cAAAyN,EAAAxN,WACA1H,KAAA+D,cAAA,aACA/D,KAAAiD,cAAA,EAEAqH,EAAAvJ,KAAAf,KAAAmJ,EAAAvH,GAEA5B,KAAAoV,mBAAAD,IAAA,EASAnV,KAAAqV,aAAA,EAUArV,KAAAsV,oBAAA,EAQAtV,KAAAuV,cAAA,IAQAvV,KAAAwV,WAAA,EAAA,GAGAxV,KAAAyV,OAAA,GAAAtU,MAAAoI,KAAA,IAAAvJ,KAAA4B,MAAA0H,WACAtJ,KAAAmF,SAAAnF,KAAAyV,QAGAzV,KAAA0V,YAAA,GAAAvU,MAAA0O,SACA7P,KAAAwD,WAAAxD,KAAA0V,YAAA,GAGA1V,KAAA2V,eAAA3V,KAAA4V,UAAA5O,KAAAhH,MACAA,KAAA6V,sBAAA7V,KAAAsM,iBAAAtF,KAAAhH,MACAA,KAAA8V,iBAAA9V,KAAA+V,YAAA/O,KAAAhH,MACAA,KAAAgW,iBAAAhW,KAAAiW,YAAAjP,KAAAhH,MAEAA,KAAAuI,UAAAvI,KAAA0O,UAAA1O,KAAAgW,iBACAhW,KAAA8H,UAAA9H,KAAA6H,WAAA7H,KAAA8V,iBACA9V,KAAAiI,QAAAjI,KAAA+H,SAAA/H,KAAA2V,eACA3V,KAAAgI,eAAAhI,KAAAkI,gBAAAlI,KAAA6V,sBA/EA,GAAA3U,GAAAR,EAAA,cACA4J,EAAA5J,EAAA,kBACA6J,EAAA7J,EAAA,2BAgFAwU,GAAA3T,UAAAC,OAAAC,OAAA6I,EAAA/I,WACA2T,EAAA3T,UAAAG,YAAAwT,EACAzV,EAAAD,QAAA0V,EAIAA,EAAA1N,UAAA,aASAhG,OAAAW,eAAA+S,EAAA3T,UAAA,QACAa,IAAA,WACA,MAAApC,MAAAkW,OAEA5T,IAAA,SAAA6G,GACAA,GAAA,GACAnJ,KAAAmW,YAAAhN,IAIAnJ,KAAAmW,UAAAhN,EACAnJ,KAAAoV,qBACAjM,EAAAA,EAAAiN,QAAA,MAAA,MAEApW,KAAAkW,MAAA/M,GAAA,GACAnJ,KAAAgL,SAIAhL,KAAAgL,SAAA7B,KAAAA,GAHAnJ,KAAAgL,SAAA,GAAA7J,MAAAoI,KAAAJ,EAAAnJ,KAAA4B,MAAA0H,WACAtJ,KAAAmF,SAAAnF,KAAAgL,WAMAhL,KAAAyK,UACAF,EAAA8L,QAAArW,KAAAuC,OAIAvC,KAAAsV,oBAAA,EACAtV,KAAAyU,QACAzU,KAAAyU,OAAAtL,OAcA3H,OAAAW,eAAA+S,EAAA3T,UAAA,YACAa,IAAA,WACA,MAAApC,MAAAsW,WAEAhU,IAAA,SAAAC,GACAvC,KAAAsW,YAAA/T,IAGAgI,EAAAgM,aAAAhU,GACAvC,KAAAsW,UAAA/T,MAIAf,OAAAW,eAAA+S,EAAA3T,UAAA,SACAa,IAAA,WACA,MAAApC,MAAAmW,aASAjB,EAAA3T,UAAA6K,QAAA,WACA7B,EAAA8L,QAAArW,KAAAuC,OACAgI,EAAAgM,aAAAvW,KAAAwW,UACAxW,KAAAoV,mBACA7K,EAAAkM,QAAA,YAEAlM,EAAAkM,QAAA,SAYAvB,EAAA3T,UAAAmV,gBAAA,SAAAC,EAAAC,GACA,MAAA5W,MAAAwV,UAAA,KAAAmB,GAAA3W,KAAAwV,UAAA,KAAAoB,GACA5W,KAAAwV,UAAA,GAAAmB,EACA3W,KAAAwV,UAAA,GAAAoB,EACArM,EAAAsM,aAAAF,EAAAC,GACA5W,KAAAsV,oBAAA,EACAtV,KAAA8W,qBACA,IAEA,GAIA5B,EAAA3T,UAAAuV,kBAAA,WACA,GAAAH,GAAA3W,KAAAoL,WAAApL,KAAAwV,UAAA,IACAoB,EAAA5W,KAAAoL,WAAApL,KAAAwV,UAAA,GAEAxV,MAAA0V,YAAA3F,QACA4G,IAAAC,IACA5W,KAAA0V,YAAAxF,UAAA,OACAlQ,KAAA0V,YAAAvF,SAAA,EAAA,EAAAyG,EAAAD,EAAA3W,KAAAgL,SAAApI,QACA5C,KAAA0V,YAAAjM,EAAAkN,EACA3W,KAAA0V,YAAA9L,EAAA5J,KAAAgL,SAAApB,IAIAsL,EAAA3T,UAAAgL,OAAA,WACAvM,KAAA0W,gBAAA,EAAA,IAGAxB,EAAA3T,UAAAwV,SAAA,aAGA7B,EAAA3T,UAAAuJ,UAAA,SAAA5K,GACA,GAAA8W,GAAA9W,EAAA+W,KAGA,OAAA,MAAA/W,EAAA+W,UACAjX,MAAAmM,OAKA,KAAA6K,IAAA9W,EAAAgX,SAAAhX,EAAAiX,UACAjX,EAAAkX,qBACApX,MAAA0W,gBAAA,EAAA1W,KAAAmJ,KAAAnI,cAKA,KAAAgW,GAAA9W,EAAAiX,SAAAjX,EAAAgX,UAKA,KAAAF,IACA9W,EAAAkX,iBACApX,KAAA+W,SAAA7W,IAIAF,KAAAqX,qBAGAnC,EAAA3T,UAAAsJ,QAAA,WACA7K,KAAAqX,mBAMAnC,EAAA3T,UAAA+V,aAAA,WACAtX,KAAAyV,OAAAhM,EAAA,EAAAzJ,KAAAmL,UAAAnL,KAAAmJ,KAAAkC,UAAA,EAAArL,KAAAuX,aAQArC,EAAA3T,UAAAiW,WAAA,WACA,GAAAxX,KAAAyK,UAAAzK,KAAA0K,WAAA,CACA,GAAA+M,GAAAC,KAAAC,KAGAF,GAAAzX,KAAAqV,cAAArV,KAAAuV,gBACAvV,KAAAqV,aAAAoC,EACAzX,KAAAyV,OAAAmC,SAAA5X,KAAAyV,OAAAmC,SAIA5X,KAAAyV,OAAAmC,SAAA5X,KAAAsV,qBACAtV,KAAAsX,eACAtX,KAAAsV,oBAAA,OAGAtV,MAAAyV,OAAAmC,SAAA,GAIA1C,EAAA3T,UAAAQ,OAAA,WACA/B,KAAAwX,aACAtW,EAAAK,UAAAQ,OAAAhB,KAAAf,OAGAkV,EAAA3T,UAAA0U,YAAA,SAAA/V,GACA,GAAA2X,GAAA7X,KAAAgC,SAAA9B,EACA,KAAAF,KAAAyK,WAAAzK,KAAA0K,YAAA1K,KAAA8X,eAAA,EACA,OAAA,CAGA,IAAAC,GAAA/X,KAAA+K,SAAA8M,EAAApO,EAAAoO,EAAAjO,GACA+M,EAAAjN,KAAA6F,IAAAvP,KAAA8X,eAAAC,GACAnB,EAAAlN,KAAAoE,IAAA9N,KAAA8X,eAAAC,EAOA,OALA/X,MAAA0W,gBAAAC,EAAAC,KACA5W,KAAAuX,UAAAQ,EACA/X,KAAAsX,eACAtX,KAAAsV,oBAAA,IAEA,GAGAJ,EAAA3T,UAAAwU,YAAA,SAAA7V,GACA,GAAA8X,GAAA9X,EAAA+B,KAAA+V,aACA,IAAA,IAAAA,EAAAf,OAAA,IAAAe,EAAAf,MAEA,MADAe,GAAAZ,kBACA,CAIApX,MAAAkM,QAEAlM,KAAA0K,YAAA,CACA,IAAAmN,GAAA7X,KAAAgC,SAAA9B,EAOA,OAJAF,MAAA8X,eAAA9X,KAAA+K,SAAA8M,EAAApO,EAAAoO,EAAAjO,GACA5J,KAAA0W,gBAAA1W,KAAA8X,eAAA9X,KAAA8X,gBACA9X,KAAAuX,UAAAvX,KAAA8X,eACA9X,KAAAsX,gBACA,GAGApC,EAAA3T,UAAAqU,UAAA,SAAA1V,GACA,GAAA8X,GAAA9X,EAAA+B,KAAA+V,aACA,IAAA,IAAAA,EAAAf,OAAA,IAAAe,EAAAf,MAEA,MADAe,GAAAZ,kBACA,CAGA,IAAAS,GAAA7X,KAAAgC,SAAA9B,GAGA6K,EAAA/K,KAAA+K,SAAA8M,EAAApO,EAAAoO,EAAAjO,EAWA,OARA5J,MAAA8X,gBAAA,GAAA/M,IAAA/K,KAAA8X,iBACA9X,KAAAuX,UAAAxM,EACA/K,KAAAsX,eACAtX,KAAA0W,gBAAA1W,KAAAuX,UAAAvX,KAAAuX,YAGAvX,KAAA8X,eAAA,GACA9X,KAAA0K,YAAA,GACA,GAQAwK,EAAA3T,UAAA8V,gBAAA,WACA,GAAAlO,GAAAoB,EAAA0N,SAEA9O,KAAAnJ,KAAAmJ,OACAnJ,KAAAmJ,KAAAA,EAGA,IAAA+O,GAAA3N,EAAA4N,cACAnY,MAAA0W,gBAAAwB,EAAA,GAAAA,EAAA,MACAlY,KAAAuX,UAAAW,EAAA,IAEAlY,KAAAsX,kBX6pEG9K,2BAA2B,GAAGnF,aAAa,EAAE+Q,iBAAiB,IAAIC,IAAI,SAAS3X,EAAQjB,EAAOD,GYjgFjG,QAAA8Y,GAAA1W,GACA5B,KAAA8D,SAAA9D,KAAA8D,UAAAwU,EAAA9Q,UACAxH,KAAAyH,aAAAF,EAAAG,WAAA6Q,MAAA,GACAvY,KAAAyH,aAAA+Q,KAAAF,EAAAG,aACAzY,KAAAyH,aAAA+Q,KAAAF,EAAAI,eACA1Y,KAAAyH,aAAA+Q,KAAAF,EAAAK,gBACApR,EAAAxG,KAAAf,KAAA4B,GAQA5B,KAAA4Y,WAAA,EAzBA,GAAArR,GAAA7G,EAAA,WA4BA4X,GAAA/W,UAAAC,OAAAC,OAAA8F,EAAAhG,WACA+W,EAAA/W,UAAAG,YAAA4W,EACA7Y,EAAAD,QAAA8Y,EAGAA,EAAA9Q,UAAA,gBAEA8Q,EAAAG,YAAA,cACAH,EAAAI,cAAA,gBACAJ,EAAAK,eAAA,gBAEA,IAAA/G,GAAApQ,OAAAqQ,yBAAAtK,EAAAhG,UAAA,eAQAC,QAAAW,eAAAmW,EAAA/W,UAAA,gBACAe,IAAA,SAAAC,GACAvC,KAAA4Y,YACArW,EAAA,YAAAA,GAEAqP,EAAAtP,IAAAvB,KAAAf,KAAAuC,MAUAf,OAAAW,eAAAmW,EAAA/W,UAAA,YACAe,IAAA,SAAAuW,GACA,GAAAC,GAAA9Y,KAAA+D,aACA/D,MAAAiD,aAAAjD,KAAA4Y,YAAAC,GAAA7Y,KAAAiD,aACA,IAAA6V,EAAA5O,QAAA,eACA4O,EAAAA,EAAAC,OAAA,EAAAD,EAAA9X,SAEAhB,KAAA4Y,UAAAC,EACA7Y,KAAA6I,UAAA,EACA7I,KAAA4I,aAAAkQ,GAEA1W,IAAA,WACA,MAAApC,MAAA4Y,aAOAN,EAAA/W,UAAAyX,OAAA,WACAhZ,KAAA6Y,UAAA7Y,KAAA4Y,WAIAN,EAAA/W,UAAA0X,kBAAA1R,EAAAhG,UAAAoG,YAQA2Q,EAAA/W,UAAAoG,YAAA,SAAAgB,GACA3I,KAAAqC,WAIAsG,IAAApB,EAAAa,IAAApI,KAAA6I,UACA7I,KAAAgZ,SAEAhZ,KAAAiZ,kBAAAtQ,OZghFGgK,WAAW,IAAIuG,IAAI,SAASxY,EAAQjB,EAAOD,Ga5mF9CC,EAAAD,SACA0B,QAAAR,EAAA,aACAoC,SAAApC,EAAA,cAGA0D,YAAA1D,EAAA,0BACA6G,OAAA7G,EAAA,qBACA4J,aAAA5J,EAAA,2BACAgM,YAAAhM,EAAA,0BACAkQ,WAAAlQ,EAAA,yBACAuN,WAAAvN,EAAA,yBACA+P,UAAA/P,EAAA,wBACA2Q,YAAA3Q,EAAA,0BACAwT,OAAAxT,EAAA,qBACAwU,UAAAxU,EAAA,wBACA4X,aAAA5X,EAAA,2BAGAyY,iBAAAzY,EAAA,6BACA0Y,OAAA1Y,EAAA,mBACAiO,gBAAAjO,EAAA,4BACA2Y,mBAAA3Y,EAAA,+BACA4Y,YAAA5Y,EAAA,wBACA6Y,gBAAA7Y,EAAA,4BACA8Y,eAAA9Y,EAAA,2BACAoM,eAAApM,EAAA,2BAGA+Y,QAAA/Y,EAAA,oBACAgZ,QAAAhZ,EAAA,oBACAiZ,KAAAjZ,EAAA,iBACAkZ,KAAAlZ,EAAA,iBACAmZ,MAAAnZ,EAAA,kBAGAoZ,MAAApZ,EAAA,mBb0nFGwD,YAAY,EAAE6V,aAAa,EAAEC,yBAAyB,EAAEC,oBAAoB,EAAEC,0BAA0B,EAAEC,yBAAyB,EAAEC,wBAAwB,EAAEC,uBAAuB,EAAEC,yBAAyB,EAAEC,wBAAwB,GAAGC,oBAAoB,GAAGC,uBAAuB,GAAGC,0BAA0B,GAAGC,4BAA4B,GAAGC,kBAAkB,GAAGC,2BAA2B,GAAGC,8BAA8B,GAAGC,uBAAuB,GAAGC,2BAA2B,GAAGC,0BAA0B,GAAGC,0BAA0B,GAAGC,mBAAmB,GAAGC,mBAAmB,GAAGC,gBAAgB,GAAGC,gBAAgB,GAAGC,iBAAiB,GAAGC,eAAe,KAAKC,IAAI,SAAS/a,EAAQjB,EAAOD,Gc5pF1rB,QAAA2Z,KACAxK,EAAA5N,KAAAf,MACAA,KAAA+O,UAAAJ,EAAAK,qBAbA,GAAAL,GAAAjO,EAAA,oBAgBAyY,GAAA5X,UAAAC,OAAAC,OAAAkN,EAAApN,WACA4X,EAAA5X,UAAAG,YAAAyX,EACA1Z,EAAAD,QAAA2Z,Id0qFGuC,oBAAoB,KAAKC,IAAI,SAASjb,EAAQjB,EAAOD,GerrFxD,QAAA4Z;AACApZ,KAAA4b,IAAA,EACA5b,KAAA6b,QAAA,EAGApc,EAAAD,QAAA4Z,EASAA,EAAA0C,mBAAA,MASA1C,EAAA2C,sBAAA,SAQA3C,EAAA4C,cAAA,UASA5C,EAAA6C,sBAAA,SASA7C,EAAA8C,sBAAA,OASA9C,EAAA+C,wBAAA,SASA/C,EAAAgD,uBAAA,QAUA5a,OAAAW,eAAAiX,EAAA7X,UAAA,OACAa,IAAA,WACA,MAAApC,MAAAqc,MAEA/Z,IAAA,SAAAC,GACAvC,KAAAqc,OAAA9Z,IAGAvC,KAAAqc,KAAA9Z,EACAvC,KAAA+M,aAAA,MAUAvL,OAAAW,eAAAiX,EAAA7X,UAAA,cACAa,IAAA,WACA,MAAApC,MAAA+M,eAUAvL,OAAAW,eAAAiX,EAAA7X,UAAA,WACAe,IAAA,SAAAC,GACAvC,KAAAsc,aAAA/Z,EACAvC,KAAAuc,cAAAha,EACAvC,KAAAwc,eAAAja,EACAvC,KAAAyc,YAAAla,EACAvC,KAAA+M,aAAA,GAEA3K,IAAA,WAGA,MAAApC,MAAAyc,eAWAjb,OAAAW,eAAAiX,EAAA7X,UAAA,cACAa,IAAA,WACA,MAAApC,MAAAyc,aAEAna,IAAA,SAAAC,GACAvC,KAAAyc,cAAAla,IAGAvC,KAAAyc,YAAAla,EACAvC,KAAA+M,aAAA,MAWAvL,OAAAW,eAAAiX,EAAA7X,UAAA,iBACAa,IAAA,WACA,MAAApC,MAAAwc,gBAEAla,IAAA,SAAAC,GACAvC,KAAAwc,iBAAAja,IAGAvC,KAAAwc,eAAAja,EACAvC,KAAA+M,aAAA,MAYAvL,OAAAW,eAAAiX,EAAA7X,UAAA,eACAa,IAAA,WACA,MAAApC,MAAAsc,cAEAha,IAAA,SAAAC,GACAvC,KAAAsc,eAAA/Z,IAGAvC,KAAAsc,aAAA/Z,EACAvC,KAAA+M,aAAA,MAWAvL,OAAAW,eAAAiX,EAAA7X,UAAA,gBACAa,IAAA,WACA,MAAApC,MAAAuc,eAEAja,IAAA,SAAAC,GACAvC,KAAAuc,gBAAAha,IAGAvC,KAAAuc,cAAAha,EACAvC,KAAA+M,aAAA,MAYAqM,EAAA7X,UAAA4L,OAAA,SAAAuP,EAAAC,UfgsFMC,IAAI,SAASlc,EAAQjB,EAAOD,GgBj5FlC,QAAAmP,KACAyK,EAAArY,KAAAf,MAXA,GAAAoZ,GAAA1Y,EAAA,WAcAiO,GAAApN,UAAAC,OAAAC,OAAA2X,EAAA7X,WACAoN,EAAApN,UAAAG,YAAAiN,EACAlP,EAAAD,QAAAmP,EAEAA,EAAAmC,mBAAA,WACAnC,EAAAK,qBAAA,aAcAL,EAAApN,UAAAsb,aAAA,SAAAH,EAAAI,GACA,GAOAnc,GAAAoc,EAAAC,EAPAC,EAAAjd,KAAA+O,YAAAJ,EAAAK,qBAEAkO,EAAAR,EAAA1b,OACAmc,EAAAL,EACAM,EAAA,EACAC,EAAA,CAIA,KAAA1c,EAAA,EAAAuc,EAAAvc,EAAAA,IAAA,CACAqc,EAAAN,EAAA/b,EACA,IAAA2c,EACAP,GAAAE,EAAAD,EAAArQ,aAAAqQ,EAAApQ,cACA0Q,EAAAL,EAAAD,EAAAva,MAAAua,EAAApa,OAEA4P,MAAAuK,IAAA/Z,SAAA+Z,GACA,OAAAA,EAEAvK,MAAA8K,KAEAF,GAAAE,GAHAD,GAAAN,EAQAK,GAAApd,KAAAud,UAAA,EAAAvd,KAAAud,UAAAvd,KAAAqc,KACAe,GAAApd,KAAAqc,MAAAa,EAAA,GACAE,GAAApd,KAAAwd,SAAA,EAAAxd,KAAAwd,SAAAxd,KAAAqc,IAEA,IAAAR,GAAAoB,EACAjd,KAAAsc,aAAAtc,KAAAuc,cACAvc,KAAAyc,YAAAzc,KAAAwc,cACAY,IAAAvB,EAIA,IAAAwB,IACAA,EAAA,KAGAF,GAAAC,CACA,IAAAK,GAAAN,EAAAE,CAEA,KAAA1c,EAAA,EAAAuc,EAAAvc,EAAAA,IACAqc,EAAAN,EAAA/b,GACAoc,EAAAE,EAAAD,EAAArQ,aAAAqQ,EAAApQ,cACAmQ,EAAA,IACAE,EACAD,EAAAva,MAAAgb,EAAAV,EAEAC,EAAApa,OAAA6a,EAAAV,IAcApO,EAAApN,UAAAmc,YAAA,SAAA/c,EAAA+b,GACA,MAAAlK,OAAAxS,KAAAud,YAAA,IAAA5c,GAIA6R,MAAAxS,KAAAwd,WAAA7c,EAAA,GAAAA,IAAA+b,EAAA1b,OAAA,EAEAhB,KAAAwd,SAEAxd,KAAAqc,KANArc,KAAAud,WAgBA5O,EAAApN,UAAA4L,OAAA,SAAAuP,EAAAC,GACA,GAAAM,GAAAjd,KAAA+O,YAAAJ,EAAAK,qBAGA/B,EAAA0P,EAAAA,EAAA1P,cAAA0Q,IACAzQ,EAAAyP,EAAAA,EAAAzP,eAAAyQ,IAEAC,EAAAX,EAAAhQ,EAAAC,EACA2Q,EAAAZ,EAAAjd,KAAAsc,aAAAtc,KAAAyc,WAGAzc,MAAA6c,aAAAH,EAAAkB,EAKA,KAAA,GAHAhJ,GAAAiJ,EAGAld,EAAA,EAAAA,EAAA+b,EAAA1b,OAAAL,IACA,CACA,GAAAqc,GAAAN,EAAA/b,EAGAsc,GACAD,EAAAvT,EAAAC,KAAAC,MAAAiL,GAEAoI,EAAApT,EAAAF,KAAAC,MAAAiL,EAEA,IAAA0I,GAAAL,EAAAD,EAAAva,MAAAua,EAAApa,MAEAgS,IAAA0I,EAAAtd,KAAA0d,YAAA/c,EAAA+b,KAUAlb,OAAAW,eAAAwM,EAAApN,UAAA,YACAe,IAAA,SAAAC,GACAA,IAAAvC,KAAAud,YAGAvd,KAAAud,UAAAhb,EACAvC,KAAA+M,aAAA,IAEA3K,IAAA,WACA,MAAApC,MAAAud,aAUA/b,OAAAW,eAAAwM,EAAApN,UAAA,WACAe,IAAA,SAAAC,GACAA,IAAAvC,KAAAwd,WAGAxd,KAAAwd,SAAAjb,EACAvC,KAAA+M,aAAA,IAEA3K,IAAA,WACA,MAAApC,MAAAwd,chB+5FGM,WAAW,KAAKC,IAAI,SAASrd,EAAQjB,EAAOD,GiB1kG/C,QAAA6Z,KACAC,EAAAvY,KAAAf,MACAA,KAAAge,QAAA1E,EAAA2E,gBACAje,KAAAke,aAAA5E,EAAA6E,oBAfA,GAAA7E,GAAA5Y,EAAA,gBAkBA2Y,GAAA9X,UAAAC,OAAAC,OAAA6X,EAAA/X,WACA8X,EAAA9X,UAAAG,YAAA2X,EACA5Z,EAAAD,QAAA6Z,EAeA7X,OAAAW,eAAAkX,EAAA9X,UAAA,OACAe,IAAA,SAAAC,GACAvC,KAAAoe,aAAA7b,EACAvC,KAAAqe,eAAA9b,EACAvC,KAAA+M,aAAA,GAEA3K,IAAA,WACA,MAAApC,MAAAoe,kBjB0lGGE,gBAAgB,KAAKC,IAAI,SAAS7d,EAAQjB,EAAOD,GkB1nGpD,QAAA8Z,KACAF,EAAArY,KAAAf,MACAA,KAAAwe,iBAAA,EACAxe,KAAAqe,eAAA,EACAre,KAAAoe,aAAA,EACApe,KAAAye,qBAAAnF,EAAAoF,6BACA1e,KAAA2e,mBAAArF,EAAAsF,2BACA5e,KAAAge,QAAA1E,EAAAuF,YACA7e,KAAAke,aAAA5E,EAAAwF,iBACA9e,KAAA+M,aAAA,EAnBA,GAAAqM,GAAA1Y,EAAA,WAsBA4Y,GAAA/X,UAAAC,OAAAC,OAAA2X,EAAA7X,WACA+X,EAAA/X,UAAAG,YAAA4X,EACA7Z,EAAAD,QAAA8Z,EAGAA,EAAAwF,iBAAA,OACAxF,EAAA6E,oBAAA,UASA7E,EAAAyF,wBAAA,MASAzF,EAAAsF,2BAAA,SASAtF,EAAA0F,2BAAA,SAQA1F,EAAA2F,4BAAA,UASA3F,EAAA4F,2BAAA,OASA5F,EAAAoF,6BAAA,SASApF,EAAA6F,4BAAA,QAQA7F,EAAA8F,8BAAA,UAQA9F,EAAA+F,kBAAA,aAQA/F,EAAA2E,gBAAA,WAUA3E,EAAA/X,UAAA4L,OAAA,SAAAuP,EAAAC,GACA,GAAA2C,GAAAtf,KAAAke,eAAA5E,EAAAwF,gBACA,IAAA,IAAApC,EAAA1b,OAAA,CAIA,GAKAL,GAAAqc,EALAvK,EAAAkK,EAAAA,EAAAlK,SAAA8M,OAAAC,kBACA9M,EAAAiK,EAAAA,EAAAjK,UAAA6M,OAAAC,kBACAvS,EAAA0P,EAAAA,EAAA1P,cAAA0Q,IACAzQ,EAAAyP,EAAAA,EAAAzP,eAAAyQ,IAGA8B,EAAA,EACAC,EAAA,CAGA,KAAA/e,EAAA,EAAAA,EAAA+b,EAAA1b,OAAAL,IAEA,GADAqc,EAAAN,EAAA/b,GACA,CAGA,GAAAgf,GAAA3C,EAAAva,MACAmd,EAAA5C,EAAApa,MACA+c,GAAAF,IACAA,EAAAE,GAEAC,EAAAF,IACAA,EAAAE,GAKA5f,KAAAwe,kBACAiB,EAAAC,EACAA,EAAAD,EAEAC,EAAAD,IACAA,EAAAC,GAKA,IAAAG,GAAAlC,IACAmC,EAAAnC,IAEAoC,EAAAT,EAAA5C,EAAA1b,OAAA,CAEAwR,OAAAvF,GAMAuF,MAAAC,KACAoN,EAAApN,EACAsN,GAAAtN,EACAzS,KAAAsc,aAAAtc,KAAAuc,cACAvc,KAAAqe,iBAAAoB,EAAAzf,KAAAqe,kBATAwB,EAAA5S,EACA8S,GAAA9S,EACAjN,KAAAsc,aAAAtc,KAAAuc,cACAvc,KAAAqe,iBAAAoB,EAAAzf,KAAAqe,iBAQA0B,EAAArW,KAAAC,MAAAD,KAAAoE,IAAAiS,EAAA,GAEA,IAAAC,GAAAV,EAAA,EAAA5C,EAAA1b,MACAwR,OAAAtF,GAKAsF,MAAAE,KACAoN,EAAApN,EACAsN,GAAAtN,EACA1S,KAAAyc,YAAAzc,KAAAwc,eACAxc,KAAAoe,eAAAsB,EAAA1f,KAAAoe,gBARA0B,EAAA5S,EACA8S,GAAA9S,EACAlN,KAAAyc,YAAAzc,KAAAwc,eACAxc,KAAAoe,eAAAsB,EAAA1f,KAAAoe,eAOA4B,EAAAtW,KAAAC,MAAAD,KAAAoE,IAAAkS,EAAA,GAEA,IAAAC,GAAAjgB,KAAAsc,aACA4D,EAAAlgB,KAAAyc,YAEA0D,EAAAJ,EAAAC,EACAI,EAAA,EACAC,EAAAF,EACAG,EAAAhB,EAAAW,EAAAC,EACAK,EAAAN,EACAO,EAAAN,EACAO,EAAA,CACA,KAAA9f,EAAA,EAAAA,EAAA+b,EAAA1b,OAAAL,IACA,CAuCA,GAtCAqc,EAAAN,EAAA/b,GACA2e,EACA,IAAAmB,GAAAA,EAAAV,IAAA,IAEAQ,EAAAD,EACAE,GAAAd,EAAA1f,KAAAoe,cAGA,IAAAqC,GAAA9f,EAAAqf,IAAA,IAEAO,GAAAd,EAAAzf,KAAAqe,eACAmC,EAAAF,GAGAG,IAAAJ,IACAD,IACAC,GAAAF,EAKAb,EACAtf,KAAAge,UAAA1E,EAAA+F,mBAEAkB,EAAAD,IAAAL,EAAAJ,EAAAO,EACAI,EAAAN,GACAlgB,KAAAge,UAAA1E,EAAA2E,kBACAuC,EAAAN,EAAAJ,EAAAM,GAGApgB,KAAAge,UAAA1E,EAAA+F,kBACAkB,EAAAN,EAAAJ,EAAAO,EACApgB,KAAAge,UAAA1E,EAAA2E,kBACAsC,EAAAN,EACAO,EAAAF,EAAAJ,EAAAJ,EAAAM,IAIApD,EAAA,CACA,OAAAhd,KAAAye,sBACA,IAAAnF,GAAA8F,8BACApC,EAAAvT,EAAA8W,EACAvD,EAAAva,MAAAgd,CACA,MACA,KAAAnG,GAAA4F,2BACAlC,EAAAvT,EAAA8W,CACA,MACA,KAAAjH,GAAA6F,4BACAnC,EAAAvT,EAAA8W,EAAAd,EAAAzC,EAAAva,KACA,MACA,SACAua,EAAAvT,EAAA8W,GAAAd,EAAAzC,EAAAva,OAAA,EAEA,OAAAzC,KAAA2e,oBACA,IAAArF,GAAA2F,4BACAjC,EAAApT,EAAA4W,EACAxD,EAAApa,OAAA8c,CACA,MACA,KAAApG,GAAAyF,wBACA/B,EAAApT,EAAA4W,CACA,MACA,KAAAlH,GAAA0F,2BACAhC,EAAApT,EAAA4W,EAAAd,EAAA1C,EAAApa,MACA,MACA,SACAoa,EAAApT,EAAA4W,GAAAd,EAAA1C,EAAApa,QAAA,GAGA0c,EACAiB,GAAAd,EAAAzf,KAAAqe,eAEAmC,GAAAd,EAAA1f,KAAAoe,aAEAqC,IAGAzgB,KAAA+M,aAAA,IASAvL,OAAAW,eAAAmX,EAAA/X,UAAA,kBACAe,IAAA,SAAAoe,GACA1gB,KAAAwe,gBAAAkC,EACA1gB,KAAA+M,aAAA,GAEA3K,IAAA,WACA,MAAApC,MAAAwe,qBlBwoGGV,WAAW,KAAK6C,IAAI,SAASjgB,EAAQjB,EAAOD,GmB36G/C,QAAA+Z,KACAD,EAAAvY,KAAAf,MACAA,KAAAge,QAAA1E,EAAA+F,kBACArf,KAAAke,aAAA5E,EAAAwF,iBAdA,GAAAxF,GAAA5Y,EAAA,gBAiBA6Y,GAAAhY,UAAAC,OAAAC,OAAA6X,EAAA/X,WACAgY,EAAAhY,UAAAG,YAAA6X,EACA9Z,EAAAD,QAAA+Z,EAgBA/X,OAAAW,eAAAoX,EAAAhY,UAAA,OACAa,IAAA,WACA,MAAApC,MAAAqe,gBAEA/b,IAAA,SAAAC,GACAvC,KAAAoe,aAAA7b,EACAvC,KAAAqe,eAAA9b,EACAvC,KAAA+M,aAAA,OnB07GGuR,gBAAgB,KAAKsC,IAAI,SAASlgB,EAAQjB,EAAOD,GoBz9GpD,QAAAga,KACA7K,EAAA5N,KAAAf,MACAA,KAAA+O,UAAAJ,EAAAmC,mBAbA,GAAAnC,GAAAjO,EAAA,oBAgBA8Y,GAAAjY,UAAAC,OAAAC,OAAAkN,EAAApN,WACAiY,EAAAjY,UAAAG,YAAA8X,EACA/Z,EAAAD,QAAAga,IpBu+GGkC,oBAAoB,KAAKmF,IAAI,SAASngB,EAAQjB,EAAOD,GqBl/GxD,QAAAsN,KAOA9M,KAAAiN,cAAA0Q,IAQA3d,KAAAkN,eAAAyQ,IAOA3d,KAAAyJ,EAAA,EAOAzJ,KAAA4J,EAAA,EAGAnK,EAAAD,QAAAsN,OrB2/GMgU,IAAI,SAASpgB,EAAQjB,EAAOD,GsBxhHlC,QAAAia,GAAAzP,EAAAvG,EAAAhB,EAAAG,GACAiX,EAAA9Y,KAAAf,KAAAgK,EAAAvG,EAAAhB,EAAAG,GAXA,GAAAiX,GAAAnZ,EAAA,UAcA+Y,GAAAlY,UAAAC,OAAAC,OAAAoY,EAAAtY,WACAkY,EAAAlY,UAAAG,YAAA+X,EACAha,EAAAD,QAAAia,EAQAA,EAAAlY,UAAAwf,WAAA,WACA/gB,KAAAyC,OAAA,GAAAzC,KAAA4C,QAAA,GAGA5C,KAAAghB,SAAAC,OAAAjhB,KAAAwC,OAAA,EAAA,GACA0e,OAAAlhB,KAAAwC,OAAAxC,KAAA2C,QAAA,GACAue,OAAAlhB,KAAAwC,OAAA,EAAAxC,KAAA2C,SACAue,OAAA,EAAAlhB,KAAA2C,QAAA,GACAue,OAAAlhB,KAAAwC,OAAA,EAAA,MtBqiHG2e,UAAU,KAAKC,IAAI,SAAS1gB,EAAQjB,EAAOD,GuB3jH9C,QAAAka,GAAA1P,EAAAvG,EAAAhB,EAAAG,GACAiX,EAAA9Y,KAAAf,KAAAgK,EAAAvG,EAAAhB,EAAAG,GAXA,GAAAiX,GAAAnZ,EAAA,UAcAgZ,GAAAnY,UAAAC,OAAAC,OAAAoY,EAAAtY,WACAmY,EAAAnY,UAAAG,YAAAgY,EACAja,EAAAD,QAAAka,EAQAA,EAAAnY,UAAAwf,WAAA,WACA/gB,KAAAyC,OAAA,GAAAzC,KAAA4C,QAAA,GAGA5C,KAAAqhB,YAAA,EAAA,EAAArhB,KAAAyC,MAAAzC,KAAA4C,WvBwkHGue,UAAU,KAAKG,IAAI,SAAS5gB,EAAQjB,EAAOD,GwBzlH9C,QAAAma,GAAA3P,EAAAvG,EAAAhB,EAAAG,EAAA2e,GACA1H,EAAA9Y,KAAAf,KAAAgK,EAAAvG,EAAAhB,EAAAG,GACA5C,KAAAwhB,SAAAD,EAbA,GAAA1H,GAAAnZ,EAAA,UAgBAiZ,GAAApY,UAAAC,OAAAC,OAAAoY,EAAAtY,WACAoY,EAAApY,UAAAG,YAAAiY,EACAla,EAAAD,QAAAma,EAQAA,EAAApY,UAAAwf,WAAA,WACA/gB,KAAAyC,OAAA,GAAAzC,KAAA4C,QAAA,IAGA5C,KAAAuhB,SACAvhB,KAAAihB,OAAAjhB,KAAAwC,OAAA,GACAxC,KAAAkhB,OAAA,EAAAlhB,KAAA2C,WAEA3C,KAAAihB,OAAA,EAAA,GACAjhB,KAAAkhB,OAAAlhB,KAAAwC,OAAAxC,KAAA2C,YAUAnB,OAAAW,eAAAwX,EAAApY,UAAA,WACAa,IAAA,WACA,MAAApC,MAAAwhB,UAEAlf,IAAA,SAAAif,GACAvhB,KAAAwhB,SAAAD,EACAvhB,KAAAqQ,SAAA,OxBymHG8Q,UAAU,KAAKM,IAAI,SAAS/gB,EAAQjB,EAAOD,GyBjpH9C,QAAAoa,GAAA5P,EAAAvG,EAAAhB,EAAAG,EAAA8e,GACA7H,EAAA9Y,KAAAf,KAAAgK,EAAAvG,EAAAhB,EAAAG,GACA5C,KAAA2hB,QAAAD,EAbA,GAAA7H,GAAAnZ,EAAA,UAgBAkZ,GAAArY,UAAAC,OAAAC,OAAAoY,EAAAtY,WACAqY,EAAArY,UAAAG,YAAAkY,EACAna,EAAAD,QAAAoa,EAQAA,EAAArY,UAAAwf,WAAA,WACA/gB,KAAAyC,OAAA,GAAAzC,KAAA4C,QAAA,IAGA5C,KAAA0hB,OACA1hB,KAAA4hB,gBAAA,EAAA,EACA5hB,KAAAwC,OAAAxC,KAAA2C,QACA3C,KAAA0hB,QAEA1hB,KAAAmQ,SAAA,EAAA,EAAAnQ,KAAAwC,OAAAxC,KAAA2C,WAUAnB,OAAAW,eAAAyX,EAAArY,UAAA,UACAa,IAAA,WACA,MAAApC,MAAA2hB,SAEArf,IAAA,SAAAof,GACA1hB,KAAA2hB,QAAAD,EACA1hB,KAAAqQ,SAAA,OzBgqHG8Q,UAAU,KAAKU,IAAI,SAASnhB,EAAQjB,EAAOD,G0B3sH9C,QAAAqa,GAAA7P,EAAAvG,EAAAhB,EAAAG,GACAzB,KAAA0O,SAAA9O,KAAAf,MACAA,KAAA8hB,OAAA9X,EACAhK,KAAA+hB,OAAAte,GAAA,EACAzD,KAAAwC,OAAAC,EACAzC,KAAA2C,QAAAC,EACA5C,KAAAqQ,SAAA,EAGAwJ,EAAAtY,UAAAC,OAAAC,OAAAN,KAAA0O,SAAAtO,WACAsY,EAAAtY,UAAAG,YAAAmY,EACApa,EAAAD,QAAAqa,EASArY,OAAAW,eAAA0X,EAAAtY,UAAA,SACAa,IAAA,WACA,MAAApC,MAAAwC,QAEAF,IAAA,SAAAG,GACAzC,KAAAwC,OAAAC,EACAzC,KAAAqQ,SAAA,KAUA7O,OAAAW,eAAA0X,EAAAtY,UAAA,UACAa,IAAA,WACA,MAAApC,MAAA2C,SAEAL,IAAA,SAAAM,GACA5C,KAAA2C,QAAAC,EACA5C,KAAAqQ,SAAA,KAWA7O,OAAAW,eAAA0X,EAAAtY,UAAA,SACAa,IAAA,WACA,MAAApC,MAAA8hB,QAEAxf,IAAA,SAAA0H,GACAhK,KAAA8hB,OAAA9X,EACAhK,KAAAqQ,SAAA,KAWA7O,OAAAW,eAAA0X,EAAAtY,UAAA,SACAa,IAAA,WACA,MAAApC,MAAA+hB,QAEAzf,IAAA,SAAAmB,GACAzD,KAAA+hB,OAAAte,EACAzD,KAAAqQ,SAAA,KASAwJ,EAAAtY,UAAAygB,WAAA,WACAhiB,KAAAkQ,UAAAlQ,KAAAgK,MAAAhK,KAAAyD,QAQAoW,EAAAtY,UAAA0gB,WAAA,WACAjiB,KAAAkiB,QACAliB,KAAAmiB,UAAAniB,KAAAkiB,OAAAliB,KAAAoiB,cAUAvI,EAAAtY,UAAAwf,WAAA,WACA/gB,KAAAyC,OAAA,GAAAzC,KAAA4C,QAAA,GAIA5C,KAAAmQ,SAAA,EAAA,EAAAnQ,KAAAwC,OAAAxC,KAAA2C,UAIAkX,EAAAtY,UAAAO,gBAAA,WACA9B,KAAA+B,SAEAZ,KAAA0O,SAAAtO,UAAAO,gBAAAf,KAAAf,OAUA6Z,EAAAtY,UAAAQ,OAAA,WACA/B,KAAAqQ,UAIArQ,KAAA+P,QACA/P,KAAAgiB,aACAhiB,KAAAiiB,aACAjiB,KAAA+gB,aAEA/gB,KAAAqQ,SAAA,S1ButHMgS,IAAI,SAAS3hB,EAAQjB,EAAOD,G2Bh2HlC,QAAAsa,GAAAha,GAEAE,KAAAsiB,UAEAtiB,KAAAsJ,UAAAtJ,KAAAsJ,cAEAtJ,KAAAsJ,UAAAiZ,KAAAviB,KAAAsJ,UAAAiZ,MAAA,OAEAviB,KAAAsJ,UAAAQ,KAAA9J,KAAAsJ,UAAAQ,MAAA,cAEAhK,KAAA,GAAAkD,SAAAlD,KACAG,KAAA2B,MAAA5B,MAEAA,KAAAwiB,aAAA,KAGAxiB,KAAAwR,WAAA,EAGAxR,KAAA+I,WAAA,EA5BA,GAAA0Z,GAAA/hB,EAAA,6BA8BAjB,GAAAD,QAAAsa,EAUAA,EAAAvY,UAAAmhB,QAAA,SAAAC,EAAAC,EAAAvf,GACArD,KAAAsiB,OAAAK,GAAA3iB,KAAAsiB,OAAAK,OACA3iB,KAAAsiB,OAAAK,GAAAC,GAAAvf,GAUAyW,EAAAvY,UAAAshB,UAAA,SAAAC,GACA9iB,KAAA+iB,UAAAD,EACA7iB,KAAA+iB,OACAC,IAAAH,GACAI,KAAAljB,KAAAmjB,aAAAnc,KAAAhH,QAQA8Z,EAAAvY,UAAA4hB,aAAA,SAAAH,EAAAI,GACApjB,KAAAwiB,aAAAY,EAAAA,UAAApjB,KAAA+iB,WAAAM,UAWAvJ,EAAAvY,UAAA+hB,kBAAA,SAAA3f,EAAA4f,GACA,GAAAC,GAAAxjB,IACA,OAAA,YACA,GAAAyjB,GAAAD,EAAAhB,aAAA7e,EACA,KAAA8f,EACA,KAAA,IAAA7iB,OAAA,gBAAA+C,EAAA,wCAGA,OAAA,IAAA8e,GAAAgB,EAAAF,KAYAzJ,EAAAvY,UAAAmiB,SAAA,SAAA/f,GACA,GAAA6f,GAAAxjB,IACA,OAAA,YACA,MAAA,IAAAmB,MAAAiG,OAAAoc,EAAAhB,aAAA7e,MAYAmW,EAAAvY,UAAAsC,QAAA,SAAA8e,EAAA7J,GACA,MAAA9Y,MAAAsiB,OAAAK,IAAA3iB,KAAAsiB,OAAAK,GAAA7J,GACA9Y,KAAAsiB,OAAAK,GAAA7J,KAEA,MAQAgB,EAAA6J,YAAA,WACA1jB,KAAA2B,MAAAoB,U3B42HG4gB,6BAA6B,KAAKC,IAAI,SAASnjB,EAAQjB,EAAOD,IACjE,SAAWM,G4Bz+HX,GAAA,mBAAAqB,MAIA,YAHAtB,OAAAikB,SACAjkB,OAAAikB,QAAAC,KAAA,mDAKA,IAAAC,GAAAvkB,EAAAD,QAAAkB,EAAA,SAGAsjB,GAAAC,MAAAvjB,EAAA,WAGAsjB,EAAAhB,OAAA7hB,KAAA6hB,OAMAljB,EAAAG,KAAA+jB,I5B4+HGjjB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExHqkB,SAAS,GAAGC,UAAU,KAAKC,IAAI,SAAS1jB,EAAQjB,EAAOD,G6Bv/H1D,QAAA+K,MAGA9K,EAAAD,QAAA+K,EAUAA,EAAA8Z,YAAA,KAMA9Z,EAAAC,YAAA,WAEA,IAAAD,EAAA8Z,YAAA,CACA,GAAAC,GAAAzf,SAAAa,cAAA,QACA4e,GAAA3b,KAAA,OACA2b,EAAAC,SAAA,GACAD,EAAAjb,MAAAuL,SAAA,QACA0P,EAAAjb,MAAAmb,QAAA,EACAF,EAAAjb,MAAAob,cAAA,OACAH,EAAAjb,MAAAqb,KAAA,MACAJ,EAAAjb,MAAAsb,OAAA,MACAL,EAAAjb,MAAAqb,KAAA,SACAJ,EAAAjb,MAAAub,IAAA,SACAN,EAAAjb,MAAAwb,OAAA,GAGAP,EAAArd,iBAAA,OAAA,WAEAhH,KAAAqK,aAAAM,cAEA3K,KAAAqK,aAAAM,aAAA0B,qBAEA,GAGAgY,EAAArd,iBAAA,UAAA,SAAA/G,GAEAD,KAAAqK,aAAAM,eAEA1K,EAAAA,GAAAL,OAAA2T,MACAvT,KAAAqK,aAAAM,aAAAH,UAEAxK,KAAAqK,aAAAM,aAAAE,UAAA5K,MAMAokB,EAAArd,iBAAA,QAAA,SAAA/G,GAEAD,KAAAqK,aAAAM,eAEA1K,EAAAA,GAAAL,OAAA2T,MACAvT,KAAAqK,aAAAM,aAAAH,UAEAxK,KAAAqK,aAAAM,aAAAC,QAAA3K,MAKA2E,SAAAC,KAAAC,YAAAuf,GAEA/Z,EAAA8Z,YAAAC,EAEA,MAAA/Z,GAAA8Z,aASA9Z,EAAAua,SAAA,QAKAva,EAAA2B,MAAA,WAEA3B,EAAA8Z,aACA9Z,EAAA8Z,YAAAnY,SAOA3B,EAAA4B,KAAA,WAEA5B,EAAA8Z,aACA9Z,EAAA8Z,YAAAlY,QASA5B,EAAAsM,aAAA,SAAAF,EAAAC,GAEArM,EAAA8Z,aACA9Z,EAAA8Z,YAAAvM,eAAAnB,EACApM,EAAA8Z,YAAAU,aAAAnO,GAEArM,EAAAya,YAAArO,EAAAC,IAQArM,EAAA4N,aAAA,WACA,MAAA5N,GAAA8Z,aAEA9Z,EAAA8Z,YAAAvM,eACAvN,EAAA8Z,YAAAU,cAGAxa,EAAAya,YAQAza,EAAA0N,QAAA,WACA,GAAA1N,EAAA8Z,YAAA,CACA,GAAAS,GAAAva,EAAAua,SACAG,EAAA1a,EAAA8Z,YAAAS,EACA,OAAAG,GAAA7O,QAAA,MAAA,IAEA,MAAA7L,GAAA2L,OASA3L,EAAA8L,QAAA,SAAAlN,GACA,GAAAoB,EAAA8Z,YAAA,CACA,GAAAS,GAAAva,EAAAua,QACAva,GAAA8Z,YAAAS,GAAA3b,MAEAoB,GAAA2L,MAAA/M,GAQAoB,EAAAgM,aAAA,SAAAvV,GACAuJ,EAAA8Z,aACArjB,GAAA,EAAAA,EACAuJ,EAAA8Z,YAAAa,gBAAA,aAEA3a,EAAA8Z,YAAAc,aAAA,YAAAnkB,GAGAuJ,EAAA6a,WAAApkB,GAIAuJ,EAAAkM,QAAA,SAAA9N,GACA4B,EAAA8Z,YACA9Z,EAAA8Z,YAAA1b,KAAAA,EAEA4B,EAAA8a,MAAA1c,GAIA4B,EAAA+a,QAAA,WACA,MAAA/a,GAAA8Z,YACA9Z,EAAA8Z,YAAA1b,KAEA4B,EAAA8a,Y7BqgIME,IAAI,SAAS7kB,EAAQjB,EAAOD,G8BnsIlC,QAAAijB,GAAAgB,EAAA+B,GACArkB,KAAAC,UAAAL,KAAAf,MAEAA,KAAAwlB,KAAAA,EACAxlB,KAAAylB,YAAAhC,EAAAgC,YACAzlB,KAAA0lB,MAAAjC,EAAAiC,MAEA1lB,KAAAwC,OAAAxC,KAAA0lB,MAAAjjB,MACAzC,KAAA2C,QAAA3C,KAAA0lB,MAAA9iB,MAGA,IAAA+iB,GAAAH,EAAA/b,EACAmc,EAAAJ,EAAA/iB,MACAojB,EAAA7lB,KAAA0lB,MAAAjjB,OAAAmjB,EAAAD,GAGAG,EAAAN,EAAA5b,EACAmc,EAAAP,EAAA5iB,OACAojB,EAAAhmB,KAAA0lB,MAAA9iB,QAAAmjB,EAAAD,EAGAH,GAAA,GAAAG,EAAA,IACA9lB,KAAAimB,GAAAjmB,KAAAkmB,YAAA,EAAA,EAAAP,EAAAG,GACA9lB,KAAAmF,SAAAnF,KAAAimB,KAEAL,EAAA,GAAAE,EAAA,IACA9lB,KAAAmmB,GAAAnmB,KAAAkmB,YAAAP,EAAA,EAAAC,EAAAE,GACA9lB,KAAAmF,SAAAnF,KAAAmmB,IACAnmB,KAAAmmB,GAAA1c,EAAAkc,GAEAE,EAAA,GAAAC,EAAA,IACA9lB,KAAAomB,GAAApmB,KAAAkmB,YAAAP,EAAAC,EAAA,EAAAC,EAAAC,GACA9lB,KAAAmF,SAAAnF,KAAAomB,KAIAT,EAAA,GAAAI,EAAA,IACA/lB,KAAAqmB,GAAArmB,KAAAkmB,YAAA,EAAAJ,EAAAH,EAAAI,GACA/lB,KAAAmF,SAAAnF,KAAAqmB,IACArmB,KAAAqmB,GAAAzc,EAAAkc,GAEAF,EAAA,GAAAG,EAAA,IACA/lB,KAAAsmB,GAAAtmB,KAAAkmB,YAAAP,EAAAG,EAAAF,EAAAG,GACA/lB,KAAAmF,SAAAnF,KAAAsmB,IACAtmB,KAAAsmB,GAAA1c,EAAAkc,EACA9lB,KAAAsmB,GAAA7c,EAAAkc,GAEAE,EAAA,GAAAE,EAAA,IACA/lB,KAAAumB,GAAAvmB,KAAAkmB,YAAAP,EAAAC,EAAAE,EAAAD,EAAAE,GACA/lB,KAAAmF,SAAAnF,KAAAumB,IACAvmB,KAAAumB,GAAA3c,EAAAkc,GAIAH,EAAA,GAAAK,EAAA,IACAhmB,KAAAwmB,GAAAxmB,KAAAkmB,YAAA,EAAAJ,EAAAC,EAAAJ,EAAAK,GACAhmB,KAAAmF,SAAAnF,KAAAwmB,KAEAZ,EAAA,GAAAI,EAAA,IACAhmB,KAAAymB,GAAAzmB,KAAAkmB,YAAAP,EAAAG,EAAAC,EAAAH,EAAAI,GACAhmB,KAAAmF,SAAAnF,KAAAymB,IACAzmB,KAAAymB,GAAAhd,EAAAkc,GAEAE,EAAA,GAAAG,EAAA,IACAhmB,KAAA0mB,GAAA1mB,KAAAkmB,YAAAP,EAAAC,EAAAE,EAAAC,EAAAF,EAAAG,GACAhmB,KAAAmF,SAAAnF,KAAA0mB,IAKA,IAAAlD,GAAAxjB,IACAH,QAAAoH,iBAAA,SAAA,WACAuc,EAAAmD,aAAA,KAAAnD,EAAAyC,IACAzC,EAAAmD,aAAA,KAAAnD,EAAA2C,IACA3C,EAAAmD,aAAA,KAAAnD,EAAA4C,IAEA5C,EAAAmD,aAAA,KAAAnD,EAAA6C,IACA7C,EAAAmD,aAAA,KAAAnD,EAAA8C,IACA9C,EAAAmD,aAAA,KAAAnD,EAAA+C,IAEA/C,EAAAmD,aAAA,KAAAnD,EAAAgD,IACAhD,EAAAmD,aAAA,KAAAnD,EAAAiD,IACAjD,EAAAmD,aAAA,KAAAnD,EAAAkD,MAKAjE,EAAAlhB,UAAAC,OAAAC,OAAAN,KAAAC,UAAAG,WACAkhB,EAAAlhB,UAAAG,YAAA+gB,EACAhjB,EAAAD,QAAAijB,EAQAA,EAAAlhB,UAAAolB,aAAA,SAAAhjB,EAAAijB,GACA5mB,KAAA6mB,eAAAljB,KACAijB,EAAAnkB,MAAAiH,KAAAod,KAAA9mB,KAAA6mB,eAAAljB,GAAAlB,MACAzC,KAAA+mB,eAAAtmB,GACAT,KAAA+mB,eAAAtmB,EACAmmB,EAAAhkB,OAAA8G,KAAAod,KAAA9mB,KAAA6mB,eAAAljB,GAAAf,OACA5C,KAAA+mB,eAAAC,GACAhnB,KAAA+mB,eAAAC,IAUAvE,EAAAlhB,UAAA0lB,cAAA,WACAjnB,KAAAknB,kBAEA,IAAAL,GAAA7mB,KAAA6mB,kBAEAM,EAAA,SAAAxjB,EAAAijB,GACAA,GAAAA,EAAAnkB,OAAAmkB,EAAAhkB,SACAikB,EAAAljB,IACAlB,MAAAmkB,EAAAnkB,MACAG,OAAAgkB,EAAAhkB,SAKAukB,GAAA,KAAAnnB,KAAAimB,IACAkB,EAAA,KAAAnnB,KAAAmmB,IACAgB,EAAA,KAAAnnB,KAAAomB,IAEAe,EAAA,KAAAnnB,KAAAqmB,IACAc,EAAA,KAAAnnB,KAAAsmB,IACAa,EAAA,KAAAnnB,KAAAumB,IAEAY,EAAA,KAAAnnB,KAAAwmB,IACAW,EAAA,KAAAnnB,KAAAymB,IACAU,EAAA,KAAAnnB,KAAA0mB,KASAjE,EAAAlhB,UAAA2kB,YAAA,SAAAzc,EAAAG,EAAAwd,EAAAC,GACA,GAAA3B,GAAA,GAAAvkB,MAAAuH,UAAA1I,KAAA0lB,MAAAjc,EAAAA,EAAAzJ,KAAA0lB,MAAA9b,EAAAA,EAAAwd,EAAAC,GACAlnB,EAAA,GAAAgB,MAAA+E,QAAAlG,KAAAylB,YAAAC,EAAAA,EAAA4B,QAAA,KACA,OAAA,IAAAnmB,MAAAiG,OAAAjH,IASAqB,OAAAW,eAAAsgB,EAAAlhB,UAAA,SACAa,IAAA,WACA,MAAApC,MAAAwC,QAEAF,IAAA,SAAAC,GACAvC,KAAAwC,SAAAD,IACAvC,KAAAwC,OAAAD,EACAvC,KAAAqQ,SAAA,EACArQ,KAAAinB,oBAWAzlB,OAAAW,eAAAsgB,EAAAlhB,UAAA,UACAa,IAAA,WACA,MAAApC,MAAA2C,SAEAL,IAAA,SAAAC,GACAvC,KAAA2C,UAAAJ,IACAvC,KAAA2C,QAAAJ,EACAvC,KAAAqQ,SAAA,EACArQ,KAAAinB,oBAUAxE,EAAAlhB,UAAAQ,OAAA,WACA/B,KAAAqQ,UACArQ,KAAAknB,mBACAlnB,KAAAqQ,SAAA,IAUAoS,EAAAlhB,UAAA2lB,iBAAA,WAEA,GAAAvB,GAAA3lB,KAAAwlB,KAAA/b,EACAmc,EAAA5lB,KAAAwlB,KAAA/iB,MACAojB,EAAA7lB,KAAA0lB,MAAAjjB,OAAAmjB,EAAAD,GAGAG,EAAA9lB,KAAAwlB,KAAA5b,EACAmc,EAAA/lB,KAAAwlB,KAAA5iB,OACAojB,EAAAhmB,KAAA0lB,MAAA9iB,QAAAmjB,EAAAD,GAEAyB,EAAAvnB,KAAAwC,OAAAqjB,EACA2B,EAAAxnB,KAAA2C,QAAAqjB,CACAhmB,MAAAumB,KACAvmB,KAAAumB,GAAA9c,EAAA8d,GAEAvnB,KAAA0mB,KACA1mB,KAAA0mB,GAAAjd,EAAA8d,EACAvnB,KAAA0mB,GAAA9c,EAAA4d,GAEAxnB,KAAAomB,KACApmB,KAAAomB,GAAA3c,EAAA8d,EAGA,IAAAE,GAAAznB,KAAAwC,QAAAmjB,EAAAE,GACA6B,EAAA1nB,KAAA2C,SAAAmjB,EAAAE,EACAhmB,MAAAsmB,KACAtmB,KAAAsmB,GAAA7jB,MAAAglB,EACAznB,KAAAsmB,GAAA1jB,OAAA8kB,GAEA1nB,KAAAymB,KACAzmB,KAAAymB,GAAAhkB,MAAAglB,EACAznB,KAAAymB,GAAA7c,EAAA4d,GAEAxnB,KAAAmmB,KACAnmB,KAAAmmB,GAAA1jB,MAAAglB,GAEAznB,KAAAqmB,KACArmB,KAAAqmB,GAAAzjB,OAAA8kB,GAEA1nB,KAAAumB,KACAvmB,KAAAumB,GAAA3jB,OAAA8kB,GAGA1nB,KAAAwmB,KACAxmB,KAAAwmB,GAAA5c,EAAA4d,IAeA/E,EAAAkF,UAAA,SAAAC,EAAApC,GACA,GAAA/B,GAAAtiB,KAAA8iB,MAAA4D,aAAAD,EACA,KAAAnE,EACA,KAAA,IAAA7iB,OAAA,gBAAAgnB,EAAA,wCAGA,OAAA,IAAAnF,GAAAgB,EAAA+B,S9BitIMsC,IAAI,SAASpnB,EAAQjB,EAAOD,G+Bv+IlC,QAAAkV,KAEA1U,KAAAuC,MAAA,EAOAvC,KAAAqT,OAAA,KAGA5T,EAAAD,QAAAkV,O/Bi/IMqT,IAAI,SAASrnB,EAAQjB,EAAOD,GgC1/IlCC,EAAAD,SACA+K,aAAA7J,EAAA,kBACAsnB,kBAAAtnB,EAAA,uBACAkU,SAAAlU,EAAA,cACA+hB,eAAA/hB,EAAA,oBACAgU,WAAAhU,EAAA,mBhCugJGunB,iBAAiB,GAAGC,mBAAmB,GAAGC,eAAe,GAAGC,sBAAsB,GAAGC,aAAa,KAAKC,IAAI,SAAS5nB,EAAQjB,EAAOD,GiC1gJtI,QAAAwoB,GAAAxjB,EAAA+jB,GACA,GAAAC,GAAAhkB,EAAAgkB,MACA,IAAAD,GAAAvlB,SAAAulB,EAAA,CACA,GAAAvlB,SAAA/C,KAAAwoB,mBACA,MAEAxoB,MAAAwoB,mBAAA,SAAAjV,GACAA,EAAA3T,OAAA2T,OAAAA,CACA,IAAAC,GAAA/J,KAAAoE,IAAA,GAAApE,KAAA6F,IAAA,EACAiE,EAAAkV,aAAAlV,EAAAmV,SAEAtV,EAAA7O,EAAAokB,qBAAApkB,EAAAqkB,OAAArkB,EAAAskB,OAAA,EACA,IAAAzV,EAGA,IAAA,GAAA1S,GAAA,EAAAA,EAAA0S,EAAArS,OAAAL,IAAA,CACA,GAAAR,GAAAkT,EAAA1S,EACAR,GAAA4oB,UAAAtV,KAUA+U,EAAAvhB,kBACAuhB,EAAAvhB,iBAAA,aACAhH,KAAAwoB,oBAAA,GACAD,EAAAvhB,iBAAA,iBACAhH,KAAAwoB,oBAAA,IAEAD,EAAAQ,YAAA,eACA/oB,KAAAwoB,wBAEA,CACA,GAAAzlB,SAAA/C,KAAAwoB,mBACA,MAEAD,GAAA1hB,qBACA0hB,EAAA1hB,oBAAA,aACA7G,KAAAwoB,oBACAD,EAAA1hB,oBAAA,iBACA7G,KAAAwoB,qBAEAD,EAAAS,YAAA,eACAhpB,KAAAwoB,oBAEAxoB,KAAAwoB,mBAAAzlB,QAIAvD,EAAAD,QAAAwoB,OjCwhJMkB,IAAI,SAASxoB,EAAQjB,EAAOD,GkCnlJlC,QAAA2pB,GAAAvC,EAAAwC,GACAA,EAAAA,GAAAxC,EAAAwC,OACAxC,EAAAhd,EAAAF,KAAAC,OAAAyf,EAAAxmB,OAAAgkB,EAAAhkB,QAAA,GAQA,QAAA+hB,GAAAiC,EAAAwC,GACAA,EAAAA,GAAAxC,EAAAwC,OACAxC,EAAAhd,EAAAwf,EAAAxmB,OAAAgkB,EAAAhkB,OASA,QAAAymB,GAAAzC,EAAAwC,GACAA,EAAAA,GAAAxC,EAAAwC,OACAxC,EAAAnd,EAAAC,KAAAC,OAAAyf,EAAA3mB,MAAAmkB,EAAAnkB,OAAA,GAUA,QAAA2Q,GAAAwT,EAAAwC,GACAD,EAAAvC,EAAAwC,GACAC,EAAAzC,EAAAwC,GAIA3pB,EAAAD,SACA6pB,iBAAAA,EACAF,eAAAA,EACA/V,OAAAA,EACAuR,OAAAA,alC4lJW,KAAK","file":"gown.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * PIXI method to update the object transform for rendering\n * Used to call redraw() before rendering\n *\n * @method updateTransform\n */\nControl.prototype.updateTransform = function() {\n    if(this.redraw) {\n        this.redraw();\n    }\n\n    PIXI.Container.prototype.updateTransform.call(this);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {PIXI.Point}\n */\nControl.prototype.mousePos = function(e) {\n    return e.data.getLocalPosition(this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n        this.invalidDimensions = true;\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n        this.invalidDimensions = true;\n    }\n});\n",null,"var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || GOWN.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.invalidDimensions = true;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeSkin\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeSkin = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeSkin);\n    }\n    if (this._currentSkin &&\n        this.invalidDimensions &&\n        this._width > 0 && this._height > 0) {\n\n        this._currentSkin.width = this._width;\n        this._currentSkin.height = this._height;\n        this.invalidDimensions = false;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen || false;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n * (uses a separate canvas to create a new Texture)\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(gradient, width, height) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width || 256;\n    bgCanvas.height = height || 256;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0, 0, 0, bgCanvas.height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * clean application: remove event listener, free memory\n * (can also remove the canvas from the DOM tree if wanted)\n *\n * @method cleanup\n * @param removeCanvas destroys the canvas and remove it from the dom tree\n */\nApplication.prototype.cleanup = function(removeCanvas) {\n    removeCanvas = removeCanvas || true;\n    if (removeCanvas) {\n        document.body.removeChild(this._renderer.view);\n    }\n    this._stage = null;\n    this._renderer = null;\n    this._removeBackground();\n    this.fullscreen = false; // remove event listener\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * remove background\n * @method _removeBackground\n * @private\n */\nApplication.prototype._removeBackground = function() {\n    if (this.bg) {\n        this.removeChild(this.bg);\n        this.bg = null;\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize', this._onresize);\n        } else if (!this._fullscreen && value) {\n            this._onresize = this.onresize.bind(this);\n            window.addEventListener('resize', this._onresize);\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        this._removeBackground();\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n            if (this.width) {\n                skin.width = this.width;\n            }\n            if (this.height) {\n                skin.height = this.height;\n            }\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = this.width;\n            skin.height = this.height;\n        }\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over && this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else if (this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle;\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle);\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.width - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.height - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});","var Skinable = require('../Skinable'),\n    InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || '';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type GOWN.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x,\n        pos = text.length;\n\n    if (x < this.textWidth(text) + totalWidth)\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\nInputControl.prototype.posToCoord = function(pos) {\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x;\n\n    if (pos < text.length) {\n        return totalWidth + this.textWidth(text.substring(0, pos));\n    } else {\n        return totalWidth + this.textWidth(text);\n    }\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (GOWN.InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (GOWN.InputControl.currentInput) {\n        GOWN.InputControl.currentInput.blur();\n    }\n\n    // set focus\n    GOWN.InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (GOWN.InputControl.currentInput === this) {\n        GOWN.InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (GOWN.InputControl.currentInput &&\n        !GOWN.InputControl.currentInput._mouseDown) {\n        GOWN.InputControl.currentInput.blur();\n        GOWN.InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n\n/**\n * Update renderable (culling of non visible objects)\n *\n * @method updateRenderable\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.updateRenderable = function(x, y, width, height) {\n    for(var i=0, j=this.children.length; i<j; i++) {\n        var child = this.children[i];\n        child.renderable = this.childIsRenderAble(child, x, y, width, height);\n    }\n};\n\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});\n","var Control = require('../Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta, bar) {\n    this.addListener = addListener || true;\n    this.bar = bar || null;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * get 1-dimensional scroll direction\n * dissolve \"auto\" into VERTICAL or HORIZONTAL\n *\n * @method direction\n * @returns {String}\n */\nScrollArea.prototype.direction = function() {\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    return scroll;\n};\n\n/**\n * move content\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scroll = this.direction();\n    var contentMoved = false;\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n            contentMoved = true;\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n            contentMoved = true;\n        }\n    }\n    return contentMoved;\n};\n\n// update ScrollBar progress/thumb position\nScrollArea.prototype.updateBar = function() {\n    if (this.bar && this.bar.thumb && this.content) {\n        var scroll = this.direction();\n        if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n            this.bar.thumb.x = Math.floor(-this.content.x /\n                (this.content.width - this.width) *\n                (this.bar.width - this.bar.thumb.width));\n        }\n        if (scroll === ScrollArea.SCROLL_VERTICAL) {\n            this.bar.thumb.y = Math.floor(-this.content.y /\n            (this.content.height - this.height) *\n            (this.bar.height - this.bar.thumb.height));\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.data.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.data.getLocalPosition(this);\n        if (this._scrollContent(\n                pos.x - this._start[0],\n                pos.y - this._start[1])) {\n            this.updateBar();\n        }\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n\n/**\n * update mask as needed\n *\n * @method redraw\n */\nScrollArea.prototype.redraw = function() {\n    if (this.content.updateRenderable) {\n        this.content.updateRenderable(-this.content.x, -this.content.y, this.width, this.height);\n    }\n\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    if (scrollArea) {\n        //scrollArea\n        // move thumb when scrollarea moves\n        scrollArea.bar = this;\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    var defaultSkin = ScrollThumb.SKIN_NAME;\n    if (!theme.thumbSkin) {\n        defaultSkin = Button.SKIN_NAME;\n    }\n    this.skinName = this.skinName || defaultSkin;\n    if (theme.thumbSkin) {\n        this._validStates = ScrollThumb.THUMB_STATES;\n    }\n    this.width = theme.thumbSize || 20;\n    this.height = theme.thumbSize || 20;\n    Button.call(this, theme);\n    this.invalidTrack = true;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nScrollThumb.THUMB_STATES = [\n    'horizontal_up', 'vertical_up',\n    'horizontal_down', 'vertical_down',\n    'horizontal_hover', 'vertical_hover'\n];\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        if (this.theme.thumbSkin) {\n            // use skin including orientation instead of default skin\n            value = this.scrollable.orientation + '_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    var local = mouseData.data.getLocalPosition(this.scrollable);\n    this.scrollable._start = [local.x, local.y];\n    //this.scrollable.handleDown(mouseData);\n    mouseData.stopPropagation();\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mouseup;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\n/**\n * show track icon on thumb\n *\n * @method showTrack\n * @param skin\n */\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\n/**\n * redraw the skin\n *\n * @method redraw\n */\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack && this.theme.thumbSkin) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method move\n */\nScrollThumb.prototype.move = function(x, y) {\n    if (this.scrollable.orientation === GOWN.Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.scrollable.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.x) {\n            this.x = x;\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.scrollable.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.y) {\n            this.y = y;\n            return true;\n        }\n    }\n    return false;\n};","var Skinable = require('../Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, this.theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n\n    this.touchStart = this.mousedown = this.handleDown;\n    this.touchEnd = this.mouseup = this.mouseupoutside = this.handleUp;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * move scroll thumb clicking somewhere on the scroll bar (outside the thumb)\n *\n * @method handleDown\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this);\n    var center = {\n        x: local.x - this.thumb.width / 2,\n        y: local.y - this.thumb.height / 2\n    };\n    if (mouseData.target === this &&\n        this.moveThumb(center.x, center.y)) {\n        this._start = [local.x, local.y];\n        // do not override localX/localY in start\n        // if we do not move the thumb\n        this.thumbMoved(local.x, local.y);\n    }\n};\n\n/**\n * handle mouse up/touch end\n *\n * @method handleUp\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n *\n * @method handleMove\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.data.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n *\n * @method handleWheel\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n *\n * @method thumbMoved\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n *\n * @method _updateProgressSkin\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n *\n * @method maxWidth\n * @returns {Number}\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n *\n * @method maxHeight\n * @returns {Number}\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method moveThumb\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if (this.thumb.move(x, y)) {\n        this._updateProgressSkin();\n        return true;\n    }\n    return false;\n};\n\n/**\n * show scroll track\n *\n * @method showTrack\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @method showProgress\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * redraw track and progressbar\n *\n * @method redraw\n */\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10; //TODO: implement me!\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n *\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var pos = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        pos = x;\n    } else {\n        pos = y;\n    }\n    this.value = this.pixelToValue(pos);\n};\n\n/**\n * calculate value of slider based on current pixel position of thumb\n *\n * @param position\n * @method pixelToValue\n * @returns Number value between minimum and maximum\n */\nSlider.prototype.pixelToValue = function(position) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position / max * (this.maximum - this.minimum) + this.minimum;\n};\n\n/**\n * calculate current pixel position of thumb based on given value\n *\n * @param value\n * @method valueToPixel\n * @returns Number position of the scroll thumb in pixel\n */\nSlider.prototype.valueToPixel = function(value) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position;\n};\n\n/**\n * set value (between minimum and maximum)\n *\n * @property value\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        if (this._value === value) {\n            return;\n        }\n\n        // move thumb\n        var pos = this.valueToPixel(value);\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.moveThumb(pos, 0);\n        } else {\n            this.moveThumb(0, pos);\n        }\n\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n *\n * @property minimum\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n *\n * @property maximum\n * @type Number\n * @default 100\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends GOWN.InputControl\n * @memberof GOWN\n * @param text editable text shown in input\n * @param displayAsPassword Display TextInput as Password (default false)\n * @theme default theme\n * @constructor\n */\n\nfunction TextInput(text, displayAsPassword, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    this._displayAsPassword = displayAsPassword || false;\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle);\n    this.addChild(this.cursor);\n\n    // selection background\n    this.selectionBg = new PIXI.Graphics();\n    this.addChildAt(this.selectionBg, 0);\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create(InputControl.prototype);\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field.\n * calls onTextChange callback if text changes\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function () {\n        return this._text;\n    },\n    set: function (text) {\n        text += ''; // add '' to assure text is parsed as string\n        if (this._origText === text) {\n            // return if text has not changed\n            return;\n        }\n        this._origText = text;\n        if (this._displayAsPassword) {\n            text = text.replace(/./gi, '*');\n        }\n        this._text = text || '';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.text = text;\n        }\n\n        // update text input if this text field has the focus\n        if (this.hasFocus) {\n            InputWrapper.setText(this.value);\n        }\n\n        // reposition cursor\n        this._cursorNeedsUpdate = true;\n        if (this.change) {\n            this.change(text);\n        }\n    }\n});\n\n/**\n * The maximum number of characters that may be entered. If 0,\n * any number of characters may be entered.\n * (same as maxLength for DOM inputs)\n *\n * @default 0\n * @property maxChars\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'maxChars', {\n    get: function () {\n        return this._maxChars;\n    },\n    set: function (value) {\n        if (this._maxChars === value) {\n            return;\n        }\n        InputWrapper.setMaxLength(value);\n        this._maxChars = value;\n    }\n});\n\nObject.defineProperty(TextInput.prototype, 'value', {\n    get: function() {\n        return this._origText;\n    }\n});\n\n/**\n * set text and type of DOM text input\n *\n * @method onfocus\n */\nTextInput.prototype.onfocus = function() {\n    InputWrapper.setText(this.value);\n    InputWrapper.setMaxLength(this.maxChars);\n    if (this._displayAsPassword) {\n        InputWrapper.setType('password');\n    } else {\n        InputWrapper.setType('text');\n    }\n};\n\n/**\n * set selected text\n *\n * @method updateSelection\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function (start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        this.updateSelectionBg();\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.updateSelectionBg = function() {\n    var start = this.posToCoord(this.selection[0]),\n        end = this.posToCoord(this.selection[1]);\n\n    this.selectionBg.clear();\n    if (start !== end) {\n        this.selectionBg.beginFill(0x0080ff);\n        this.selectionBg.drawRect(0, 0, end - start, this.pixiText.height);\n        this.selectionBg.x = start;\n        this.selectionBg.y = this.pixiText.y;\n    }\n};\n\nTextInput.prototype.onblur = function() {\n    this.updateSelection(0, 0);\n};\n\nTextInput.prototype.onSubmit = function () {\n};\n\nTextInput.prototype.onKeyDown = function (e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function () {\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function () {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function () {\n    if (this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if ((time - this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if (this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function () {\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function (e) {\n    var mouse = this.mousePos(e);\n    if (!this.hasFocus || !this._mouseDown || this.selectionStart < 0) { // || !this.containsPoint(mouse)) {\n        return false;\n    }\n\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this.setCursorPos();\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    this.setCursorPos();\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if (!(this.selectionStart >= 0 && clickPos !== this.selectionStart)) {\n        this.cursorPos = clickPos;\n        this.setCursorPos();\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function () {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text) {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n    this.setCursorPos();\n};","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the gown.js core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n\n    // controls\n    Application:            require('./controls/Application'),\n    Button:                 require('./controls/Button'),\n    InputControl:           require('./controls/InputControl'),\n    LayoutGroup:            require('./controls/LayoutGroup'),\n    Scrollable:             require('./controls/Scrollable'),\n    ScrollArea:             require('./controls/ScrollArea'),\n    ScrollBar:              require('./controls/ScrollBar'),\n    ScrollThumb:            require('./controls/ScrollThumb'),\n    Slider:                 require('./controls/Slider'),\n    TextInput:              require('./controls/TextInput'),\n    ToggleButton:           require('./controls/ToggleButton'),\n\n    // layout\n    HorizontalLayout:     require('./layout/HorizontalLayout'),\n    Layout:               require('./layout/Layout'),\n    LayoutAlignment:      require('./layout/LayoutAlignment'),\n    TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n    TiledLayout:          require('./layout/TiledLayout'),\n    TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n    VerticalLayout:       require('./layout/VerticalLayout'),\n    ViewPortBounds:       require('./layout/ViewPortBounds'),\n\n    // shapes\n    Diamond:           require('./shapes/Diamond'),\n    Ellipse:           require('./shapes/Ellipse'),\n    Line:              require('./shapes/Line'),\n    Rect:              require('./shapes/Rect'),\n    Shape:             require('./shapes/Shape'),\n\n    // skin\n    Theme:           require('./skin/Theme')\n};\n","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof GOWN\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof GOWN\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof GOWN\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n\nShape.prototype.updateTransform = function() {\n    this.redraw();\n\n    PIXI.Graphics.prototype.updateTransform.call(this);\n};\n\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    if(!this.invalid) {\n        return;\n    }\n\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n\n    this.invalid = false;\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\n\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof GOWN\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    this.textStyle = this.textStyle || {};\n    // default color for label (e.g. buttons)\n    this.textStyle.fill = this.textStyle.fill || '#000';\n    // default font for label (e.g. buttons)\n    this.textStyle.font = this.textStyle.font || '12px Arial';\n\n    if (global === true || global === undefined) {\n        GOWN.theme = this;\n    }\n    this.textureCache = null;\n    // own skin for scroll/slider track\n    // (uses the default button skin otherwise)\n    this.thumbSkin = true;\n\n    // desktop themes have a hover skin if the mouse moves over the button\n    this.hoverSkin = true;\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    this._jsonPath = jsonPath;\n    GOWN.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * executed when loadImage has finished\n *\n * @method loadComplete\n */\nTheme.prototype.loadComplete = function(loader, resources) {\n    this.textureCache = resources.resources[this._jsonPath].textures;\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    var scope = this;\n    return function() {\n        var texture = scope.textureCache[name];\n        if(!texture) {\n            throw new Error('The frameId \"' + name + '\" does not exist ' +\n            'in the texture cache');\n        }\n        return new ScaleContainer(texture, grid);\n\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    var scope = this;\n    return function() {\n        return new PIXI.Sprite(scope.textureCache[name]);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    GOWN.theme = undefined;\n};","if (typeof PIXI === 'undefined') {\n    if (window.console) {\n        window.console.warn('pixi.js has to be loaded before loading gown.js');\n    }\n    return;\n}\n\nvar core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export GOWN globally.\nglobal.GOWN = core;\n","/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof GOWN\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                GOWN.InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n * @private\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String} text\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n\n/**\n * set max. length setting it to 0 will allow unlimited text input\n * @param length\n */\nInputWrapper.setMaxLength = function(length) {\n    if (InputWrapper.hiddenInput) {\n        if (!length || length < 0) {\n            InputWrapper.hiddenInput.removeAttribute('maxlength');\n        } else {\n            InputWrapper.hiddenInput.setAttribute('maxlength', length);\n        }\n    } else {\n        InputWrapper._maxLength = length;\n    }\n};\n\nInputWrapper.setType = function(type) {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.type = type;\n    } else {\n        InputWrapper._type = type;\n    }\n};\n\nInputWrapper.getType = function() {\n    if (InputWrapper.hiddenInput) {\n        return InputWrapper.hiddenInput.type;\n    } else {\n        return InputWrapper._type;\n    }\n};","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n\n\n    // apply scaling when the window gets resized using worldTansformation\n    var scope = this;\n    window.addEventListener('resize', function() {\n        scope._applyScales('tl', scope.tl);\n        scope._applyScales('tm', scope.tm);\n        scope._applyScales('tr', scope.tr);\n\n        scope._applyScales('cl', scope.cl);\n        scope._applyScales('cm', scope.cm);\n        scope._applyScales('cr', scope.cr);\n\n        scope._applyScales('bl', scope.bl);\n        scope._applyScales('bm', scope.bm);\n        scope._applyScales('br', scope.br);\n    });\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * apply scaling when the window gets resized using worldTansformation\n *\n * @method _applyScales\n * @private\n */\nScaleContainer.prototype._applyScales = function(name, elem) {\n    if (this.scaleOriginals[name]) {\n        elem.width = (Math.ceil(this.scaleOriginals[name].width *\n            this.worldTransform.a) /\n            this.worldTransform.a);\n        elem.height = (Math.ceil(this.scaleOriginals[name].height *\n            this.worldTransform.d) /\n            this.worldTransform.d);\n    }\n};\n\n/**\n * set scaling width and height\n *\n * @method _applyScales\n * @private\n */\nScaleContainer.prototype._updateScales = function() {\n    this._positionTilable();\n\n    var scaleOriginals = this.scaleOriginals = {};\n\n    var scaleOriginal = function(name, elem) {\n        if (elem && elem.width && elem.height) {\n            scaleOriginals[name] = {\n                width: elem.width,\n                height: elem.height\n            };\n        }\n    };\n\n    scaleOriginal('tl', this.tl);\n    scaleOriginal('tm', this.tm);\n    scaleOriginal('tr', this.tr);\n\n    scaleOriginal('cl', this.cl);\n    scaleOriginal('cm', this.cm);\n    scaleOriginal('cr', this.cr);\n\n    scaleOriginal('bl', this.bl);\n    scaleOriginal('bm', this.bm);\n    scaleOriginal('br', this.br);\n};\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof GOWN\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the gown.js util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (GOWN._mouseWheelHandler !== undefined) {\n            return;\n        }\n        GOWN._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                GOWN._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n    } else {\n        if (GOWN._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                GOWN._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n        GOWN._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.height - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}