{"version":3,"sources":["../../lib/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/core/Control.js","gown.min.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/src/index.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mouseWheelSupport.js","src/utils/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","GOWN","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"Control","PIXI","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","renderWebGL","renderer","redraw","renderCanvas","mousePos","data","getLocalPosition","defineProperty","get","_enabled","set","value","_width","width","invalidDimensions","_height","height",2,"Skinable","skinCache","undefined","invalidState","controlSetTheme","preloadSkins","changeSkin","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_currentState","updateDimensions","_skinName","./Control",3,"Application","background","fullscreen","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","cleanup","removeCanvas","removeChild","_removeBackground","onresize","resize","bg","children","child","_fullscreen","removeEventListener","_onresize","bind","addEventListener","_background","Array","Sprite","../Control",4,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","hitArea","Rectangle","type","currentState","_pressed","_over","hoverSkin","redrawSkinable","createLabel","labelText","text","_label","style","textStyle","Text","updateLabelDimensions","x","Math","floor","y","skinableSetTheme","font","labelFont","color","labelColor","indexOf","label","../Skinable",5,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","posToCoord","substring","_isBitmapFont","prevCharCode","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",6,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","renderAreaWebGL","visible","worldAlpha","renderable","j","_mask","_filters","currentRenderer","flush","filterManager","pushFilter","maskManager","pushMask","start","_renderWebGL","popMask","popFilter","renderAreaCanvas","_renderCanvas","getChildAt","max","../layout/ViewPortBounds",7,"ScrollArea","content","addListener","scrolldelta","bar","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","direction","scrollAuto","scroll","_scrollContent","contentMoved","min","updateBar","thumb","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",8,"ScrollBar","scrollArea","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",9,"ScrollThumb","scrollable","defaultSkin","thumbSkin","THUMB_STATES","thumbSize","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","local","stopPropagation","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","move","isNaN","maxWidth","maxHeight","./Button",10,"mode","DESKTOP_MODE","_inverse","touchStart","handleDown","touchEnd","MOBILE_MODE","center","target","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","showProgress","./ScrollThumb",11,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","pixelToValue","position","maximum","valueToPixel","sliderData","../../utils/SliderData",12,"TextInput","displayAsPassword","_displayAsPassword","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","cursor","selectionBg","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","_origText","replace","setText","_maxChars","setMaxLength","maxChars","setType","updateSelection","end","setSelection","updateSelectionBg","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","cursorPos","drawCursor","time","Date","now","mouse","selectionStart","curPos","originalEvent","getText","sel","getSelection","./InputControl",13,"ToggleButton","slice","push","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","_selected","selected","state","substr","toggle","buttonHandleEvent",14,"HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/InputControl","./controls/LayoutGroup","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",15,"./LayoutAlignment",16,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",17,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","NaN","explicitSpace","paddingStart","./Layout",18,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",19,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",20,21,22,23,"_drawShape","graphics","moveTo","lineTo","./Shape",24,"drawEllipse",25,"reverse","_reverse",26,"radius","_radius","drawRoundedRect",27,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",28,"_skins","fill","textureCache","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","_jsonPath","loader","add","load","loadComplete","resources","textures","getScaleContainer","grid","scope","texture","getImage","removeTheme","../../utils/ScaleContainer",29,"console","warn","core","utils","./core","./utils",30,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","removeAttribute","setAttribute","_maxLength","_type","getType",31,"rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","_applyScales","elem","scaleOriginals","ceil","worldTransform","d","_updateScales","_positionTilable","scaleOriginal","w","h","clone","rightX","bottomY","middleWidth","centerHeight","fromFrame","frameId","TextureCache",32,33,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",34,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",35,"centerVertical","parent","centerHorizontal"],"mappings":"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","file":"gown.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {PIXI.Point}\n */\nControl.prototype.mousePos = function(e) {\n    return e.data.getLocalPosition(this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n        this.invalidDimensions = true;\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n        this.invalidDimensions = true;\n    }\n});",null,"var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || GOWN.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.invalidDimensions = true;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeSkin\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeSkin = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeSkin);\n    }\n    if (this._currentSkin &&\n        this.invalidDimensions &&\n        this._width > 0 && this._height > 0) {\n\n        this._currentSkin.width = this._width;\n        this._currentSkin.height = this._height;\n        this.invalidDimensions = false;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen || false;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n * (uses a separate canvas to create a new Texture)\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(gradient, width, height) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width || 256;\n    bgCanvas.height = height || 256;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0, 0, 0, bgCanvas.height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * clean application: remove event listener, free memory\n * (can also remove the canvas from the DOM tree if wanted)\n *\n * @method cleanup\n * @param removeCanvas destroys the canvas and remove it from the dom tree\n */\nApplication.prototype.cleanup = function(removeCanvas) {\n    removeCanvas = removeCanvas || true;\n    if (removeCanvas) {\n        document.body.removeChild(this._renderer.view);\n    }\n    this._stage = null;\n    this._renderer = null;\n    this._removeBackground();\n    this.fullscreen = false; // remove event listener\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * remove background\n * @method _removeBackground\n * @private\n */\nApplication.prototype._removeBackground = function() {\n    if (this.bg) {\n        this.removeChild(this.bg);\n        this.bg = null;\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize', this._onresize);\n        } else if (!this._fullscreen && value) {\n            this._onresize = this.onresize.bind(this);\n            window.addEventListener('resize', this._onresize);\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        this._removeBackground();\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n            if (this.width) {\n                skin.width = this.width;\n            }\n            if (this.height) {\n                skin.height = this.height;\n            }\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = this.width;\n            skin.height = this.height;\n        }\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over && this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else if (this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle;\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle);\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.width - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.height - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});","var Skinable = require('../Skinable'),\n    InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || '';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type GOWN.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x,\n        pos = text.length;\n\n    if (x < this.textWidth(text) + totalWidth)\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\nInputControl.prototype.posToCoord = function(pos) {\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x;\n\n    if (pos < text.length) {\n        return totalWidth + this.textWidth(text.substring(0, pos));\n    } else {\n        return totalWidth + this.textWidth(text);\n    }\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (GOWN.InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (GOWN.InputControl.currentInput) {\n        GOWN.InputControl.currentInput.blur();\n    }\n\n    // set focus\n    GOWN.InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (GOWN.InputControl.currentInput === this) {\n        GOWN.InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (GOWN.InputControl.currentInput &&\n        !GOWN.InputControl.currentInput._mouseDown) {\n        GOWN.InputControl.currentInput.blur();\n        GOWN.InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n/**\n * only render specific area\n * @method renderAreaWebGL\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaWebGL = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if(this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * only render specific area\n * @method renderAreaWebCanvas\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaCanvas = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for (var i = 0, j = this.children.length; i < j; ++i)\n    {\n        // only render children if they are visible\n        var child = this.children[i];\n        if (this.childIsRenderAble(child, x, y, width, height)) {\n            child._renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});","var Control = require('../Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta, bar) {\n    this.addListener = addListener || true;\n    this.bar = bar || null;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * get 1-dimensional scroll direction\n * dissolve \"auto\" into VERTICAL or HORIZONTAL\n *\n * @method direction\n * @returns {String}\n */\nScrollArea.prototype.direction = function() {\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    return scroll;\n};\n\n/**\n * move content\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scroll = this.direction();\n    var contentMoved = false;\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n            contentMoved = true;\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n            contentMoved = true;\n        }\n    }\n    return contentMoved;\n};\n\n// update ScrollBar progress/thumb position\nScrollArea.prototype.updateBar = function() {\n    if (this.bar && this.bar.thumb && this.content) {\n        var scroll = this.direction();\n        if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n            this.bar.thumb.x = Math.floor(-this.content.x /\n                (this.content.width - this.width) *\n                (this.bar.width - this.bar.thumb.width));\n        }\n        if (scroll === ScrollArea.SCROLL_VERTICAL) {\n            this.bar.thumb.y = Math.floor(-this.content.y /\n            (this.content.height - this.height) *\n            (this.bar.height - this.bar.thumb.height));\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.data.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.data.getLocalPosition(this);\n        if (this._scrollContent(\n                pos.x - this._start[0],\n                pos.y - this._start[1])) {\n            this.updateBar();\n        }\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderWebGL = function(renderer)\n{\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if (this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderCanvas = function(renderer)\n{\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        if (child.renderAreaCanvas) {\n            child.renderAreaCanvas(renderer, -this.content.x, -this.content.y, this.width, this.height);\n        } else {\n            child.renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\nScrollArea.prototype.redraw = function() {\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    if (scrollArea) {\n        //scrollArea\n        // move thumb when scrollarea moves\n        scrollArea.bar = this;\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    var defaultSkin = ScrollThumb.SKIN_NAME;\n    if (!theme.thumbSkin) {\n        defaultSkin = Button.SKIN_NAME;\n    }\n    this.skinName = this.skinName || defaultSkin;\n    if (theme.thumbSkin) {\n        this._validStates = ScrollThumb.THUMB_STATES;\n    }\n    this.width = theme.thumbSize || 20;\n    this.height = theme.thumbSize || 20;\n    Button.call(this, theme);\n    this.invalidTrack = true;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nScrollThumb.THUMB_STATES = [\n    'horizontal_up', 'vertical_up',\n    'horizontal_down', 'vertical_down',\n    'horizontal_hover', 'vertical_hover'\n];\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        if (this.theme.thumbSkin) {\n            // use skin including orientation instead of default skin\n            value = this.scrollable.orientation + '_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    var local = mouseData.data.getLocalPosition(this.scrollable);\n    this.scrollable._start = [local.x, local.y];\n    //this.scrollable.handleDown(mouseData);\n    mouseData.stopPropagation();\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mouseup;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\n/**\n * show track icon on thumb\n *\n * @method showTrack\n * @param skin\n */\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\n/**\n * redraw the skin\n *\n * @method redraw\n */\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack && this.theme.thumbSkin) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method move\n */\nScrollThumb.prototype.move = function(x, y) {\n    if (this.scrollable.orientation === GOWN.Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.scrollable.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.x) {\n            this.x = x;\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.scrollable.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.y) {\n            this.y = y;\n            return true;\n        }\n    }\n    return false;\n};","var Skinable = require('../Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, this.theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n\n    this.touchStart = this.mousedown = this.handleDown;\n    this.touchEnd = this.mouseup = this.mouseupoutside = this.handleUp;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * move scroll thumb clicking somewhere on the scroll bar (outside the thumb)\n *\n * @method handleDown\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this);\n    var center = {\n        x: local.x - this.thumb.width / 2,\n        y: local.y - this.thumb.height / 2\n    };\n    if (mouseData.target === this &&\n        this.moveThumb(center.x, center.y)) {\n        this._start = [local.x, local.y];\n        // do not override localX/localY in start\n        // if we do not move the thumb\n        this.thumbMoved(local.x, local.y);\n    }\n};\n\n/**\n * handle mouse up/touch end\n *\n * @method handleUp\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n *\n * @method handleMove\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.data.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n *\n * @method handleWheel\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n *\n * @method thumbMoved\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n *\n * @method _updateProgressSkin\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n *\n * @method maxWidth\n * @returns {Number}\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n *\n * @method maxHeight\n * @returns {Number}\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method moveThumb\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if (this.thumb.move(x, y)) {\n        this._updateProgressSkin();\n        return true;\n    }\n    return false;\n};\n\n/**\n * show scroll track\n *\n * @method showTrack\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @method showProgress\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * redraw track and progressbar\n *\n * @method redraw\n */\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10; //TODO: implement me!\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n *\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var pos = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        pos = x;\n    } else {\n        pos = y;\n    }\n    this.value = this.pixelToValue(pos);\n};\n\n/**\n * calculate value of slider based on current pixel position of thumb\n *\n * @param position\n * @method pixelToValue\n * @returns Number value between minimum and maximum\n */\nSlider.prototype.pixelToValue = function(position) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position / max * (this.maximum - this.minimum) + this.minimum;\n};\n\n/**\n * calculate current pixel position of thumb based on given value\n *\n * @param value\n * @method valueToPixel\n * @returns Number position of the scroll thumb in pixel\n */\nSlider.prototype.valueToPixel = function(value) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position;\n};\n\n/**\n * set value (between minimum and maximum)\n *\n * @property value\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        if (this._value === value) {\n            return;\n        }\n\n        // move thumb\n        var pos = this.valueToPixel(value);\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.moveThumb(pos, 0);\n        } else {\n            this.moveThumb(0, pos);\n        }\n\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n *\n * @property minimum\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n *\n * @property maximum\n * @type Number\n * @default 100\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends GOWN.InputControl\n * @memberof GOWN\n * @param text editable text shown in input\n * @param displayAsPassword Display TextInput as Password (default false)\n * @theme default theme\n * @constructor\n */\n\nfunction TextInput(text, displayAsPassword, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    this._displayAsPassword = displayAsPassword || false;\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle);\n    this.addChild(this.cursor);\n\n    // selection background\n    this.selectionBg = new PIXI.Graphics();\n    this.addChildAt(this.selectionBg, 0);\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create(InputControl.prototype);\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field.\n * calls onTextChange callback if text changes\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function () {\n        return this._text;\n    },\n    set: function (text) {\n        text += ''; // add '' to assure text is parsed as string\n        if (this._origText === text) {\n            // return if text has not changed\n            return;\n        }\n        this._origText = text;\n        if (this._displayAsPassword) {\n            text = text.replace(/./gi, '*');\n        }\n        this._text = text || '';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.text = text;\n        }\n\n        // update text input if this text field has the focus\n        if (this.hasFocus) {\n            InputWrapper.setText(this.value);\n        }\n\n        // reposition cursor\n        this._cursorNeedsUpdate = true;\n        if (this.change) {\n            this.change(text);\n        }\n    }\n});\n\n/**\n * The maximum number of characters that may be entered. If 0,\n * any number of characters may be entered.\n * (same as maxLength for DOM inputs)\n *\n * @default 0\n * @property maxChars\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'maxChars', {\n    get: function () {\n        return this._maxChars;\n    },\n    set: function (value) {\n        if (this._maxChars === value) {\n            return;\n        }\n        InputWrapper.setMaxLength(value);\n        this._maxChars = value;\n    }\n});\n\nObject.defineProperty(TextInput.prototype, 'value', {\n    get: function() {\n        return this._origText;\n    }\n});\n\n/**\n * set text and type of DOM text input\n *\n * @method onfocus\n */\nTextInput.prototype.onfocus = function() {\n    InputWrapper.setText(this.value);\n    InputWrapper.setMaxLength(this.maxChars);\n    if (this._displayAsPassword) {\n        InputWrapper.setType('password');\n    } else {\n        InputWrapper.setType('text');\n    }\n};\n\n/**\n * set selected text\n *\n * @method updateSelection\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function (start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        this.updateSelectionBg();\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.updateSelectionBg = function() {\n    var start = this.posToCoord(this.selection[0]),\n        end = this.posToCoord(this.selection[1]);\n\n    this.selectionBg.clear();\n    if (start !== end) {\n        this.selectionBg.beginFill(0x0080ff);\n        this.selectionBg.drawRect(0, 0, end - start, this.pixiText.height);\n        this.selectionBg.x = start;\n        this.selectionBg.y = this.pixiText.y;\n    }\n};\n\nTextInput.prototype.onblur = function() {\n    this.updateSelection(0, 0);\n};\n\nTextInput.prototype.onSubmit = function () {\n};\n\nTextInput.prototype.onKeyDown = function (e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function () {\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function () {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function () {\n    if (this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if ((time - this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if (this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function () {\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function (e) {\n    var mouse = this.mousePos(e);\n    if (!this.hasFocus || !this._mouseDown || this.selectionStart < 0) { // || !this.containsPoint(mouse)) {\n        return false;\n    }\n\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this.setCursorPos();\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    this.setCursorPos();\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if (!(this.selectionStart >= 0 && clickPos !== this.selectionStart)) {\n        this.cursorPos = clickPos;\n        this.setCursorPos();\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function () {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text) {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n    this.setCursorPos();\n};","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the gown.js core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n\n    // controls\n    Application:            require('./controls/Application'),\n    Button:                 require('./controls/Button'),\n    InputControl:           require('./controls/InputControl'),\n    LayoutGroup:            require('./controls/LayoutGroup'),\n    Scrollable:             require('./controls/Scrollable'),\n    ScrollArea:             require('./controls/ScrollArea'),\n    ScrollBar:              require('./controls/ScrollBar'),\n    ScrollThumb:            require('./controls/ScrollThumb'),\n    Slider:                 require('./controls/Slider'),\n    TextInput:              require('./controls/TextInput'),\n    ToggleButton:           require('./controls/ToggleButton'),\n\n    // layout\n    HorizontalLayout:     require('./layout/HorizontalLayout'),\n    Layout:               require('./layout/Layout'),\n    LayoutAlignment:      require('./layout/LayoutAlignment'),\n    TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n    TiledLayout:          require('./layout/TiledLayout'),\n    TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n    VerticalLayout:       require('./layout/VerticalLayout'),\n    ViewPortBounds:       require('./layout/ViewPortBounds'),\n\n    // shapes\n    Diamond:           require('./shapes/Diamond'),\n    Ellipse:           require('./shapes/Ellipse'),\n    Line:              require('./shapes/Line'),\n    Rect:              require('./shapes/Rect'),\n    Shape:             require('./shapes/Shape'),\n\n    // skin\n    Theme:           require('./skin/Theme')\n};\n","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof GOWN\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof GOWN\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof GOWN\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n// renderer\n/* istanbul ignore next */\nShape.prototype.renderWebGL = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderWebGL.call(this, renderer);\n};\n\n/* istanbul ignore next */\nShape.prototype.renderCanvas = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderCanvas.call(this, renderer);\n};\n\n// shape drawing\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\n\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof GOWN\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    this.textStyle = this.textStyle || {};\n    // default color for label (e.g. buttons)\n    this.textStyle.fill = this.textStyle.fill || '#000';\n    // default font for label (e.g. buttons)\n    this.textStyle.font = this.textStyle.font || '12px Arial';\n\n    if (global === true || global === undefined) {\n        GOWN.theme = this;\n    }\n    this.textureCache = null;\n    // own skin for scroll/slider track\n    // (uses the default button skin otherwise)\n    this.thumbSkin = true;\n\n    // desktop themes have a hover skin if the mouse moves over the button\n    this.hoverSkin = true;\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    this._jsonPath = jsonPath;\n    GOWN.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * executed when loadImage has finished\n *\n * @method loadComplete\n */\nTheme.prototype.loadComplete = function(loader, resources) {\n    this.textureCache = resources.resources[this._jsonPath].textures;\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    var scope = this;\n    return function() {\n        var texture = scope.textureCache[name];\n        if(!texture) {\n            throw new Error('The frameId \"' + name + '\" does not exist ' +\n            'in the texture cache');\n        }\n        return new ScaleContainer(texture, grid);\n\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    var scope = this;\n    return function() {\n        return new PIXI.Sprite(scope.textureCache[name]);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    GOWN.theme = undefined;\n};","if (typeof PIXI === 'undefined') {\n    if (window.console) {\n        window.console.warn('pixi.js has to be loaded before loading gown.js');\n    }\n    return;\n}\n\nvar core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export GOWN globally.\nglobal.GOWN = core;\n","/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof GOWN\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                GOWN.InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n * @private\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String} text\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n\n/**\n * set max. length setting it to 0 will allow unlimited text input\n * @param length\n */\nInputWrapper.setMaxLength = function(length) {\n    if (InputWrapper.hiddenInput) {\n        if (!length || length < 0) {\n            InputWrapper.hiddenInput.removeAttribute('maxlength');\n        } else {\n            InputWrapper.hiddenInput.setAttribute('maxlength', length);\n        }\n    } else {\n        InputWrapper._maxLength = length;\n    }\n};\n\nInputWrapper.setType = function(type) {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.type = type;\n    } else {\n        InputWrapper._type = type;\n    }\n};\n\nInputWrapper.getType = function() {\n    if (InputWrapper.hiddenInput) {\n        return InputWrapper.hiddenInput.type;\n    } else {\n        return InputWrapper._type;\n    }\n};","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n\n\n    // apply scaling when the window gets resized using worldTansformation\n    var scope = this;\n    window.addEventListener('resize', function() {\n        scope._applyScales('tl', scope.tl);\n        scope._applyScales('tm', scope.tm);\n        scope._applyScales('tr', scope.tr);\n\n        scope._applyScales('cl', scope.cl);\n        scope._applyScales('cm', scope.cm);\n        scope._applyScales('cr', scope.cr);\n\n        scope._applyScales('bl', scope.bl);\n        scope._applyScales('bm', scope.bm);\n        scope._applyScales('br', scope.br);\n    });\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * apply scaling when the window gets resized using worldTansformation\n *\n * @method _applyScales\n * @private\n */\nScaleContainer.prototype._applyScales = function(name, elem) {\n    if (this.scaleOriginals[name]) {\n        elem.width = (Math.ceil(this.scaleOriginals[name].width *\n            this.worldTransform.a) /\n            this.worldTransform.a);\n        elem.height = (Math.ceil(this.scaleOriginals[name].height *\n            this.worldTransform.d) /\n            this.worldTransform.d);\n    }\n};\n\n/**\n * set scaling width and height\n *\n * @method _applyScales\n * @private\n */\nScaleContainer.prototype._updateScales = function() {\n    this._positionTilable();\n\n    var scaleOriginals = this.scaleOriginals = {};\n\n    var scaleOriginal = function(name, elem) {\n        if (elem && elem.width && elem.height) {\n            scaleOriginals[name] = {\n                width: elem.width,\n                height: elem.height\n            };\n        }\n    };\n\n    scaleOriginal('tl', this.tl);\n    scaleOriginal('tm', this.tm);\n    scaleOriginal('tr', this.tr);\n\n    scaleOriginal('cl', this.cl);\n    scaleOriginal('cm', this.cm);\n    scaleOriginal('cr', this.cr);\n\n    scaleOriginal('bl', this.bl);\n    scaleOriginal('bm', this.bm);\n    scaleOriginal('br', this.br);\n};\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof GOWN\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the gown.js util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (GOWN._mouseWheelHandler !== undefined) {\n            return;\n        }\n        GOWN._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                GOWN._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n    } else {\n        if (GOWN._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                GOWN._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n        GOWN._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.height - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}