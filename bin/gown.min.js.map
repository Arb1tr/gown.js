{"version":3,"sources":["../../lib/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/core/Control.js","gown.min.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/core/skin/ThemeFont.js","src/src/index.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mouseWheelSupport.js","src/utils/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","GOWN","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"Control","PIXI","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","updateTransform","redraw","mousePos","data","getLocalPosition","defineProperty","get","_enabled","set","value","_width","width","_height","height",2,"Skinable","skinCache","undefined","invalidState","resizeScaling","minWidth","minHeight","_lastWidth","NaN","_lastHeight","controlSetTheme","preloadSkins","changeSkin","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_currentState","worldWidth","worldHeight","updateDimensions","wt","worldTransform","scaleX","scaleY","pt","parent","Math","sqrt","pow","b","c","d","max","DisplayObject","tx","ty","scale","j","children","_skinName","./Control",3,"Application","background","fullscreen","renderer","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","cleanup","removeCanvas","removeChild","_removeBackground","onresize","resize","bg","child","_fullscreen","removeEventListener","_onresize","bind","addEventListener","_background","Array","Sprite","../Control",4,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","hitArea","Rectangle","labelText","style","fontSize","textStyle","updateLabelDimensions","type","currentState","_pressed","_over","hoverSkin","redrawSkinable","createLabel","text","_label","clone","Text","x","floor","y","skinableSetTheme","font","labelFont","color","labelColor","indexOf","label","../Skinable",5,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","posToCoord","substring","_isBitmapFont","prevCharCode","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",6,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","updateRenderable","renderable","getChildAt","../layout/ViewPortBounds",7,"ScrollArea","content","addListener","scrolldelta","bar","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","direction","scrollAuto","scroll","_scrollContent","contentMoved","min","updateBar","thumb","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",8,"ScrollBar","scrollArea","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",9,"ScrollThumb","scrollable","defaultSkin","thumbSkin","THUMB_STATES","thumbSize","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","local","stopPropagation","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","move","isNaN","maxWidth","maxHeight","./Button",10,"mode","DESKTOP_MODE","_inverse","touchStart","handleDown","touchEnd","MOBILE_MODE","center","target","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","showProgress","./ScrollThumb",11,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","pixelToValue","position","maximum","valueToPixel","sliderData","../../utils/SliderData",12,"TextInput","displayAsPassword","_displayAsPassword","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","cursor","selectionBg","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","_origText","replace","setText","_maxChars","setMaxLength","maxChars","setType","updateSelection","start","end","setSelection","updateSelectionBg","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","cursorPos","drawCursor","time","Date","now","visible","mouse","selectionStart","curPos","originalEvent","getText","sel","getSelection","./InputControl",13,"ToggleButton","slice","push","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","_selected","selected","state","substr","toggle","buttonHandleEvent",14,"HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/InputControl","./controls/LayoutGroup","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",15,"./LayoutAlignment",16,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",17,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","explicitSpace","paddingStart","./Layout",18,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",19,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",20,21,22,23,"_drawShape","graphics","moveTo","lineTo","./Shape",24,"drawEllipse",25,"reverse","_reverse",26,"radius","_radius","drawRoundedRect",27,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",28,"_skins","ThemeFont","textureCache","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","_jsonPath","loader","add","load","loadComplete","resources","textures","getScaleContainer","grid","scope","texture","getImage","removeTheme","../../utils/ScaleContainer","./ThemeFont",29,"key","OPTIONS","fill","_fontFamily","_fontSize","_updateFont","_font",30,"console","warn","core","utils","./core","./utils",31,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","removeAttribute","setAttribute","_maxLength","_type","getType",32,"rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","_applyScales","elem","scaleOriginals","ceil","_updateScales","_positionTilable","scaleOriginal","w","h","rightX","bottomY","middleWidth","centerHeight","fromFrame","frameId","TextureCache",33,34,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",35,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",36,"centerVertical","centerHorizontal"],"mappings":"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","file":"gown.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * PIXI method to update the object transform for rendering\n * Used to call redraw() before rendering\n *\n * @method updateTransform\n */\nControl.prototype.updateTransform = function() {\n    if(this.redraw) {\n        this.redraw();\n    }\n\n    PIXI.Container.prototype.updateTransform.call(this);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {PIXI.Point}\n */\nControl.prototype.mousePos = function(e) {\n    return e.data.getLocalPosition(this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set redraw)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set redraw)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n    }\n});\n",null,"var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || GOWN.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.resizeScaling = true; // resize instead of scale\n\n    this.minWidth = 1;\n    this.minHeight = 1;\n\n    // update dimension flag\n    this._lastWidth = NaN;\n    this._lastHeight = NaN;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeSkin\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeSkin = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeSkin);\n    }\n    var width = this.worldWidth;\n    var height = this.worldHeight;\n    if (this._currentSkin &&\n        (this._lastWidth !== width || this._lastHeight !== height) &&\n        width > 0 && height > 0) {\n\n        this._currentSkin.width = this._lastWidth = width;\n        this._currentSkin.height = this._lastHeight = height;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\nSkinable.prototype.updateTransform = function() {\n    var wt = this.worldTransform;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if(this.redraw) {\n\n        if(this.resizeScaling) {\n            var pt = this.parent.worldTransform;\n\n            scaleX = Math.sqrt(Math.pow(pt.a, 2) + Math.pow(pt.b, 2));\n            scaleY = Math.sqrt(Math.pow(pt.c, 2) + Math.pow(pt.d, 2));\n        }\n\n        this.worldWidth = Math.max(this._width * scaleX, this.minWidth);\n        this.worldHeight = Math.max(this._height * scaleY, this.minHeight);\n        this.redraw();\n    }\n\n    // obmit Control.updateTransform as it calls redraw as well\n    if(!this.resizeScaling) {\n        PIXI.Container.prototype.updateTransform.call(this);\n    } else {\n        PIXI.DisplayObject.prototype.updateTransform.call(this);\n\n        // revert scaling\n        var tx = wt.tx;\n        var ty = wt.ty;\n        scaleX = scaleX !== 0 ? 1/scaleX : 0;\n        scaleY = scaleY !== 0 ? 1/scaleY : 0;\n        wt.scale(scaleX, scaleY);\n        wt.tx = tx;\n        wt.ty = ty;\n\n        for (var i = 0, j = this.children.length; i < j; ++i) {\n            this.children[i].updateTransform();\n        }\n    }\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});\n","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen || false;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n * (uses a separate canvas to create a new Texture)\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(gradient, width, height) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width || 256;\n    bgCanvas.height = height || 256;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0, 0, 0, bgCanvas.height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * clean application: remove event listener, free memory\n * (can also remove the canvas from the DOM tree if wanted)\n *\n * @method cleanup\n * @param removeCanvas destroys the canvas and remove it from the dom tree\n */\nApplication.prototype.cleanup = function(removeCanvas) {\n    removeCanvas = removeCanvas || true;\n    if (removeCanvas) {\n        document.body.removeChild(this._renderer.view);\n    }\n    this._stage = null;\n    this._renderer = null;\n    this._removeBackground();\n    this.fullscreen = false; // remove event listener\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * remove background\n * @method _removeBackground\n * @private\n */\nApplication.prototype._removeBackground = function() {\n    if (this.bg) {\n        this.removeChild(this.bg);\n        this.bg = null;\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize', this._onresize);\n        } else if (!this._fullscreen && value) {\n            this._onresize = this.onresize.bind(this);\n            window.addEventListener('resize', this._onresize);\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        this._removeBackground();\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n            if (this.width) {\n                skin.width = this.width;\n            }\n            if (this.height) {\n                skin.height = this.height;\n            }\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    var width = this.worldWidth;\n    var height = this.worldHeight;\n    if (this.hitArea) {\n        this.hitArea.width = width;\n        this.hitArea.height = height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, width, height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = width;\n            skin.height = height;\n        }\n    }\n\n    if(this.labelText) {\n        var scaleY = height / this._height;\n        this.labelText.style.fontSize = this.theme.textStyle.fontSize * scaleY;\n        this.labelText.style = this.labelText.style; // trigger setter\n        this.updateLabelDimensions();\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over && this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else if (this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle.clone();\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle.clone());\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.worldWidth - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.worldHeight - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});\n","var Skinable = require('../Skinable'),\n    InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || '';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type GOWN.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x,\n        pos = text.length;\n\n    if (x < this.textWidth(text) + totalWidth)\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\nInputControl.prototype.posToCoord = function(pos) {\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x;\n\n    if (pos < text.length) {\n        return totalWidth + this.textWidth(text.substring(0, pos));\n    } else {\n        return totalWidth + this.textWidth(text);\n    }\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (GOWN.InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (GOWN.InputControl.currentInput) {\n        GOWN.InputControl.currentInput.blur();\n    }\n\n    // set focus\n    GOWN.InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (GOWN.InputControl.currentInput === this) {\n        GOWN.InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (GOWN.InputControl.currentInput &&\n        !GOWN.InputControl.currentInput._mouseDown) {\n        GOWN.InputControl.currentInput.blur();\n        GOWN.InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n\n/**\n * Update renderable (culling of non visible objects)\n *\n * @method updateRenderable\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.updateRenderable = function(x, y, width, height) {\n    for(var i=0, j=this.children.length; i<j; i++) {\n        var child = this.children[i];\n        child.renderable = this.childIsRenderAble(child, x, y, width, height);\n    }\n};\n\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});\n","var Control = require('../Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta, bar) {\n    this.addListener = addListener || true;\n    this.bar = bar || null;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * get 1-dimensional scroll direction\n * dissolve \"auto\" into VERTICAL or HORIZONTAL\n *\n * @method direction\n * @returns {String}\n */\nScrollArea.prototype.direction = function() {\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    return scroll;\n};\n\n/**\n * move content\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scroll = this.direction();\n    var contentMoved = false;\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n            contentMoved = true;\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n            contentMoved = true;\n        }\n    }\n    return contentMoved;\n};\n\n// update ScrollBar progress/thumb position\nScrollArea.prototype.updateBar = function() {\n    if (this.bar && this.bar.thumb && this.content) {\n        var scroll = this.direction();\n        if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n            this.bar.thumb.x = Math.floor(-this.content.x /\n                (this.content.width - this.width) *\n                (this.bar.width - this.bar.thumb.width));\n        }\n        if (scroll === ScrollArea.SCROLL_VERTICAL) {\n            this.bar.thumb.y = Math.floor(-this.content.y /\n            (this.content.height - this.height) *\n            (this.bar.height - this.bar.thumb.height));\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.data.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.data.getLocalPosition(this);\n        if (this._scrollContent(\n                pos.x - this._start[0],\n                pos.y - this._start[1])) {\n            this.updateBar();\n        }\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n\n/**\n * update mask as needed\n *\n * @method redraw\n */\nScrollArea.prototype.redraw = function() {\n    if (this.content.updateRenderable) {\n        this.content.updateRenderable(-this.content.x, -this.content.y, this.width, this.height);\n    }\n\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    if (scrollArea) {\n        //scrollArea\n        // move thumb when scrollarea moves\n        scrollArea.bar = this;\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    var defaultSkin = ScrollThumb.SKIN_NAME;\n    if (!theme.thumbSkin) {\n        defaultSkin = Button.SKIN_NAME;\n    }\n    this.skinName = this.skinName || defaultSkin;\n    if (theme.thumbSkin) {\n        this._validStates = ScrollThumb.THUMB_STATES;\n    }\n    this.width = theme.thumbSize || 20;\n    this.height = theme.thumbSize || 20;\n    Button.call(this, theme);\n    this.invalidTrack = true;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nScrollThumb.THUMB_STATES = [\n    'horizontal_up', 'vertical_up',\n    'horizontal_down', 'vertical_down',\n    'horizontal_hover', 'vertical_hover'\n];\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        if (this.theme.thumbSkin) {\n            // use skin including orientation instead of default skin\n            value = this.scrollable.orientation + '_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    var local = mouseData.data.getLocalPosition(this.scrollable);\n    this.scrollable._start = [local.x, local.y];\n    //this.scrollable.handleDown(mouseData);\n    mouseData.stopPropagation();\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mouseup;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\n/**\n * show track icon on thumb\n *\n * @method showTrack\n * @param skin\n */\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\n/**\n * redraw the skin\n *\n * @method redraw\n */\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack && this.theme.thumbSkin) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method move\n */\nScrollThumb.prototype.move = function(x, y) {\n    if (this.scrollable.orientation === GOWN.Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.scrollable.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.x) {\n            this.x = x;\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.scrollable.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.y) {\n            this.y = y;\n            return true;\n        }\n    }\n    return false;\n};","var Skinable = require('../Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, this.theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n\n    this.touchStart = this.mousedown = this.handleDown;\n    this.touchEnd = this.mouseup = this.mouseupoutside = this.handleUp;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * move scroll thumb clicking somewhere on the scroll bar (outside the thumb)\n *\n * @method handleDown\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this);\n    var center = {\n        x: local.x - this.thumb.width / 2,\n        y: local.y - this.thumb.height / 2\n    };\n    if (mouseData.target === this &&\n        this.moveThumb(center.x, center.y)) {\n        this._start = [local.x, local.y];\n        // do not override localX/localY in start\n        // if we do not move the thumb\n        this.thumbMoved(local.x, local.y);\n    }\n};\n\n/**\n * handle mouse up/touch end\n *\n * @method handleUp\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n *\n * @method handleMove\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.data.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n *\n * @method handleWheel\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n *\n * @method thumbMoved\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n *\n * @method _updateProgressSkin\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n *\n * @method maxWidth\n * @returns {Number}\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n *\n * @method maxHeight\n * @returns {Number}\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method moveThumb\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if (this.thumb.move(x, y)) {\n        this._updateProgressSkin();\n        return true;\n    }\n    return false;\n};\n\n/**\n * show scroll track\n *\n * @method showTrack\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @method showProgress\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * redraw track and progressbar\n *\n * @method redraw\n */\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10; //TODO: implement me!\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n *\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var pos = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        pos = x;\n    } else {\n        pos = y;\n    }\n    this.value = this.pixelToValue(pos);\n};\n\n/**\n * calculate value of slider based on current pixel position of thumb\n *\n * @param position\n * @method pixelToValue\n * @returns Number value between minimum and maximum\n */\nSlider.prototype.pixelToValue = function(position) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position / max * (this.maximum - this.minimum) + this.minimum;\n};\n\n/**\n * calculate current pixel position of thumb based on given value\n *\n * @param value\n * @method valueToPixel\n * @returns Number position of the scroll thumb in pixel\n */\nSlider.prototype.valueToPixel = function(value) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position;\n};\n\n/**\n * set value (between minimum and maximum)\n *\n * @property value\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        if (this._value === value) {\n            return;\n        }\n\n        // move thumb\n        var pos = this.valueToPixel(value);\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.moveThumb(pos, 0);\n        } else {\n            this.moveThumb(0, pos);\n        }\n\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n *\n * @property minimum\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n *\n * @property maximum\n * @type Number\n * @default 100\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends GOWN.InputControl\n * @memberof GOWN\n * @param text editable text shown in input\n * @param displayAsPassword Display TextInput as Password (default false)\n * @theme default theme\n * @constructor\n */\n\nfunction TextInput(text, displayAsPassword, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    this._displayAsPassword = displayAsPassword || false;\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle);\n    this.addChild(this.cursor);\n\n    // selection background\n    this.selectionBg = new PIXI.Graphics();\n    this.addChildAt(this.selectionBg, 0);\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create(InputControl.prototype);\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field.\n * calls onTextChange callback if text changes\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function () {\n        return this._text;\n    },\n    set: function (text) {\n        text += ''; // add '' to assure text is parsed as string\n        if (this._origText === text) {\n            // return if text has not changed\n            return;\n        }\n        this._origText = text;\n        if (this._displayAsPassword) {\n            text = text.replace(/./gi, '*');\n        }\n        this._text = text || '';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.text = text;\n        }\n\n        // update text input if this text field has the focus\n        if (this.hasFocus) {\n            InputWrapper.setText(this.value);\n        }\n\n        // reposition cursor\n        this._cursorNeedsUpdate = true;\n        if (this.change) {\n            this.change(text);\n        }\n    }\n});\n\n/**\n * The maximum number of characters that may be entered. If 0,\n * any number of characters may be entered.\n * (same as maxLength for DOM inputs)\n *\n * @default 0\n * @property maxChars\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'maxChars', {\n    get: function () {\n        return this._maxChars;\n    },\n    set: function (value) {\n        if (this._maxChars === value) {\n            return;\n        }\n        InputWrapper.setMaxLength(value);\n        this._maxChars = value;\n    }\n});\n\nObject.defineProperty(TextInput.prototype, 'value', {\n    get: function() {\n        return this._origText;\n    }\n});\n\n/**\n * set text and type of DOM text input\n *\n * @method onfocus\n */\nTextInput.prototype.onfocus = function() {\n    InputWrapper.setText(this.value);\n    InputWrapper.setMaxLength(this.maxChars);\n    if (this._displayAsPassword) {\n        InputWrapper.setType('password');\n    } else {\n        InputWrapper.setType('text');\n    }\n};\n\n/**\n * set selected text\n *\n * @method updateSelection\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function (start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        this.updateSelectionBg();\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.updateSelectionBg = function() {\n    var start = this.posToCoord(this.selection[0]),\n        end = this.posToCoord(this.selection[1]);\n\n    this.selectionBg.clear();\n    if (start !== end) {\n        this.selectionBg.beginFill(0x0080ff);\n        this.selectionBg.drawRect(0, 0, end - start, this.pixiText.height);\n        this.selectionBg.x = start;\n        this.selectionBg.y = this.pixiText.y;\n    }\n};\n\nTextInput.prototype.onblur = function() {\n    this.updateSelection(0, 0);\n};\n\nTextInput.prototype.onSubmit = function () {\n};\n\nTextInput.prototype.onKeyDown = function (e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function () {\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function () {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function () {\n    if (this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if ((time - this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if (this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function () {\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function (e) {\n    var mouse = this.mousePos(e);\n    if (!this.hasFocus || !this._mouseDown || this.selectionStart < 0) { // || !this.containsPoint(mouse)) {\n        return false;\n    }\n\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this.setCursorPos();\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    this.setCursorPos();\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if (!(this.selectionStart >= 0 && clickPos !== this.selectionStart)) {\n        this.cursorPos = clickPos;\n        this.setCursorPos();\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function () {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text) {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n    this.setCursorPos();\n};","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the gown.js core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n\n    // controls\n    Application:            require('./controls/Application'),\n    Button:                 require('./controls/Button'),\n    InputControl:           require('./controls/InputControl'),\n    LayoutGroup:            require('./controls/LayoutGroup'),\n    Scrollable:             require('./controls/Scrollable'),\n    ScrollArea:             require('./controls/ScrollArea'),\n    ScrollBar:              require('./controls/ScrollBar'),\n    ScrollThumb:            require('./controls/ScrollThumb'),\n    Slider:                 require('./controls/Slider'),\n    TextInput:              require('./controls/TextInput'),\n    ToggleButton:           require('./controls/ToggleButton'),\n\n    // layout\n    HorizontalLayout:     require('./layout/HorizontalLayout'),\n    Layout:               require('./layout/Layout'),\n    LayoutAlignment:      require('./layout/LayoutAlignment'),\n    TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n    TiledLayout:          require('./layout/TiledLayout'),\n    TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n    VerticalLayout:       require('./layout/VerticalLayout'),\n    ViewPortBounds:       require('./layout/ViewPortBounds'),\n\n    // shapes\n    Diamond:           require('./shapes/Diamond'),\n    Ellipse:           require('./shapes/Ellipse'),\n    Line:              require('./shapes/Line'),\n    Rect:              require('./shapes/Rect'),\n    Shape:             require('./shapes/Shape'),\n\n    // skin\n    Theme:           require('./skin/Theme')\n};\n","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof GOWN\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof GOWN\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof GOWN\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n\nShape.prototype.updateTransform = function() {\n    this.redraw();\n\n    PIXI.Graphics.prototype.updateTransform.call(this);\n};\n\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    if(!this.invalid) {\n        return;\n    }\n\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n\n    this.invalid = false;\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\nvar ThemeFont = require('./ThemeFont');\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof GOWN\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    // default font for labels (e.g. buttons)\n    this.textStyle = this.textStyle || new ThemeFont();\n    this.textStyle.clone();\n\n    if (global === true || global === undefined) {\n        GOWN.theme = this;\n    }\n    this.textureCache = null;\n    // own skin for scroll/slider track\n    // (uses the default button skin otherwise)\n    this.thumbSkin = true;\n\n    // desktop themes have a hover skin if the mouse moves over the button\n    this.hoverSkin = true;\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    this._jsonPath = jsonPath;\n    GOWN.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * executed when loadImage has finished\n *\n * @method loadComplete\n */\nTheme.prototype.loadComplete = function(loader, resources) {\n    this.textureCache = resources.resources[this._jsonPath].textures;\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    var scope = this;\n    return function() {\n        var texture = scope.textureCache[name];\n        if(!texture) {\n            throw new Error('The frameId \"' + name + '\" does not exist ' +\n            'in the texture cache');\n        }\n        return new ScaleContainer(texture, grid);\n\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    var scope = this;\n    return function() {\n        return new PIXI.Sprite(scope.textureCache[name]);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    GOWN.theme = undefined;\n};\n","var OPTIONS = ['fontSize', 'fontFamily', 'fill', 'align', 'stroke',\n               'strokeThickness', 'wordWrap', 'wordWrapWidth', 'lineHeight',\n               'dropShadow', 'dropShadowColor', 'dropShadowAngle',\n               'dropShadowDistance', 'padding', 'textBaseline',\n               'lineJoin', 'miterLimit'];\n\n/**\n * @class ThemeFont\n * @memberof GOWN\n * @constructor\n */\nfunction ThemeFont(data) {\n    for(var key in data) {\n        if(OPTIONS.indexOf(key) !== -1) {\n            this[key] = data[key];\n        }\n    }\n\n    this.fill = this.fill || '#000';\n    // default font for label (e.g. buttons)\n    this._fontFamily = this._fontFamily || 'Arial';\n    this._fontSize = this._fontSize || 12;\n}\n\nmodule.exports = ThemeFont;\n\n\n/**\n * clone ThemeFont instance\n *\n * @method clone\n */\nThemeFont.prototype.clone = function() {\n    var re = new ThemeFont();\n    for(var key in this) {\n        if(OPTIONS.indexOf(key) !== -1) {\n            re[key] = this[key];\n        }\n    }\n    return re;\n};\n\n/**\n * update font string\n *\n * @method _updateFont\n * @private\n */\nThemeFont.prototype._updateFont = function() {\n    this._font = this._fontSize + 'px ' + this._fontFamily;\n};\n\n/**\n * instead of setting font using fontFamily and fontSize is encouraged\n *\n * @property font\n * @type String\n */\nObject.defineProperty(ThemeFont.prototype, 'font', {\n    get: function() {\n        return this._font;\n    }\n});\n\n\n/**\n * Font Size\n *\n * @property fontSize\n * @type Number\n */\nObject.defineProperty(ThemeFont.prototype, 'fontSize', {\n    get: function() {\n        return this._fontSize;\n    },\n    set: function(value) {\n        this._fontSize = value;\n        this._updateFont();\n    }\n});\n\n\n/**\n * Font Familiy\n *\n * @property fontFamily\n * @type String\n */\nObject.defineProperty(ThemeFont.prototype, 'fontFamily', {\n    get: function() {\n        return this._fontFamily;\n    },\n    set: function(value) {\n        this._fontFamily = value;\n        this._updateFont();\n    }\n});\n","if (typeof PIXI === 'undefined') {\n    if (window.console) {\n        window.console.warn('pixi.js has to be loaded before loading gown.js');\n    }\n    return;\n}\n\nvar core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export GOWN globally.\nglobal.GOWN = core;\n","/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof GOWN\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                GOWN.InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n * @private\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String} text\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n\n/**\n * set max. length setting it to 0 will allow unlimited text input\n * @param length\n */\nInputWrapper.setMaxLength = function(length) {\n    if (InputWrapper.hiddenInput) {\n        if (!length || length < 0) {\n            InputWrapper.hiddenInput.removeAttribute('maxlength');\n        } else {\n            InputWrapper.hiddenInput.setAttribute('maxlength', length);\n        }\n    } else {\n        InputWrapper._maxLength = length;\n    }\n};\n\nInputWrapper.setType = function(type) {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.type = type;\n    } else {\n        InputWrapper._type = type;\n    }\n};\n\nInputWrapper.getType = function() {\n    if (InputWrapper.hiddenInput) {\n        return InputWrapper.hiddenInput.type;\n    } else {\n        return InputWrapper._type;\n    }\n};","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n\n\n    // apply scaling when the window gets resized using worldTansformation\n    var scope = this;\n    window.addEventListener('resize', function() {\n        scope._applyScales('tl', scope.tl);\n        scope._applyScales('tm', scope.tm);\n        scope._applyScales('tr', scope.tr);\n\n        scope._applyScales('cl', scope.cl);\n        scope._applyScales('cm', scope.cm);\n        scope._applyScales('cr', scope.cr);\n\n        scope._applyScales('bl', scope.bl);\n        scope._applyScales('bm', scope.bm);\n        scope._applyScales('br', scope.br);\n    });\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * apply scaling when the window gets resized using worldTansformation\n *\n * @method _applyScales\n * @private\n */\nScaleContainer.prototype._applyScales = function(name, elem) {\n    if (this.scaleOriginals[name]) {\n        elem.width = (Math.ceil(this.scaleOriginals[name].width *\n            this.worldTransform.a) /\n            this.worldTransform.a);\n        elem.height = (Math.ceil(this.scaleOriginals[name].height *\n            this.worldTransform.d) /\n            this.worldTransform.d);\n    }\n};\n\n/**\n * set scaling width and height\n *\n * @method _applyScales\n * @private\n */\nScaleContainer.prototype._updateScales = function() {\n    this._positionTilable();\n\n    var scaleOriginals = this.scaleOriginals = {};\n\n    var scaleOriginal = function(name, elem) {\n        if (elem && elem.width && elem.height) {\n            scaleOriginals[name] = {\n                width: elem.width,\n                height: elem.height\n            };\n        }\n    };\n\n    scaleOriginal('tl', this.tl);\n    scaleOriginal('tm', this.tm);\n    scaleOriginal('tr', this.tr);\n\n    scaleOriginal('cl', this.cl);\n    scaleOriginal('cm', this.cm);\n    scaleOriginal('cr', this.cr);\n\n    scaleOriginal('bl', this.bl);\n    scaleOriginal('bm', this.bm);\n    scaleOriginal('br', this.br);\n};\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof GOWN\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the gown.js util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (GOWN._mouseWheelHandler !== undefined) {\n            return;\n        }\n        GOWN._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                GOWN._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n    } else {\n        if (GOWN._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                GOWN._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n        GOWN._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.height - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}