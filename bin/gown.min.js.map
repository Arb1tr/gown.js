{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/index","gown.min.js","src/core/Control.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mouseWheelSupport.js","src/utils/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","GOWN","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"PIXI","console","warn","core","utils","loader","./core","./utils",2,"Control","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","renderWebGL","renderer","redraw","renderCanvas","mousePos","data","getLocalPosition","defineProperty","get","_enabled","set","value","_width","width","invalidDimensions","_height","height",3,"Skinable","skinCache","undefined","invalidState","controlSetTheme","preloadSkins","changeSkin","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_currentState","updateDimensions","_skinName","./Control",4,"Application","background","fullscreen","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","cleanup","removeCanvas","removeChild","_removeBackground","onresize","resize","bg","children","child","_fullscreen","removeEventListener","_onresize","bind","addEventListener","_background","Array","Sprite","../Control",5,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","hitArea","Rectangle","type","currentState","_pressed","_over","hoverSkin","redrawSkinable","createLabel","labelText","text","_label","style","textStyle","Text","updateLabelDimensions","x","Math","floor","y","skinableSetTheme","font","labelFont","color","labelColor","indexOf","label","../Skinable",6,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","posToCoord","substring","_isBitmapFont","prevCharCode","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",7,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","renderAreaWebGL","visible","worldAlpha","renderable","j","_mask","_filters","currentRenderer","flush","filterManager","pushFilter","maskManager","pushMask","start","_renderWebGL","popMask","popFilter","renderAreaCanvas","_renderCanvas","getChildAt","max","../layout/ViewPortBounds",8,"ScrollArea","content","addListener","scrolldelta","bar","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","direction","scrollAuto","scroll","_scrollContent","contentMoved","min","updateBar","thumb","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",9,"ScrollBar","scrollArea","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",10,"ScrollThumb","scrollable","defaultSkin","thumbSkin","THUMB_STATES","thumbSize","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","local","stopPropagation","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","move","isNaN","maxWidth","maxHeight","./Button",11,"mode","DESKTOP_MODE","_inverse","touchStart","handleDown","touchEnd","MOBILE_MODE","center","target","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","showProgress","./ScrollThumb",12,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","pixelToValue","position","maximum","valueToPixel","sliderData","../../utils/SliderData",13,"TextInput","displayAsPassword","_displayAsPassword","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","cursor","selectionBg","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","_origText","replace","setText","_maxChars","setMaxLength","maxChars","setType","updateSelection","end","setSelection","updateSelectionBg","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","cursorPos","drawCursor","time","Date","now","mouse","selectionStart","curPos","originalEvent","getText","sel","getSelection","./InputControl",14,"ToggleButton","slice","push","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","_selected","selected","state","substr","toggle","buttonHandleEvent",15,"HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/InputControl","./controls/LayoutGroup","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",16,"./LayoutAlignment",17,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",18,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","NaN","explicitSpace","paddingStart","./Layout",19,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",20,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",21,22,23,24,"_drawShape","graphics","moveTo","lineTo","./Shape",25,"drawEllipse",26,"reverse","_reverse",27,"radius","_radius","drawRoundedRect",28,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",29,"_skins","fill","textureCache","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","_jsonPath","add","load","loadComplete","resources","textures","getScaleContainer","grid","scope","texture","getImage","removeTheme","../../utils/ScaleContainer",30,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","removeAttribute","setAttribute","_maxLength","_type","getType",31,"rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","w","h","clone","_positionTilable","rightX","bottomY","middleWidth","centerHeight","fromFrame","frameId","TextureCache",32,33,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",34,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",35,"centerVertical","elem","parent","centerHorizontal"],"mappings":"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","file":"gown.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (global){\nif (typeof PIXI === 'undefined') {\n  console.warn('pixi.js has to be loaded before loading gown.js');\n  return;\n}\n\nvar core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export GOWN globally.\nglobal.GOWN = core;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbImlmICh0eXBlb2YgUElYSSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgY29uc29sZS53YXJuKCdwaXhpLmpzIGhhcyB0byBiZSBsb2FkZWQgYmVmb3JlIGxvYWRpbmcgZ293bi5qcycpO1xuICByZXR1cm47XG59XG5cbnZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2NvcmUnKTtcblxuLy8gYWRkIGNvcmUgcGx1Z2lucy5cbmNvcmUudXRpbHMgICAgICAgICAgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbi8vIHVzZSBkZWZhdWx0IHBpeGkgbG9hZGVyXG5jb3JlLmxvYWRlciA9IFBJWEkubG9hZGVyO1xuXG4vLyBtaXhpbiB0aGUgZGVwcmVjYXRpb24gZmVhdHVyZXMuXG4vL09iamVjdC5hc3NpZ24oY29yZSwgcmVxdWlyZSgnLi9kZXByZWNhdGlvbicpKTtcblxuLy8gZXhwb3J0IEdPV04gZ2xvYmFsbHkuXG5nbG9iYWwuR09XTiA9IGNvcmU7XG4iXX0=",null,"/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {PIXI.Point}\n */\nControl.prototype.mousePos = function(e) {\n    return e.data.getLocalPosition(this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n        this.invalidDimensions = true;\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n        this.invalidDimensions = true;\n    }\n});","var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || GOWN.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.invalidDimensions = true;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeSkin\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeSkin = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeSkin);\n    }\n    if (this._currentSkin &&\n        this.invalidDimensions &&\n        this._width > 0 && this._height > 0) {\n\n        this._currentSkin.width = this._width;\n        this._currentSkin.height = this._height;\n        this.invalidDimensions = false;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen || false;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n * (uses a separate canvas to create a new Texture)\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(gradient, width, height) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width || 256;\n    bgCanvas.height = height || 256;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0, 0, 0, bgCanvas.height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * clean application: remove event listener, free memory\n * (can also remove the canvas from the DOM tree if wanted)\n *\n * @method cleanup\n * @param removeCanvas destroys the canvas and remove it from the dom tree\n */\nApplication.prototype.cleanup = function(removeCanvas) {\n    removeCanvas = removeCanvas || true;\n    if (removeCanvas) {\n        document.body.removeChild(this._renderer.view);\n    }\n    this._stage = null;\n    this._renderer = null;\n    this._removeBackground();\n    this.fullscreen = false; // remove event listener\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * remove background\n * @method _removeBackground\n * @private\n */\nApplication.prototype._removeBackground = function() {\n    if (this.bg) {\n        this.removeChild(this.bg);\n        this.bg = null;\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize', this._onresize);\n        } else if (!this._fullscreen && value) {\n            this._onresize = this.onresize.bind(this);\n            window.addEventListener('resize', this._onresize);\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        this._removeBackground();\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n            if (this.width) {\n                skin.width = this.width;\n            }\n            if (this.height) {\n                skin.height = this.height;\n            }\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = this.width;\n            skin.height = this.height;\n        }\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over && this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else if (this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle;\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle);\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.width - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.height - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});","var Skinable = require('../Skinable'),\n    InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || '';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type GOWN.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x,\n        pos = text.length;\n\n    if (x < this.textWidth(text) + totalWidth)\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\nInputControl.prototype.posToCoord = function(pos) {\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x;\n\n    if (pos < text.length) {\n        return totalWidth + this.textWidth(text.substring(0, pos));\n    } else {\n        return totalWidth + this.textWidth(text);\n    }\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (GOWN.InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (GOWN.InputControl.currentInput) {\n        GOWN.InputControl.currentInput.blur();\n    }\n\n    // set focus\n    GOWN.InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (GOWN.InputControl.currentInput === this) {\n        GOWN.InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (GOWN.InputControl.currentInput &&\n        !GOWN.InputControl.currentInput._mouseDown) {\n        GOWN.InputControl.currentInput.blur();\n        GOWN.InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n/**\n * only render specific area\n * @method renderAreaWebGL\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaWebGL = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if(this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * only render specific area\n * @method renderAreaWebCanvas\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaCanvas = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for (var i = 0, j = this.children.length; i < j; ++i)\n    {\n        // only render children if they are visible\n        var child = this.children[i];\n        if (this.childIsRenderAble(child, x, y, width, height)) {\n            child._renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});","var Control = require('../Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta, bar) {\n    this.addListener = addListener || true;\n    this.bar = bar || null;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * get 1-dimensional scroll direction\n * dissolve \"auto\" into VERTICAL or HORIZONTAL\n *\n * @method direction\n * @returns {String}\n */\nScrollArea.prototype.direction = function() {\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    return scroll;\n};\n\n/**\n * move content\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scroll = this.direction();\n    var contentMoved = false;\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n            contentMoved = true;\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n            contentMoved = true;\n        }\n    }\n    return contentMoved;\n};\n\n// update ScrollBar progress/thumb position\nScrollArea.prototype.updateBar = function() {\n    if (this.bar && this.bar.thumb && this.content) {\n        var scroll = this.direction();\n        if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n            this.bar.thumb.x = Math.floor(-this.content.x /\n                (this.content.width - this.width) *\n                (this.bar.width - this.bar.thumb.width));\n        }\n        if (scroll === ScrollArea.SCROLL_VERTICAL) {\n            this.bar.thumb.y = Math.floor(-this.content.y /\n            (this.content.height - this.height) *\n            (this.bar.height - this.bar.thumb.height));\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.data.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.data.getLocalPosition(this);\n        if (this._scrollContent(\n                pos.x - this._start[0],\n                pos.y - this._start[1])) {\n            this.updateBar();\n        }\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderWebGL = function(renderer)\n{\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if (this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderCanvas = function(renderer)\n{\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        if (child.renderAreaCanvas) {\n            child.renderAreaCanvas(renderer, -this.content.x, -this.content.y, this.width, this.height);\n        } else {\n            child.renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\nScrollArea.prototype.redraw = function() {\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    if (scrollArea) {\n        //scrollArea\n        // move thumb when scrollarea moves\n        scrollArea.bar = this;\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    var defaultSkin = ScrollThumb.SKIN_NAME;\n    if (!theme.thumbSkin) {\n        defaultSkin = Button.SKIN_NAME;\n    }\n    this.skinName = this.skinName || defaultSkin;\n    if (theme.thumbSkin) {\n        this._validStates = ScrollThumb.THUMB_STATES;\n    }\n    this.width = theme.thumbSize || 20;\n    this.height = theme.thumbSize || 20;\n    Button.call(this, theme);\n    this.invalidTrack = true;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nScrollThumb.THUMB_STATES = [\n    'horizontal_up', 'vertical_up',\n    'horizontal_down', 'vertical_down',\n    'horizontal_hover', 'vertical_hover'\n];\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        if (this.theme.thumbSkin) {\n            // use skin including orientation instead of default skin\n            value = this.scrollable.orientation + '_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    var local = mouseData.data.getLocalPosition(this.scrollable);\n    this.scrollable._start = [local.x, local.y];\n    //this.scrollable.handleDown(mouseData);\n    mouseData.stopPropagation();\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mouseup;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\n/**\n * show track icon on thumb\n *\n * @method showTrack\n * @param skin\n */\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\n/**\n * redraw the skin\n *\n * @method redraw\n */\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack && this.theme.thumbSkin) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method move\n */\nScrollThumb.prototype.move = function(x, y) {\n    if (this.scrollable.orientation === GOWN.Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.scrollable.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.x) {\n            this.x = x;\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.scrollable.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.y) {\n            this.y = y;\n            return true;\n        }\n    }\n    return false;\n};","var Skinable = require('../Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, this.theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n\n    this.touchStart = this.mousedown = this.handleDown;\n    this.touchEnd = this.mouseup = this.mouseupoutside = this.handleUp;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * move scroll thumb clicking somewhere on the scroll bar (outside the thumb)\n *\n * @method handleDown\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this);\n    var center = {\n        x: local.x - this.thumb.width / 2,\n        y: local.y - this.thumb.height / 2\n    };\n    if (mouseData.target === this &&\n        this.moveThumb(center.x, center.y)) {\n        this._start = [local.x, local.y];\n        // do not override localX/localY in start\n        // if we do not move the thumb\n        this.thumbMoved(local.x, local.y);\n    }\n};\n\n/**\n * handle mouse up/touch end\n *\n * @method handleUp\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n *\n * @method handleMove\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.data.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n *\n * @method handleWheel\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n *\n * @method thumbMoved\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n *\n * @method _updateProgressSkin\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n *\n * @method maxWidth\n * @returns {Number}\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n *\n * @method maxHeight\n * @returns {Number}\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method moveThumb\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if (this.thumb.move(x, y)) {\n        this._updateProgressSkin();\n        return true;\n    }\n    return false;\n};\n\n/**\n * show scroll track\n *\n * @method showTrack\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @method showProgress\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * redraw track and progressbar\n *\n * @method redraw\n */\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10; //TODO: implement me!\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n *\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var pos = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        pos = x;\n    } else {\n        pos = y;\n    }\n    this.value = this.pixelToValue(pos);\n};\n\n/**\n * calculate value of slider based on current pixel position of thumb\n *\n * @param position\n * @method pixelToValue\n * @returns Number value between minimum and maximum\n */\nSlider.prototype.pixelToValue = function(position) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position / max * (this.maximum - this.minimum) + this.minimum;\n};\n\n/**\n * calculate current pixel position of thumb based on given value\n *\n * @param value\n * @method valueToPixel\n * @returns Number position of the scroll thumb in pixel\n */\nSlider.prototype.valueToPixel = function(value) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position;\n};\n\n/**\n * set value (between minimum and maximum)\n *\n * @property value\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        if (this._value === value) {\n            return;\n        }\n\n        // move thumb\n        var pos = this.valueToPixel(value);\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.moveThumb(pos, 0);\n        } else {\n            this.moveThumb(0, pos);\n        }\n\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n *\n * @property minimum\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n *\n * @property maximum\n * @type Number\n * @default 100\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends GOWN.InputControl\n * @memberof GOWN\n * @param text editable text shown in input\n * @param displayAsPassword Display TextInput as Password (default false)\n * @theme default theme\n * @constructor\n */\n\nfunction TextInput(text, displayAsPassword, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    this._displayAsPassword = displayAsPassword || false;\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle);\n    this.addChild(this.cursor);\n\n    // selection background\n    this.selectionBg = new PIXI.Graphics();\n    this.addChildAt(this.selectionBg, 0);\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create(InputControl.prototype);\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field.\n * calls onTextChange callback if text changes\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function () {\n        return this._text;\n    },\n    set: function (text) {\n        text += ''; // add '' to assure text is parsed as string\n        if (this._origText === text) {\n            // return if text has not changed\n            return;\n        }\n        this._origText = text;\n        if (this._displayAsPassword) {\n            text = text.replace(/./gi, '*');\n        }\n        this._text = text || '';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.text = text;\n        }\n\n        // update text input if this text field has the focus\n        if (this.hasFocus) {\n            InputWrapper.setText(this.value);\n        }\n\n        // reposition cursor\n        this._cursorNeedsUpdate = true;\n        if (this.change) {\n            this.change(text);\n        }\n    }\n});\n\n/**\n * The maximum number of characters that may be entered. If 0,\n * any number of characters may be entered.\n * (same as maxLength for DOM inputs)\n *\n * @default 0\n * @property maxChars\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'maxChars', {\n    get: function () {\n        return this._maxChars;\n    },\n    set: function (value) {\n        if (this._maxChars === value) {\n            return;\n        }\n        InputWrapper.setMaxLength(value);\n        this._maxChars = value;\n    }\n});\n\nObject.defineProperty(TextInput.prototype, 'value', {\n    get: function() {\n        return this._origText;\n    }\n});\n\n/**\n * set text and type of DOM text input\n *\n * @method onfocus\n */\nTextInput.prototype.onfocus = function() {\n    InputWrapper.setText(this.value);\n    InputWrapper.setMaxLength(this.maxChars);\n    if (this._displayAsPassword) {\n        InputWrapper.setType('password');\n    } else {\n        InputWrapper.setType('text');\n    }\n};\n\n/**\n * set selected text\n *\n * @method updateSelection\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function (start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        this.updateSelectionBg();\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.updateSelectionBg = function() {\n    var start = this.posToCoord(this.selection[0]),\n        end = this.posToCoord(this.selection[1]);\n\n    this.selectionBg.clear();\n    if (start !== end) {\n        this.selectionBg.beginFill(0x0080ff);\n        this.selectionBg.drawRect(0, 0, end - start, this.pixiText.height);\n        this.selectionBg.x = start;\n        this.selectionBg.y = this.pixiText.y;\n    }\n};\n\nTextInput.prototype.onblur = function() {\n    this.updateSelection(0, 0);\n};\n\nTextInput.prototype.onSubmit = function () {\n};\n\nTextInput.prototype.onKeyDown = function (e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function () {\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function () {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function () {\n    if (this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if ((time - this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if (this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function () {\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function (e) {\n    var mouse = this.mousePos(e);\n    if (!this.hasFocus || !this._mouseDown || this.selectionStart < 0) { // || !this.containsPoint(mouse)) {\n        return false;\n    }\n\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this.setCursorPos();\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    this.setCursorPos();\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if (!(this.selectionStart >= 0 && clickPos !== this.selectionStart)) {\n        this.cursorPos = clickPos;\n        this.setCursorPos();\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function () {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text) {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n    this.setCursorPos();\n};","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the gown.js core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n\n    // controls\n    Application:            require('./controls/Application'),\n    Button:                 require('./controls/Button'),\n    InputControl:           require('./controls/InputControl'),\n    LayoutGroup:            require('./controls/LayoutGroup'),\n    Scrollable:             require('./controls/Scrollable'),\n    ScrollArea:             require('./controls/ScrollArea'),\n    ScrollBar:              require('./controls/ScrollBar'),\n    ScrollThumb:            require('./controls/ScrollThumb'),\n    Slider:                 require('./controls/Slider'),\n    TextInput:              require('./controls/TextInput'),\n    ToggleButton:           require('./controls/ToggleButton'),\n\n    // layout\n    HorizontalLayout:     require('./layout/HorizontalLayout'),\n    Layout:               require('./layout/Layout'),\n    LayoutAlignment:      require('./layout/LayoutAlignment'),\n    TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n    TiledLayout:          require('./layout/TiledLayout'),\n    TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n    VerticalLayout:       require('./layout/VerticalLayout'),\n    ViewPortBounds:       require('./layout/ViewPortBounds'),\n\n    // shapes\n    Diamond:           require('./shapes/Diamond'),\n    Ellipse:           require('./shapes/Ellipse'),\n    Line:              require('./shapes/Line'),\n    Rect:              require('./shapes/Rect'),\n    Shape:             require('./shapes/Shape'),\n\n    // skin\n    Theme:           require('./skin/Theme')\n};\n","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof GOWN\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof GOWN\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof GOWN\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n// renderer\n/* istanbul ignore next */\nShape.prototype.renderWebGL = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderWebGL.call(this, renderer);\n};\n\n/* istanbul ignore next */\nShape.prototype.renderCanvas = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderCanvas.call(this, renderer);\n};\n\n// shape drawing\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\n\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof GOWN\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    this.textStyle = this.textStyle || {};\n    // default color for label (e.g. buttons)\n    this.textStyle.fill = this.textStyle.fill || '#000';\n    // default font for label (e.g. buttons)\n    this.textStyle.font = this.textStyle.font || '12px Arial';\n\n    if (global === true || global === undefined) {\n        GOWN.theme = this;\n    }\n    this.textureCache = null;\n    // own skin for scroll/slider track\n    // (uses the default button skin otherwise)\n    this.thumbSkin = true;\n\n    // desktop themes have a hover skin if the mouse moves over the button\n    this.hoverSkin = true;\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    this._jsonPath = jsonPath;\n    GOWN.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * executed when loadImage has finished\n *\n * @method loadComplete\n */\nTheme.prototype.loadComplete = function(loader, resources) {\n    this.textureCache = resources.resources[this._jsonPath].textures;\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    var scope = this;\n    return function() {\n        var texture = scope.textureCache[name];\n        if(!texture) {\n            throw new Error('The frameId \"' + name + '\" does not exist ' +\n            'in the texture cache');\n        }\n        return new ScaleContainer(texture, grid);\n\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    var scope = this;\n    return function() {\n        return new PIXI.Sprite(scope.textureCache[name]);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    GOWN.theme = undefined;\n};","/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof GOWN\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                GOWN.InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n * @private\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String} text\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n\n/**\n * set max. length setting it to 0 will allow unlimited text input\n * @param length\n */\nInputWrapper.setMaxLength = function(length) {\n    if (InputWrapper.hiddenInput) {\n        if (!length || length < 0) {\n            InputWrapper.hiddenInput.removeAttribute('maxlength');\n        } else {\n            InputWrapper.hiddenInput.setAttribute('maxlength', length);\n        }\n    } else {\n        InputWrapper._maxLength = length;\n    }\n};\n\nInputWrapper.setType = function(type) {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.type = type;\n    } else {\n        InputWrapper._type = type;\n    }\n};\n\nInputWrapper.getType = function() {\n    if (InputWrapper.hiddenInput) {\n        return InputWrapper.hiddenInput.type;\n    } else {\n        return InputWrapper._type;\n    }\n};","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof GOWN\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the gown.js util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (GOWN._mouseWheelHandler !== undefined) {\n            return;\n        }\n        GOWN._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                GOWN._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n    } else {\n        if (GOWN._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                GOWN._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n        GOWN._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.height - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}