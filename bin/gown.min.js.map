{"version":3,"sources":["../../lib/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/core/Control.js","gown.min.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/CheckBox.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/core/skin/ThemeFont.js","src/src/index.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mouseWheelSupport.js","src/utils/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","GOWN","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"Control","PIXI","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","updateTransform","redraw","mousePos","data","getLocalPosition","defineProperty","get","_enabled","set","value","_width","width","_height","height",2,"Skinable","skinCache","undefined","invalidState","resizeScaling","minWidth","minHeight","_lastWidth","NaN","_lastHeight","controlSetTheme","preloadSkins","changeSkin","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_currentState","worldWidth","worldHeight","updateDimensions","wt","worldTransform","scaleX","scaleY","pt","parent","Math","sqrt","pow","b","c","d","max","DisplayObject","tx","ty","scale","j","children","_skinName","./Control",3,"Application","background","fullscreen","renderer","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","cleanup","removeCanvas","removeChild","_removeBackground","onresize","resize","bg","child","_fullscreen","removeEventListener","_onresize","bind","addEventListener","_background","Array","Sprite","../Control",4,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","hitArea","Rectangle","labelText","style","fontSize","textStyle","updateLabelDimensions","type","currentState","_pressed","_over","hoverSkin","redrawSkinable","createLabel","text","_label","clone","Text","x","floor","y","skinableSetTheme","font","labelFont","color","labelColor","indexOf","label","../Skinable",5,"CheckBox","preselected","concat","selectedStateNames","selected","_mousedown","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","index","state","_selected","toggleSelected",6,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","posToCoord","substring","_isBitmapFont","prevCharCode","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",7,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","updateRenderable","renderable","getChildAt","../layout/ViewPortBounds",8,"ScrollArea","content","addListener","scrolldelta","bar","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","direction","scrollAuto","scroll","_scrollContent","contentMoved","min","updateBar","thumb","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",9,"ScrollBar","scrollArea","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",10,"ScrollThumb","scrollable","defaultSkin","thumbSkin","THUMB_STATES","thumbSize","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","local","stopPropagation","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","move","isNaN","maxWidth","maxHeight","./Button",11,"mode","DESKTOP_MODE","_inverse","touchStart","handleDown","touchEnd","MOBILE_MODE","center","target","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","showProgress","./ScrollThumb",12,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","pixelToValue","position","maximum","valueToPixel","sliderData","../../utils/SliderData",13,"TextInput","displayAsPassword","_displayAsPassword","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","cursor","selectionBg","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","_origText","replace","setText","_maxChars","setMaxLength","maxChars","setType","updateSelection","start","end","setSelection","updateSelectionBg","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","cursorPos","drawCursor","time","Date","now","visible","mouse","selectionStart","curPos","originalEvent","getText","sel","getSelection","./InputControl",14,"ToggleButton","slice","push","substr","toggle","buttonHandleEvent",15,"HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/CheckBox","./controls/InputControl","./controls/LayoutGroup","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",16,"./LayoutAlignment",17,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",18,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","explicitSpace","paddingStart","./Layout",19,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",20,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",21,22,23,24,"_drawShape","graphics","moveTo","lineTo","./Shape",25,"drawEllipse",26,"reverse","_reverse",27,"radius","_radius","drawRoundedRect",28,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",29,"_skins","ThemeFont","textureCache","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","_jsonPath","loader","add","load","loadComplete","resources","textures","getScaleContainer","grid","scope","texture","getImage","removeTheme","../../utils/ScaleContainer","./ThemeFont",30,"key","OPTIONS","fill","_fontFamily","_fontSize","_updateFont","_font",31,"console","warn","core","utils","./core","./utils",32,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","removeAttribute","setAttribute","_maxLength","_type","getType",33,"rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","_applyScales","elem","scaleOriginals","ceil","_updateScales","_positionTilable","scaleOriginal","w","h","rightX","bottomY","middleWidth","centerHeight","fromFrame","frameId","TextureCache",34,35,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",36,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",37,"centerVertical","centerHorizontal"],"mappings":"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","file":"gown.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * PIXI method to update the object transform for rendering\n * Used to call redraw() before rendering\n *\n * @method updateTransform\n */\nControl.prototype.updateTransform = function() {\n    if(this.redraw) {\n        this.redraw();\n    }\n\n    PIXI.Container.prototype.updateTransform.call(this);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {PIXI.Point}\n */\nControl.prototype.mousePos = function(e) {\n    return e.data.getLocalPosition(this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set redraw)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set redraw)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n    }\n});\n",null,"var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || GOWN.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.resizeScaling = true; // resize instead of scale\n\n    this.minWidth = 1;\n    this.minHeight = 1;\n\n    // update dimension flag\n    this._lastWidth = NaN;\n    this._lastHeight = NaN;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeSkin\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeSkin = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeSkin);\n    }\n    var width = this.worldWidth;\n    var height = this.worldHeight;\n    if (this._currentSkin &&\n        (this._lastWidth !== width || this._lastHeight !== height) &&\n        width > 0 && height > 0) {\n\n        this._currentSkin.width = this._lastWidth = width;\n        this._currentSkin.height = this._lastHeight = height;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\nSkinable.prototype.updateTransform = function() {\n    var wt = this.worldTransform;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if(this.redraw) {\n\n        if(this.resizeScaling) {\n            var pt = this.parent.worldTransform;\n\n            scaleX = Math.sqrt(Math.pow(pt.a, 2) + Math.pow(pt.b, 2));\n            scaleY = Math.sqrt(Math.pow(pt.c, 2) + Math.pow(pt.d, 2));\n        }\n\n        this.worldWidth = Math.max(this._width * scaleX, this.minWidth);\n        this.worldHeight = Math.max(this._height * scaleY, this.minHeight);\n        this.redraw();\n    }\n\n    // obmit Control.updateTransform as it calls redraw as well\n    if(!this.resizeScaling) {\n        PIXI.Container.prototype.updateTransform.call(this);\n    } else {\n        PIXI.DisplayObject.prototype.updateTransform.call(this);\n\n        // revert scaling\n        var tx = wt.tx;\n        var ty = wt.ty;\n        scaleX = scaleX !== 0 ? 1/scaleX : 0;\n        scaleY = scaleY !== 0 ? 1/scaleY : 0;\n        wt.scale(scaleX, scaleY);\n        wt.tx = tx;\n        wt.ty = ty;\n\n        for (var i = 0, j = this.children.length; i < j; ++i) {\n            this.children[i].updateTransform();\n        }\n    }\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});\n","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen || false;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n * (uses a separate canvas to create a new Texture)\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(gradient, width, height) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width || 256;\n    bgCanvas.height = height || 256;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0, 0, 0, bgCanvas.height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * clean application: remove event listener, free memory\n * (can also remove the canvas from the DOM tree if wanted)\n *\n * @method cleanup\n * @param removeCanvas destroys the canvas and remove it from the dom tree\n */\nApplication.prototype.cleanup = function(removeCanvas) {\n    removeCanvas = removeCanvas || true;\n    if (removeCanvas) {\n        document.body.removeChild(this._renderer.view);\n    }\n    this._stage = null;\n    this._renderer = null;\n    this._removeBackground();\n    this.fullscreen = false; // remove event listener\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * remove background\n * @method _removeBackground\n * @private\n */\nApplication.prototype._removeBackground = function() {\n    if (this.bg) {\n        this.removeChild(this.bg);\n        this.bg = null;\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize', this._onresize);\n        } else if (!this._fullscreen && value) {\n            this._onresize = this.onresize.bind(this);\n            window.addEventListener('resize', this._onresize);\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        this._removeBackground();\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n            if (this.width) {\n                skin.width = this.width;\n            }\n            if (this.height) {\n                skin.height = this.height;\n            }\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    var width = this.worldWidth;\n    var height = this.worldHeight;\n    if (this.hitArea) {\n        this.hitArea.width = width;\n        this.hitArea.height = height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, width, height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = width;\n            skin.height = height;\n        }\n    }\n\n    if(this.labelText) {\n        var scaleY = height / this._height;\n        this.labelText.style.fontSize = this.theme.textStyle.fontSize * scaleY;\n        this.labelText.style = this.labelText.style; // trigger setter\n        this.updateLabelDimensions();\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over && this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else if (this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle.clone();\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle.clone());\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.worldWidth - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.worldHeight - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic CheckBox with 3 normal states (up, down and hover)\n * and 3 selected states (selected_up, selected_down and selected_hover)\n *\n * @class CheckBox\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction CheckBox(preselected, theme) {\n    this.skinName = this.skinName || CheckBox.SKIN_NAME;\n    this._validStates = this._validStates || CheckBox.stateNames.concat(CheckBox.selectedStateNames);\n    Skinable.call(this, theme);\n\n    this._currentState = 'up';\n    this.selected = preselected || false;\n    this._mousedown = false;\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nCheckBox.prototype = Object.create( Skinable.prototype );\nCheckBox.prototype.constructor = CheckBox;\nmodule.exports = CheckBox;\n\n// name of skin that will be applied\nCheckBox.SKIN_NAME = 'checkbox';\n\n// the states of the checkbox as constants\nCheckBox.UP = 'up';\nCheckBox.DOWN = 'down';\nCheckBox.HOVER = 'hover';\n\n// the states of the checkbox in the 'selected' state as constants\nCheckBox.SELECTED_UP = 'selected_up';\nCheckBox.SELECTED_DOWN = 'selected_down';\nCheckBox.SELECTED_HOVER = 'selected_hover';\n\n// the list of non-selected states\nCheckBox.stateNames = [\n    CheckBox.UP,\n    CheckBox.DOWN,\n    CheckBox.HOVER\n];\n\n// the list of selected states\nCheckBox.selectedStateNames = [\n    CheckBox.SELECTED_UP,\n    CheckBox.SELECTED_DOWN,\n    CheckBox.SELECTED_HOVER\n];\n\nCheckBox.prototype.mousedown = function() {\n    this.handleEvent(CheckBox.DOWN);\n};\n\nCheckBox.prototype.mouseup = function() {\n    this.handleEvent(CheckBox.UP);\n};\n\nCheckBox.prototype.mousemove = function() {\n};\n\nCheckBox.prototype.mouseover = function() {\n    this.handleEvent(CheckBox.HOVER);\n};\n\nCheckBox.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nCheckBox.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n            if (this.width) {\n                skin.width = this.width;\n            }\n            if (this.height) {\n                skin.height = this.height;\n            }\n        }\n    }\n};\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(CheckBox.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        this.invalidState = true;\n    }\n});\n\n/**\n * Indicate if the checkbox is selected (checked)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(CheckBox.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        var index;\n        if ((CheckBox.selectedStateNames.indexOf(state) >= 0) && !selected) {\n            index = CheckBox.selectedStateNames.indexOf(state);\n            state = CheckBox.stateNames[index];\n        } else if ((CheckBox.stateNames.indexOf(state) >= 0) && selected) {\n            index = CheckBox.stateNames.indexOf(state);\n            state = CheckBox.selectedStateNames[index];\n        }\n\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\nCheckBox.prototype.toggleSelected = function () {\n    this.selected = !this.selected;\n};\n\nCheckBox.prototype.handleEvent = function (type) {\n    switch (type) {\n        case CheckBox.UP:\n            if (this._mousedown) {\n                this._mousedown = false;\n                this.toggleSelected();\n                this.currentState = this.selected ? CheckBox.SELECTED_UP : CheckBox.UP;\n            }\n            break;\n        case CheckBox.DOWN:\n            if (!this._mousedown) {\n                this._mousedown = true;\n                this.currentState = this.selected ? CheckBox.SELECTED_DOWN : CheckBox.DOWN;\n            }\n            break;\n        case CheckBox.HOVER:\n            if (!this._mousedown) {\n                this.currentState = this.selected ? CheckBox.SELECTED_HOVER : CheckBox.HOVER;\n            }\n            break;\n        case 'out':\n            this.currentState = this.selected ? CheckBox.SELECTED_UP : CheckBox.UP;\n            break;\n        default:\n            break;\n    }\n};\n","var Skinable = require('../Skinable'),\n    InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || '';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type GOWN.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x,\n        pos = text.length;\n\n    if (x < this.textWidth(text) + totalWidth)\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\nInputControl.prototype.posToCoord = function(pos) {\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x;\n\n    if (pos < text.length) {\n        return totalWidth + this.textWidth(text.substring(0, pos));\n    } else {\n        return totalWidth + this.textWidth(text);\n    }\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (GOWN.InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (GOWN.InputControl.currentInput) {\n        GOWN.InputControl.currentInput.blur();\n    }\n\n    // set focus\n    GOWN.InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (GOWN.InputControl.currentInput === this) {\n        GOWN.InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (GOWN.InputControl.currentInput &&\n        !GOWN.InputControl.currentInput._mouseDown) {\n        GOWN.InputControl.currentInput.blur();\n        GOWN.InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n\n/**\n * Update renderable (culling of non visible objects)\n *\n * @method updateRenderable\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.updateRenderable = function(x, y, width, height) {\n    for(var i=0, j=this.children.length; i<j; i++) {\n        var child = this.children[i];\n        child.renderable = this.childIsRenderAble(child, x, y, width, height);\n    }\n};\n\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});\n","var Control = require('../Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta, bar) {\n    this.addListener = addListener || true;\n    this.bar = bar || null;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * get 1-dimensional scroll direction\n * dissolve \"auto\" into VERTICAL or HORIZONTAL\n *\n * @method direction\n * @returns {String}\n */\nScrollArea.prototype.direction = function() {\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    return scroll;\n};\n\n/**\n * move content\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scroll = this.direction();\n    var contentMoved = false;\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n            contentMoved = true;\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n            contentMoved = true;\n        }\n    }\n    return contentMoved;\n};\n\n// update ScrollBar progress/thumb position\nScrollArea.prototype.updateBar = function() {\n    if (this.bar && this.bar.thumb && this.content) {\n        var scroll = this.direction();\n        if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n            this.bar.thumb.x = Math.floor(-this.content.x /\n                (this.content.width - this.width) *\n                (this.bar.width - this.bar.thumb.width));\n        }\n        if (scroll === ScrollArea.SCROLL_VERTICAL) {\n            this.bar.thumb.y = Math.floor(-this.content.y /\n            (this.content.height - this.height) *\n            (this.bar.height - this.bar.thumb.height));\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.data.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.data.getLocalPosition(this);\n        if (this._scrollContent(\n                pos.x - this._start[0],\n                pos.y - this._start[1])) {\n            this.updateBar();\n        }\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n\n/**\n * update mask as needed\n *\n * @method redraw\n */\nScrollArea.prototype.redraw = function() {\n    if (this.content.updateRenderable) {\n        this.content.updateRenderable(-this.content.x, -this.content.y, this.width, this.height);\n    }\n\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    if (scrollArea) {\n        //scrollArea\n        // move thumb when scrollarea moves\n        scrollArea.bar = this;\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    var defaultSkin = ScrollThumb.SKIN_NAME;\n    if (!theme.thumbSkin) {\n        defaultSkin = Button.SKIN_NAME;\n    }\n    this.skinName = this.skinName || defaultSkin;\n    if (theme.thumbSkin) {\n        this._validStates = ScrollThumb.THUMB_STATES;\n    }\n    this.width = theme.thumbSize || 20;\n    this.height = theme.thumbSize || 20;\n    Button.call(this, theme);\n    this.invalidTrack = true;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nScrollThumb.THUMB_STATES = [\n    'horizontal_up', 'vertical_up',\n    'horizontal_down', 'vertical_down',\n    'horizontal_hover', 'vertical_hover'\n];\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        if (this.theme.thumbSkin) {\n            // use skin including orientation instead of default skin\n            value = this.scrollable.orientation + '_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    var local = mouseData.data.getLocalPosition(this.scrollable);\n    this.scrollable._start = [local.x, local.y];\n    //this.scrollable.handleDown(mouseData);\n    mouseData.stopPropagation();\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mouseup;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\n/**\n * show track icon on thumb\n *\n * @method showTrack\n * @param skin\n */\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\n/**\n * redraw the skin\n *\n * @method redraw\n */\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack && this.theme.thumbSkin) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method move\n */\nScrollThumb.prototype.move = function(x, y) {\n    if (this.scrollable.orientation === GOWN.Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.scrollable.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.x) {\n            this.x = x;\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.scrollable.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.y) {\n            this.y = y;\n            return true;\n        }\n    }\n    return false;\n};","var Skinable = require('../Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, this.theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n\n    this.touchStart = this.mousedown = this.handleDown;\n    this.touchEnd = this.mouseup = this.mouseupoutside = this.handleUp;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * move scroll thumb clicking somewhere on the scroll bar (outside the thumb)\n *\n * @method handleDown\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this);\n    var center = {\n        x: local.x - this.thumb.width / 2,\n        y: local.y - this.thumb.height / 2\n    };\n    if (mouseData.target === this &&\n        this.moveThumb(center.x, center.y)) {\n        this._start = [local.x, local.y];\n        // do not override localX/localY in start\n        // if we do not move the thumb\n        this.thumbMoved(local.x, local.y);\n    }\n};\n\n/**\n * handle mouse up/touch end\n *\n * @method handleUp\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n *\n * @method handleMove\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.data.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n *\n * @method handleWheel\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n *\n * @method thumbMoved\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n *\n * @method _updateProgressSkin\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n *\n * @method maxWidth\n * @returns {Number}\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n *\n * @method maxHeight\n * @returns {Number}\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method moveThumb\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if (this.thumb.move(x, y)) {\n        this._updateProgressSkin();\n        return true;\n    }\n    return false;\n};\n\n/**\n * show scroll track\n *\n * @method showTrack\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @method showProgress\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * redraw track and progressbar\n *\n * @method redraw\n */\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10; //TODO: implement me!\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n *\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var pos = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        pos = x;\n    } else {\n        pos = y;\n    }\n    this.value = this.pixelToValue(pos);\n};\n\n/**\n * calculate value of slider based on current pixel position of thumb\n *\n * @param position\n * @method pixelToValue\n * @returns Number value between minimum and maximum\n */\nSlider.prototype.pixelToValue = function(position) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position / max * (this.maximum - this.minimum) + this.minimum;\n};\n\n/**\n * calculate current pixel position of thumb based on given value\n *\n * @param value\n * @method valueToPixel\n * @returns Number position of the scroll thumb in pixel\n */\nSlider.prototype.valueToPixel = function(value) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position;\n};\n\n/**\n * set value (between minimum and maximum)\n *\n * @property value\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        if (this._value === value) {\n            return;\n        }\n\n        // move thumb\n        var pos = this.valueToPixel(value);\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.moveThumb(pos, 0);\n        } else {\n            this.moveThumb(0, pos);\n        }\n\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n *\n * @property minimum\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n *\n * @property maximum\n * @type Number\n * @default 100\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends GOWN.InputControl\n * @memberof GOWN\n * @param text editable text shown in input\n * @param displayAsPassword Display TextInput as Password (default false)\n * @theme default theme\n * @constructor\n */\n\nfunction TextInput(text, displayAsPassword, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    this._displayAsPassword = displayAsPassword || false;\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle);\n    this.addChild(this.cursor);\n\n    // selection background\n    this.selectionBg = new PIXI.Graphics();\n    this.addChildAt(this.selectionBg, 0);\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create(InputControl.prototype);\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field.\n * calls onTextChange callback if text changes\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function () {\n        return this._text;\n    },\n    set: function (text) {\n        text += ''; // add '' to assure text is parsed as string\n        if (this._origText === text) {\n            // return if text has not changed\n            return;\n        }\n        this._origText = text;\n        if (this._displayAsPassword) {\n            text = text.replace(/./gi, '*');\n        }\n        this._text = text || '';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.text = text;\n        }\n\n        // update text input if this text field has the focus\n        if (this.hasFocus) {\n            InputWrapper.setText(this.value);\n        }\n\n        // reposition cursor\n        this._cursorNeedsUpdate = true;\n        if (this.change) {\n            this.change(text);\n        }\n    }\n});\n\n/**\n * The maximum number of characters that may be entered. If 0,\n * any number of characters may be entered.\n * (same as maxLength for DOM inputs)\n *\n * @default 0\n * @property maxChars\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'maxChars', {\n    get: function () {\n        return this._maxChars;\n    },\n    set: function (value) {\n        if (this._maxChars === value) {\n            return;\n        }\n        InputWrapper.setMaxLength(value);\n        this._maxChars = value;\n    }\n});\n\nObject.defineProperty(TextInput.prototype, 'value', {\n    get: function() {\n        return this._origText;\n    }\n});\n\n/**\n * set text and type of DOM text input\n *\n * @method onfocus\n */\nTextInput.prototype.onfocus = function() {\n    InputWrapper.setText(this.value);\n    InputWrapper.setMaxLength(this.maxChars);\n    if (this._displayAsPassword) {\n        InputWrapper.setType('password');\n    } else {\n        InputWrapper.setType('text');\n    }\n};\n\n/**\n * set selected text\n *\n * @method updateSelection\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function (start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        this.updateSelectionBg();\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.updateSelectionBg = function() {\n    var start = this.posToCoord(this.selection[0]),\n        end = this.posToCoord(this.selection[1]);\n\n    this.selectionBg.clear();\n    if (start !== end) {\n        this.selectionBg.beginFill(0x0080ff);\n        this.selectionBg.drawRect(0, 0, end - start, this.pixiText.height);\n        this.selectionBg.x = start;\n        this.selectionBg.y = this.pixiText.y;\n    }\n};\n\nTextInput.prototype.onblur = function() {\n    this.updateSelection(0, 0);\n};\n\nTextInput.prototype.onSubmit = function () {\n};\n\nTextInput.prototype.onKeyDown = function (e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function () {\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function () {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function () {\n    if (this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if ((time - this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if (this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function () {\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function (e) {\n    var mouse = this.mousePos(e);\n    if (!this.hasFocus || !this._mouseDown || this.selectionStart < 0) { // || !this.containsPoint(mouse)) {\n        return false;\n    }\n\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this.setCursorPos();\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    this.setCursorPos();\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if (!(this.selectionStart >= 0 && clickPos !== this.selectionStart)) {\n        this.cursorPos = clickPos;\n        this.setCursorPos();\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function () {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text) {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n    this.setCursorPos();\n};","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the gown.js core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n\n    // controls\n    Application:            require('./controls/Application'),\n    Button:                 require('./controls/Button'),\n    CheckBox:               require('./controls/CheckBox'),\n    InputControl:           require('./controls/InputControl'),\n    LayoutGroup:            require('./controls/LayoutGroup'),\n    Scrollable:             require('./controls/Scrollable'),\n    ScrollArea:             require('./controls/ScrollArea'),\n    ScrollBar:              require('./controls/ScrollBar'),\n    ScrollThumb:            require('./controls/ScrollThumb'),\n    Slider:                 require('./controls/Slider'),\n    TextInput:              require('./controls/TextInput'),\n    ToggleButton:           require('./controls/ToggleButton'),\n\n    // layout\n    HorizontalLayout:     require('./layout/HorizontalLayout'),\n    Layout:               require('./layout/Layout'),\n    LayoutAlignment:      require('./layout/LayoutAlignment'),\n    TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n    TiledLayout:          require('./layout/TiledLayout'),\n    TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n    VerticalLayout:       require('./layout/VerticalLayout'),\n    ViewPortBounds:       require('./layout/ViewPortBounds'),\n\n    // shapes\n    Diamond:           require('./shapes/Diamond'),\n    Ellipse:           require('./shapes/Ellipse'),\n    Line:              require('./shapes/Line'),\n    Rect:              require('./shapes/Rect'),\n    Shape:             require('./shapes/Shape'),\n\n    // skin\n    Theme:           require('./skin/Theme')\n};\n","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof GOWN\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof GOWN\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof GOWN\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n\nShape.prototype.updateTransform = function() {\n    this.redraw();\n\n    PIXI.Graphics.prototype.updateTransform.call(this);\n};\n\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    if(!this.invalid) {\n        return;\n    }\n\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n\n    this.invalid = false;\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\nvar ThemeFont = require('./ThemeFont');\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof GOWN\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    // default font for labels (e.g. buttons)\n    this.textStyle = this.textStyle || new ThemeFont();\n    this.textStyle.clone();\n\n    if (global === true || global === undefined) {\n        GOWN.theme = this;\n    }\n    this.textureCache = null;\n    // own skin for scroll/slider track\n    // (uses the default button skin otherwise)\n    this.thumbSkin = true;\n\n    // desktop themes have a hover skin if the mouse moves over the button\n    this.hoverSkin = true;\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    this._jsonPath = jsonPath;\n    GOWN.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * executed when loadImage has finished\n *\n * @method loadComplete\n */\nTheme.prototype.loadComplete = function(loader, resources) {\n    this.textureCache = resources.resources[this._jsonPath].textures;\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    var scope = this;\n    return function() {\n        var texture = scope.textureCache[name];\n        if(!texture) {\n            throw new Error('The frameId \"' + name + '\" does not exist ' +\n            'in the texture cache');\n        }\n        return new ScaleContainer(texture, grid);\n\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    var scope = this;\n    return function() {\n        return new PIXI.Sprite(scope.textureCache[name]);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    GOWN.theme = undefined;\n};\n","var OPTIONS = ['fontSize', 'fontFamily', 'fill', 'align', 'stroke',\n               'strokeThickness', 'wordWrap', 'wordWrapWidth', 'lineHeight',\n               'dropShadow', 'dropShadowColor', 'dropShadowAngle',\n               'dropShadowDistance', 'padding', 'textBaseline',\n               'lineJoin', 'miterLimit'];\n\n/**\n * @class ThemeFont\n * @memberof GOWN\n * @constructor\n */\nfunction ThemeFont(data) {\n    for(var key in data) {\n        if(OPTIONS.indexOf(key) !== -1) {\n            this[key] = data[key];\n        }\n    }\n\n    this.fill = this.fill || '#000';\n    // default font for label (e.g. buttons)\n    this._fontFamily = this._fontFamily || 'Arial';\n    this._fontSize = this._fontSize || 12;\n}\n\nmodule.exports = ThemeFont;\n\n\n/**\n * clone ThemeFont instance\n *\n * @method clone\n */\nThemeFont.prototype.clone = function() {\n    var re = new ThemeFont();\n    for(var key in this) {\n        if(OPTIONS.indexOf(key) !== -1) {\n            re[key] = this[key];\n        }\n    }\n    return re;\n};\n\n/**\n * update font string\n *\n * @method _updateFont\n * @private\n */\nThemeFont.prototype._updateFont = function() {\n    this._font = this._fontSize + 'px ' + this._fontFamily;\n};\n\n/**\n * instead of setting font using fontFamily and fontSize is encouraged\n *\n * @property font\n * @type String\n */\nObject.defineProperty(ThemeFont.prototype, 'font', {\n    get: function() {\n        return this._font;\n    }\n});\n\n\n/**\n * Font Size\n *\n * @property fontSize\n * @type Number\n */\nObject.defineProperty(ThemeFont.prototype, 'fontSize', {\n    get: function() {\n        return this._fontSize;\n    },\n    set: function(value) {\n        this._fontSize = value;\n        this._updateFont();\n    }\n});\n\n\n/**\n * Font Familiy\n *\n * @property fontFamily\n * @type String\n */\nObject.defineProperty(ThemeFont.prototype, 'fontFamily', {\n    get: function() {\n        return this._fontFamily;\n    },\n    set: function(value) {\n        this._fontFamily = value;\n        this._updateFont();\n    }\n});\n","if (typeof PIXI === 'undefined') {\n    if (window.console) {\n        window.console.warn('pixi.js has to be loaded before loading gown.js');\n    }\n    return;\n}\n\nvar core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export GOWN globally.\nglobal.GOWN = core;\n","/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof GOWN\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                GOWN.InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if (GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(GOWN.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (GOWN.InputControl.currentInput.hasFocus)\n                {\n                    GOWN.InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n * @private\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String} text\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n\n/**\n * set max. length setting it to 0 will allow unlimited text input\n * @param length\n */\nInputWrapper.setMaxLength = function(length) {\n    if (InputWrapper.hiddenInput) {\n        if (!length || length < 0) {\n            InputWrapper.hiddenInput.removeAttribute('maxlength');\n        } else {\n            InputWrapper.hiddenInput.setAttribute('maxlength', length);\n        }\n    } else {\n        InputWrapper._maxLength = length;\n    }\n};\n\nInputWrapper.setType = function(type) {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.type = type;\n    } else {\n        InputWrapper._type = type;\n    }\n};\n\nInputWrapper.getType = function() {\n    if (InputWrapper.hiddenInput) {\n        return InputWrapper.hiddenInput.type;\n    } else {\n        return InputWrapper._type;\n    }\n};","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n\n\n    // apply scaling when the window gets resized using worldTansformation\n    var scope = this;\n    window.addEventListener('resize', function() {\n        scope._applyScales('tl', scope.tl);\n        scope._applyScales('tm', scope.tm);\n        scope._applyScales('tr', scope.tr);\n\n        scope._applyScales('cl', scope.cl);\n        scope._applyScales('cm', scope.cm);\n        scope._applyScales('cr', scope.cr);\n\n        scope._applyScales('bl', scope.bl);\n        scope._applyScales('bm', scope.bm);\n        scope._applyScales('br', scope.br);\n    });\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * apply scaling when the window gets resized using worldTansformation\n *\n * @method _applyScales\n * @private\n */\nScaleContainer.prototype._applyScales = function(name, elem) {\n    if (this.scaleOriginals[name]) {\n        elem.width = (Math.ceil(this.scaleOriginals[name].width *\n            this.worldTransform.a) /\n            this.worldTransform.a);\n        elem.height = (Math.ceil(this.scaleOriginals[name].height *\n            this.worldTransform.d) /\n            this.worldTransform.d);\n    }\n};\n\n/**\n * set scaling width and height\n *\n * @method _applyScales\n * @private\n */\nScaleContainer.prototype._updateScales = function() {\n    this._positionTilable();\n\n    var scaleOriginals = this.scaleOriginals = {};\n\n    var scaleOriginal = function(name, elem) {\n        if (elem && elem.width && elem.height) {\n            scaleOriginals[name] = {\n                width: elem.width,\n                height: elem.height\n            };\n        }\n    };\n\n    scaleOriginal('tl', this.tl);\n    scaleOriginal('tm', this.tm);\n    scaleOriginal('tr', this.tr);\n\n    scaleOriginal('cl', this.cl);\n    scaleOriginal('cm', this.cm);\n    scaleOriginal('cr', this.cr);\n\n    scaleOriginal('bl', this.bl);\n    scaleOriginal('bm', this.bm);\n    scaleOriginal('br', this.br);\n};\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof GOWN\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the gown.js util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (GOWN._mouseWheelHandler !== undefined) {\n            return;\n        }\n        GOWN._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                GOWN._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n    } else {\n        if (GOWN._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                GOWN._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                GOWN._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                GOWN._mouseWheelHandler);\n        }\n        GOWN._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.height - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}