{"version":3,"sources":["../../lib/node_modules/browserify/node_modules/browser-pack/_prelude.js","pixi_ui.min.js","src/src/index.js","src/core/Control.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/PickerList.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mouseWheelSupport.js","src/utils/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PIXI_UI","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","utils","loader","PIXI","./core","./utils",2,"Control","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","renderWebGL","renderer","redraw","renderCanvas","mousePos","data","getLocalPosition","defineProperty","get","_enabled","set","value","_width","width","invalidDimensions","_height","height",3,"Skinable","skinCache","undefined","invalidState","controlSetTheme","preloadSkins","changeSkin","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_currentState","updateDimensions","_skinName","./Control",4,"Application","background","fullscreen","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","dispose","removeCanvas","removeChild","_removeBackground","onresize","resize","bg","children","child","_fullscreen","removeEventListener","_onresize","bind","addEventListener","_background","Array","Sprite","../Control",5,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","hitArea","Rectangle","type","currentState","_pressed","_over","hoverSkin","redrawSkinable","createLabel","labelText","text","_label","style","textStyle","Text","updateLabelDimensions","x","Math","floor","y","skinableSetTheme","font","labelFont","color","labelColor","indexOf","label","../Skinable",6,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","posToCoord","substring","_isBitmapFont","prevCharCode","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",7,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","renderAreaWebGL","visible","worldAlpha","renderable","j","_mask","_filters","currentRenderer","flush","filterManager","pushFilter","maskManager","pushMask","start","_renderWebGL","popMask","popFilter","renderAreaCanvas","_renderCanvas","getChildAt","max","../layout/ViewPortBounds",8,"PickerList","_dataProvider","selectedIndex",9,"ScrollArea","content","addListener","scrolldelta","bar","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","direction","scrollAuto","scroll","_scrollContent","contentMoved","min","updateBar","thumb","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",10,"ScrollBar","scrollArea","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",11,"ScrollThumb","scrollable","defaultSkin","thumbSkin","THUMB_STATES","thumbSize","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","local","stopPropagation","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","move","isNaN","maxWidth","maxHeight","./Button",12,"mode","DESKTOP_MODE","_inverse","touchStart","handleDown","touchEnd","MOBILE_MODE","center","target","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","showProgress","./ScrollThumb",13,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","pixelToValue","position","maximum","valueToPixel","sliderData","../../utils/SliderData",14,"TextInput","displayAsPassword","_displayAsPassword","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","cursor","selectionBg","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","_origText","replace","setText","_maxChars","setMaxLength","maxChars","setType","updateSelection","end","setSelection","updateSelectionBg","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","cursorPos","drawCursor","time","Date","now","mouse","selectionStart","curPos","originalEvent","getText","sel","getSelection","./InputControl",15,"ToggleButton","slice","push","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","_selected","selected","state","substr","toggle","buttonHandleEvent",16,"HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/InputControl","./controls/LayoutGroup","./controls/PickerList","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",17,"./LayoutAlignment",18,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",19,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","NaN","explicitSpace","paddingStart","./Layout",20,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",21,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",22,23,24,25,"_drawShape","graphics","moveTo","lineTo","./Shape",26,"drawEllipse",27,"reverse","_reverse",28,"radius","_radius","drawRoundedRect",29,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",30,"_skins","fill","textureCache","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","_jsonPath","add","load","loadComplete","resources","textures","getScaleContainer","grid","scope","texture","getImage","removeTheme","../../utils/ScaleContainer",31,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","removeAttribute","setAttribute","_maxLength","_type","getType",32,"rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","w","h","clone","_positionTilable","rightX","bottomY","middleWidth","centerHeight","fromFrame","frameId","TextureCache",33,34,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",35,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",36,"centerVertical","elem","parent","centerHorizontal"],"mappings":"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","file":"pixi_ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"var core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export PIXI_UI globally.\nglobal.PIXI_UI = core;","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {PIXI.Point}\n */\nControl.prototype.mousePos = function(e) {\n    return e.data.getLocalPosition(this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n        this.invalidDimensions = true;\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n        this.invalidDimensions = true;\n    }\n});","var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || PIXI_UI.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.invalidDimensions = true;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeSkin\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeSkin = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeSkin);\n    }\n    if (this._currentSkin &&\n        this.invalidDimensions &&\n        this._width > 0 && this._height > 0) {\n\n        this._currentSkin.width = this._width;\n        this._currentSkin.height = this._height;\n        this.invalidDimensions = false;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen || false;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n * (uses a separate canvas to create a new Texture)\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(gradient, width, height) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width || 256;\n    bgCanvas.height = height || 256;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0, 0, 0, bgCanvas.height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * clean application: remove event listener, free memory\n * (can also remove the canvas from the DOM tree if wanted)\n *\n * @method dispose\n * @param removeCanvas destroys the canvas and remove it from the dom tree\n */\nApplication.prototype.dispose = function(removeCanvas) {\n    removeCanvas = removeCanvas || true;\n    if (removeCanvas) {\n        document.body.removeChild(this._renderer.view);\n    }\n    this._stage = null;\n    this._renderer = null;\n    this._removeBackground();\n    this.fullscreen = false; // remove event listener\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * remove background\n * @method _removeBackground\n * @private\n */\nApplication.prototype._removeBackground = function() {\n    if (this.bg) {\n        this.removeChild(this.bg);\n        this.bg = null;\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize', this._onresize);\n        } else if (!this._fullscreen && value) {\n            this._onresize = this.onresize.bind(this);\n            window.addEventListener('resize', this._onresize);\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        this._removeBackground();\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n            if (this.width) {\n                skin.width = this.width;\n            }\n            if (this.height) {\n                skin.height = this.height;\n            }\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = this.width;\n            skin.height = this.height;\n        }\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over && this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else if (this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle;\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle);\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.width - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.height - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});","var Skinable = require('../Skinable'),\n    InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || '';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type PIXI_UI.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x,\n        pos = text.length;\n\n    if (x < this.textWidth(text) + totalWidth)\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\nInputControl.prototype.posToCoord = function(pos) {\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x;\n\n    if (pos < text.length) {\n        return totalWidth + this.textWidth(text.substring(0, pos));\n    } else {\n        return totalWidth + this.textWidth(text);\n    }\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (PIXI_UI.InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (PIXI_UI.InputControl.currentInput) {\n        PIXI_UI.InputControl.currentInput.blur();\n    }\n\n    // set focus\n    PIXI_UI.InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (PIXI_UI.InputControl.currentInput === this) {\n        PIXI_UI.InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (PIXI_UI.InputControl.currentInput &&\n        !PIXI_UI.InputControl.currentInput._mouseDown) {\n        PIXI_UI.InputControl.currentInput.blur();\n        PIXI_UI.InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n/**\n * only render specific area\n * @method renderAreaWebGL\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaWebGL = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if(this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * only render specific area\n * @method renderAreaWebCanvas\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaCanvas = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for (var i = 0, j = this.children.length; i < j; ++i)\n    {\n        // only render children if they are visible\n        var child = this.children[i];\n        if (this.childIsRenderAble(child, x, y, width, height)) {\n            child._renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});","var Control = require('../Control');\n\n/**\n * PickerList allows the user to select an option from a list\n *\n * @class PickerList\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction PickerList() {\n    // TODO: inherit Button?\n    Control.call(this);\n    this._dataProvider = [];\n\n    // selected item\n    // TODO: create setter that updates the list\n    this.selectedIndex = -1;\n    // TODO: toggle button?\n}\n\nPickerList.prototype = Object.create( Control.prototype );\nPickerList.prototype.constructor = PickerList;\nmodule.exports = PickerList;\n\n// name of skin that will be applied\nPickerList.SKIN_NAME = 'pickerlist';\n\n// TODO: prompt\n// TODO: PopupManager (?)\n// TODO: createButton\n// TODO: createList","var Control = require('../Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta, bar) {\n    this.addListener = addListener || true;\n    this.bar = bar || null;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * get 1-dimensional scroll direction\n * dissolve \"auto\" into VERTICAL or HORIZONTAL\n *\n * @method direction\n * @returns {String}\n */\nScrollArea.prototype.direction = function() {\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    return scroll;\n};\n\n/**\n * move content\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scroll = this.direction();\n    var contentMoved = false;\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n            contentMoved = true;\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n            contentMoved = true;\n        }\n    }\n    return contentMoved;\n};\n\n// update ScrollBar progress/thumb position\nScrollArea.prototype.updateBar = function() {\n    if (this.bar && this.bar.thumb && this.content) {\n        var scroll = this.direction();\n        if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n            this.bar.thumb.x = Math.floor(-this.content.x /\n                (this.content.width - this.width) *\n                (this.bar.width - this.bar.thumb.width));\n        }\n        if (scroll === ScrollArea.SCROLL_VERTICAL) {\n            this.bar.thumb.y = Math.floor(-this.content.y /\n            (this.content.height - this.height) *\n            (this.bar.height - this.bar.thumb.height));\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.data.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.data.getLocalPosition(this);\n        if (this._scrollContent(\n                pos.x - this._start[0],\n                pos.y - this._start[1])) {\n            this.updateBar();\n        }\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderWebGL = function(renderer)\n{\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if (this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderCanvas = function(renderer)\n{\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        if (child.renderAreaCanvas) {\n            child.renderAreaCanvas(renderer, -this.content.x, -this.content.y, this.width, this.height);\n        } else {\n            child.renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\nScrollArea.prototype.redraw = function() {\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    if (scrollArea) {\n        //scrollArea\n        // move thumb when scrollarea moves\n        scrollArea.bar = this;\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    var defaultSkin = ScrollThumb.SKIN_NAME;\n    if (!theme.thumbSkin) {\n        defaultSkin = Button.SKIN_NAME;\n    }\n    this.skinName = this.skinName || defaultSkin;\n    if (theme.thumbSkin) {\n        this._validStates = ScrollThumb.THUMB_STATES;\n    }\n    this.width = theme.thumbSize || 20;\n    this.height = theme.thumbSize || 20;\n    Button.call(this, theme);\n    this.invalidTrack = true;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nScrollThumb.THUMB_STATES = [\n    'horizontal_up', 'vertical_up',\n    'horizontal_down', 'vertical_down',\n    'horizontal_hover', 'vertical_hover'\n];\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        if (this.theme.thumbSkin) {\n            // use skin including orientation instead of default skin\n            value = this.scrollable.orientation + '_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    var local = mouseData.data.getLocalPosition(this.scrollable);\n    this.scrollable._start = [local.x, local.y];\n    //this.scrollable.handleDown(mouseData);\n    mouseData.stopPropagation();\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mouseup;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\n/**\n * show track icon on thumb\n *\n * @method showTrack\n * @param skin\n */\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\n/**\n * redraw the skin\n *\n * @method redraw\n */\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack && this.theme.thumbSkin) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method move\n */\nScrollThumb.prototype.move = function(x, y) {\n    if (this.scrollable.orientation === PIXI_UI.Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.scrollable.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.x) {\n            this.x = x;\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.scrollable.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.y) {\n            this.y = y;\n            return true;\n        }\n    }\n    return false;\n};","var Skinable = require('../Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n\n    this.touchStart = this.mousedown = this.handleDown;\n    this.touchEnd = this.mouseup = this.mouseupoutside = this.handleUp;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * move scroll thumb clicking somewhere on the scroll bar (outside the thumb)\n *\n * @method handleDown\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this);\n    var center = {\n        x: local.x - this.thumb.width / 2,\n        y: local.y - this.thumb.height / 2\n    };\n    if (mouseData.target === this &&\n        this.moveThumb(center.x, center.y)) {\n        this._start = [local.x, local.y];\n        // do not override localX/localY in start\n        // if we do not move the thumb\n        this.thumbMoved(local.x, local.y);\n    }\n};\n\n/**\n * handle mouse up/touch end\n *\n * @method handleUp\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n *\n * @method handleMove\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.data.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n *\n * @method handleWheel\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n *\n * @method thumbMoved\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n *\n * @method _updateProgressSkin\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n *\n * @method maxWidth\n * @returns {Number}\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n *\n * @method maxHeight\n * @returns {Number}\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method moveThumb\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if (this.thumb.move(x, y)) {\n        this._updateProgressSkin();\n        return true;\n    }\n    return false;\n};\n\n/**\n * show scroll track\n *\n * @method showTrack\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @method showProgress\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * redraw track and progressbar\n *\n * @method redraw\n */\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10; //TODO: implement me!\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n *\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var pos = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        pos = x;\n    } else {\n        pos = y;\n    }\n    this.value = this.pixelToValue(pos);\n};\n\n/**\n * calculate value of slider based on current pixel position of thumb\n *\n * @param position\n * @method pixelToValue\n * @returns Number value between minimum and maximum\n */\nSlider.prototype.pixelToValue = function(position) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position / max * (this.maximum - this.minimum) + this.minimum;\n};\n\n/**\n * calculate current pixel position of thumb based on given value\n *\n * @param value\n * @method valueToPixel\n * @returns Number position of the scroll thumb in pixel\n */\nSlider.prototype.valueToPixel = function(value) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position;\n};\n\n/**\n * set value (between minimum and maximum)\n *\n * @property value\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        if (this._value === value) {\n            return;\n        }\n\n        // move thumb\n        var pos = this.valueToPixel(value);\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.moveThumb(pos, 0);\n        } else {\n            this.moveThumb(0, pos);\n        }\n\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n *\n * @property minimum\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n *\n * @property maximum\n * @type Number\n * @default 100\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends PIXI_UI.InputControl\n * @memberof PIXI_UI\n * @param text editable text shown in input\n * @param displayAsPassword Display TextInput as Password (default false)\n * @theme default theme\n * @constructor\n */\n\nfunction TextInput(text, displayAsPassword, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    this._displayAsPassword = displayAsPassword || false;\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle);\n    this.addChild(this.cursor);\n\n    // selection background\n    this.selectionBg = new PIXI.Graphics();\n    this.addChildAt(this.selectionBg, 0);\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create(InputControl.prototype);\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field.\n * calls onTextChange callback if text changes\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function () {\n        return this._text;\n    },\n    set: function (text) {\n        text += ''; // add '' to assure text is parsed as string\n        if (this._origText === text) {\n            // return if text has not changed\n            return;\n        }\n        this._origText = text;\n        if (this._displayAsPassword) {\n            text = text.replace(/./gi, '*');\n        }\n        this._text = text || '';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.text = text;\n        }\n\n        // update text input if this text field has the focus\n        if (this.hasFocus) {\n            InputWrapper.setText(this.value);\n        }\n\n        // reposition cursor\n        this._cursorNeedsUpdate = true;\n        if (this.change) {\n            this.change(text);\n        }\n    }\n});\n\n/**\n * The maximum number of characters that may be entered. If 0,\n * any number of characters may be entered.\n * (same as maxLength for DOM inputs)\n *\n * @default 0\n * @property maxChars\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'maxChars', {\n    get: function () {\n        return this._maxChars;\n    },\n    set: function (value) {\n        if (this._maxChars === value) {\n            return;\n        }\n        InputWrapper.setMaxLength(value);\n        this._maxChars = value;\n    }\n});\n\nObject.defineProperty(TextInput.prototype, 'value', {\n    get: function() {\n        return this._origText;\n    }\n});\n\n/**\n * set text and type of DOM text input\n *\n * @method onfocus\n */\nTextInput.prototype.onfocus = function() {\n    InputWrapper.setText(this.value);\n    InputWrapper.setMaxLength(this.maxChars);\n    if (this._displayAsPassword) {\n        InputWrapper.setType('password');\n    } else {\n        InputWrapper.setType('text');\n    }\n};\n\n/**\n * set selected text\n *\n * @method updateSelection\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function (start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        this.updateSelectionBg();\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.updateSelectionBg = function() {\n    var start = this.posToCoord(this.selection[0]),\n        end = this.posToCoord(this.selection[1]);\n\n    this.selectionBg.clear();\n    if (start !== end) {\n        this.selectionBg.beginFill(0x0080ff);\n        this.selectionBg.drawRect(0, 0, end - start, this.pixiText.height);\n        this.selectionBg.x = start;\n        this.selectionBg.y = this.pixiText.y;\n    }\n};\n\nTextInput.prototype.onblur = function() {\n    this.updateSelection(0, 0);\n};\n\nTextInput.prototype.onSubmit = function () {\n};\n\nTextInput.prototype.onKeyDown = function (e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function () {\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function () {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function () {\n    if (this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if ((time - this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if (this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function () {\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function (e) {\n    var mouse = this.mousePos(e);\n    if (!this.hasFocus || !this._mouseDown || this.selectionStart < 0) { // || !this.containsPoint(mouse)) {\n        return false;\n    }\n\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this.setCursorPos();\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    this.setCursorPos();\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if (!(this.selectionStart >= 0 && clickPos !== this.selectionStart)) {\n        this.cursorPos = clickPos;\n        this.setCursorPos();\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function () {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text) {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n    this.setCursorPos();\n};","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the PIXI_UI core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n\n    // controls\n    Application:            require('./controls/Application'),\n    Button:                 require('./controls/Button'),\n    InputControl:           require('./controls/InputControl'),\n    LayoutGroup:            require('./controls/LayoutGroup'),\n    PickerList:             require('./controls/PickerList'),\n    Scrollable:             require('./controls/Scrollable'),\n    ScrollArea:             require('./controls/ScrollArea'),\n    ScrollBar:              require('./controls/ScrollBar'),\n    ScrollThumb:            require('./controls/ScrollThumb'),\n    Slider:                 require('./controls/Slider'),\n    TextInput:              require('./controls/TextInput'),\n    ToggleButton:           require('./controls/ToggleButton'),\n\n    // layout\n    HorizontalLayout:     require('./layout/HorizontalLayout'),\n    Layout:               require('./layout/Layout'),\n    LayoutAlignment:      require('./layout/LayoutAlignment'),\n    TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n    TiledLayout:          require('./layout/TiledLayout'),\n    TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n    VerticalLayout:       require('./layout/VerticalLayout'),\n    ViewPortBounds:       require('./layout/ViewPortBounds'),\n\n    // shapes\n    Diamond:           require('./shapes/Diamond'),\n    Ellipse:           require('./shapes/Ellipse'),\n    Line:              require('./shapes/Line'),\n    Rect:              require('./shapes/Rect'),\n    Shape:             require('./shapes/Shape'),\n\n    // skin\n    Theme:           require('./skin/Theme')\n};\n","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n// renderer\n/* istanbul ignore next */\nShape.prototype.renderWebGL = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderWebGL.call(this, renderer);\n};\n\n/* istanbul ignore next */\nShape.prototype.renderCanvas = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderCanvas.call(this, renderer);\n};\n\n// shape drawing\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\n\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    this.textStyle = this.textStyle || {};\n    // default color for label (e.g. buttons)\n    this.textStyle.fill = this.textStyle.fill || '#000';\n    // default font for label (e.g. buttons)\n    this.textStyle.font = this.textStyle.font || '12px Arial';\n\n    if (global === true || global === undefined) {\n        PIXI_UI.theme = this;\n    }\n    this.textureCache = null;\n    // own skin for scroll/slider track\n    // (uses the default button skin otherwise)\n    this.thumbSkin = true;\n\n    // desktop themes have a hover skin if the mouse moves over the button\n    this.hoverSkin = true;\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    this._jsonPath = jsonPath;\n    PIXI_UI.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * executed when loadImage has finished\n *\n * @method loadComplete\n */\nTheme.prototype.loadComplete = function(loader, resources) {\n    this.textureCache = resources.resources[this._jsonPath].textures;\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    var scope = this;\n    return function() {\n        var texture = scope.textureCache[name];\n        if(!texture) {\n            throw new Error('The frameId \"' + name + '\" does not exist ' +\n            'in the texture cache');\n        }\n        return new ScaleContainer(texture, grid);\n\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    var scope = this;\n    return function() {\n        return new PIXI.Sprite(scope.textureCache[name]);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    PIXI_UI.theme = undefined;\n};","/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof PIXI_UI\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if (PIXI_UI.InputControl.currentInput)\n            {\n                PIXI_UI.InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if (PIXI_UI.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (PIXI_UI.InputControl.currentInput.hasFocus)\n                {\n                    PIXI_UI.InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(PIXI_UI.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (PIXI_UI.InputControl.currentInput.hasFocus)\n                {\n                    PIXI_UI.InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n * @private\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String} text\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n\n/**\n * set max. length setting it to 0 will allow unlimited text input\n * @param length\n */\nInputWrapper.setMaxLength = function(length) {\n    if (InputWrapper.hiddenInput) {\n        if (!length || length < 0) {\n            InputWrapper.hiddenInput.removeAttribute('maxlength');\n        } else {\n            InputWrapper.hiddenInput.setAttribute('maxlength', length);\n        }\n    } else {\n        InputWrapper._maxLength = length;\n    }\n};\n\nInputWrapper.setType = function(type) {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.type = type;\n    } else {\n        InputWrapper._type = type;\n    }\n};\n\nInputWrapper.getType = function() {\n    if (InputWrapper.hiddenInput) {\n        return InputWrapper.hiddenInput.type;\n    } else {\n        return InputWrapper._type;\n    }\n};","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof PIXI_UI\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the PIXI_UI util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (PIXI_UI._mouseWheelHandler !== undefined) {\n            return;\n        }\n        PIXI_UI._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n    } else {\n        if (PIXI_UI._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n        PIXI_UI._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.height - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}