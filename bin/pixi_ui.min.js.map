{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","pixi_ui.min.js","src/index.js","src/core/Control.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mouseWheelSupport.js","src/utils/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PIXI_UI","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","utils","loader","PIXI","./core","./utils",2,"Control","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","renderWebGL","renderer","redraw","renderCanvas","mousePos","data","getLocalPosition","defineProperty","get","_enabled","set","value","_width","width","invalidDimensions","_height","height",3,"Skinable","skinCache","undefined","invalidState","controlSetTheme","preloadSkins","changeState","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_currentState","updateDimensions","_skinName","./Control",4,"Application","background","fullscreen","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","onresize","resize","bg","children","child","_fullscreen","removeEventListener","addEventListener","bind","_background","removeChild","Array","Sprite","../Control",5,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","hitArea","math","Rectangle","type","currentState","_pressed","_over","redrawSkinable","createLabel","labelText","text","_label","style","textStyle","Text","updateLabelDimensions","x","Math","floor","y","skinableSetTheme","font","labelFont","color","labelColor","indexOf","label","../Skinable",6,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","posToCoord","substring","_isBitmapFont","prevCharCode","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",7,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","renderAreaWebGL","visible","worldAlpha","renderable","j","_mask","_filters","currentRenderer","flush","filterManager","pushFilter","maskManager","pushMask","start","_renderWebGL","popMask","popFilter","renderAreaCanvas","_renderCanvas","getChildAt","max","../layout/ViewPortBounds",8,"ScrollArea","content","addListener","scrolldelta","bar","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","direction","scrollAuto","scroll","_scrollContent","contentMoved","min","updateBar","thumb","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",9,"ScrollBar","scrollArea","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",10,"ScrollThumb","scrollable","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","local","stopPropagation","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","move","isNaN","maxWidth","maxHeight","./Button",11,"mode","DESKTOP_MODE","_inverse","touchStart","handleDown","touchEnd","MOBILE_MODE","center","target","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","showProgress","./ScrollThumb",12,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","pixelToValue","position","maximum","valueToPixel","sliderData","../../utils/SliderData",13,"TextInput","displayAsPassword","_displayAsPassword","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","cursor","selectionBg","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","_origText","replace","setText","_maxChars","setMaxLength","maxChars","setType","updateSelection","end","setSelection","updateSelectionBg","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","cursorPos","drawCursor","time","Date","now","mouse","selectionStart","curPos","originalEvent","getText","sel","getSelection","./InputControl",14,"ToggleButton","slice","push","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","_selected","selected","state","substr","toggle","buttonHandleEvent",15,"HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/InputControl","./controls/LayoutGroup","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",16,"./LayoutAlignment",17,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",18,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","NaN","explicitSpace","paddingStart","./Layout",19,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",20,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",21,22,23,24,"_drawShape","graphics","moveTo","lineTo","./Shape",25,"drawEllipse",26,"reverse","_reverse",27,"radius","_radius","drawRoundedRect",28,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",29,"_skins","fill","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","add","load","loadComplete","getScaleContainer","grid","fromFrame","getImage","fromImage","removeTheme","../../utils/ScaleContainer",30,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","removeAttribute","setAttribute","_maxLength","_type","getType",31,"texture","rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","w","h","clone","_positionTilable","rightX","bottomY","middleWidth","centerHeight","frameId","TextureCache",32,33,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",34,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",35,"centerVertical","elem","parent","centerHorizontal"],"mappings":"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","file":"pixi_ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"var core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export PIXI_UI globally.\nglobal.PIXI_UI = core;","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {PIXI.Point}\n */\nControl.prototype.mousePos = function(e) {\n    return e.data.getLocalPosition(this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n        this.invalidDimensions = true;\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n        this.invalidDimensions = true;\n    }\n});","var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || PIXI_UI.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.invalidDimensions = true;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeState\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeState = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeState);\n    }\n    if (this._currentSkin &&\n        this.invalidDimensions &&\n        this._width > 0 && this._height > 0) {\n\n        this._currentSkin.width = this._width;\n        this._currentSkin.height = this._height;\n        this.invalidDimensions = false;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(width, height, gradient) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width;\n    bgCanvas.height = height;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0,0,0,height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0,0,width,height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize');\n        } else if (!this._fullscreen && value) {\n            window.addEventListener('resize', this.onresize.bind(this));\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        if (this.bg) {\n            this.removeChild(this.bg);\n            this.bg = null;\n        }\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(256, 256, value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.math.Rectangle(0, 0, this.width, this.height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = this.width;\n            skin.height = this.height;\n        }\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle;\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle);\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.width - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.height - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});","var Skinable = require('../Skinable'),\n    InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || '';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type PIXI_UI.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x,\n        pos = text.length;\n\n    if (x < this.textWidth(text) + totalWidth)\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\nInputControl.prototype.posToCoord = function(pos) {\n    var text = this.pixiText.text,\n        totalWidth = this.pixiText.x;\n\n    if (pos < text.length) {\n        return totalWidth + this.textWidth(text.substring(0, pos));\n    } else {\n        return totalWidth + this.textWidth(text);\n    }\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (PIXI_UI.InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (PIXI_UI.InputControl.currentInput) {\n        PIXI_UI.InputControl.currentInput.blur();\n    }\n\n    // set focus\n    PIXI_UI.InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (PIXI_UI.InputControl.currentInput === this) {\n        PIXI_UI.InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (PIXI_UI.InputControl.currentInput &&\n        !PIXI_UI.InputControl.currentInput._mouseDown) {\n        PIXI_UI.InputControl.currentInput.blur();\n        PIXI_UI.InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n/**\n * only render specific area\n * @method renderAreaWebGL\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaWebGL = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if(this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * only render specific area\n * @method renderAreaWebCanvas\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaCanvas = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for (var i = 0, j = this.children.length; i < j; ++i)\n    {\n        // only render children if they are visible\n        var child = this.children[i];\n        if (this.childIsRenderAble(child, x, y, width, height)) {\n            child._renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});","var Control = require('../Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta, bar) {\n    this.addListener = addListener || true;\n    this.bar = bar || null;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * get 1-dimensional scroll direction\n * dissolve \"auto\" into VERTICAL or HORIZONTAL\n *\n * @method direction\n * @returns {String}\n */\nScrollArea.prototype.direction = function() {\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    return scroll;\n};\n\n/**\n * move content\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scroll = this.direction();\n    var contentMoved = false;\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n            contentMoved = true;\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n            contentMoved = true;\n        }\n    }\n    return contentMoved;\n};\n\n// update ScrollBar progress/thumb position\nScrollArea.prototype.updateBar = function() {\n    if (this.bar && this.bar.thumb && this.content) {\n        var scroll = this.direction();\n        if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n            this.bar.thumb.x = Math.floor(-this.content.x /\n                (this.content.width - this.width) *\n                (this.bar.width - this.bar.thumb.width));\n        }\n        if (scroll === ScrollArea.SCROLL_VERTICAL) {\n            this.bar.thumb.y = Math.floor(-this.content.y /\n            (this.content.height - this.height) *\n            (this.bar.height - this.bar.thumb.height));\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.data.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.data.getLocalPosition(this);\n        if (this._scrollContent(\n                pos.x - this._start[0],\n                pos.y - this._start[1])) {\n            this.updateBar();\n        }\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.math.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderWebGL = function(renderer)\n{\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if (this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderCanvas = function(renderer)\n{\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        if (child.renderAreaCanvas) {\n            child.renderAreaCanvas(renderer, -this.content.x, -this.content.y, this.width, this.height);\n        } else {\n            child.renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\nScrollArea.prototype.redraw = function() {\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    if (scrollArea) {\n        //scrollArea\n        // move thumb when scrollarea moves\n        scrollArea.bar = this;\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    this.skinName = this.skinName || ScrollThumb.SKIN_NAME;\n    this._validStates = [\n        'horizontal_up', 'vertical_up',\n        'horizontal_down', 'vertical_down',\n        'horizontal_hover', 'vertical_hover'];\n    Button.call(this, theme);\n    this.invalidTrack = true;\n    this.width = 20;\n    this.height = 20;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        value = this.scrollable.orientation + '_' + value;\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    var local = mouseData.data.getLocalPosition(this.scrollable);\n    this.scrollable._start = [local.x, local.y];\n    //this.scrollable.handleDown(mouseData);\n    mouseData.stopPropagation();\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mouseup;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\n/**\n * show track icon on thumb\n *\n * @method showTrack\n * @param skin\n */\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\n/**\n * redraw the skin\n *\n * @method redraw\n */\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method move\n */\nScrollThumb.prototype.move = function(x, y) {\n    if (this.scrollable.orientation === PIXI_UI.Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.scrollable.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.x) {\n            this.x = x;\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.scrollable.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.y) {\n            this.y = y;\n            return true;\n        }\n    }\n    return false;\n};","var Skinable = require('../Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n\n    this.touchStart = this.mousedown = this.handleDown;\n    this.touchEnd = this.mouseup = this.mouseupoutside = this.handleUp;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * move scroll thumb clicking somewhere on the scroll bar (outside the thumb)\n *\n * @method handleDown\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this);\n    var center = {\n        x: local.x - this.thumb.width / 2,\n        y: local.y - this.thumb.height / 2\n    };\n    if (mouseData.target === this &&\n        this.moveThumb(center.x, center.y)) {\n        this._start = [local.x, local.y];\n        // do not override localX/localY in start\n        // if we do not move the thumb\n        this.thumbMoved(local.x, local.y);\n    }\n};\n\n/**\n * handle mouse up/touch end\n *\n * @method handleUp\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n *\n * @method handleMove\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.data.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n *\n * @method handleWheel\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n *\n * @method thumbMoved\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n *\n * @method _updateProgressSkin\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n *\n * @method maxWidth\n * @returns {Number}\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n *\n * @method maxHeight\n * @returns {Number}\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method moveThumb\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if (this.thumb.move(x, y)) {\n        this._updateProgressSkin();\n        return true;\n    }\n    return false;\n};\n\n/**\n * show scroll track\n *\n * @method showTrack\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @method showProgress\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * redraw track and progressbar\n *\n * @method redraw\n */\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10; //TODO: implement me!\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n *\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var pos = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        pos = x;\n    } else {\n        pos = y;\n    }\n    this.value = this.pixelToValue(pos);\n};\n\n/**\n * calculate value of slider based on current pixel position of thumb\n *\n * @param position\n * @method pixelToValue\n * @returns Number value between minimum and maximum\n */\nSlider.prototype.pixelToValue = function(position) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position / max * (this.maximum - this.minimum) + this.minimum;\n};\n\n/**\n * calculate current pixel position of thumb based on given value\n *\n * @param value\n * @method valueToPixel\n * @returns Number position of the scroll thumb in pixel\n */\nSlider.prototype.valueToPixel = function(value) {\n    var max = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position;\n};\n\n/**\n * set value (between minimum and maximum)\n *\n * @property value\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        if (this._value === value) {\n            return;\n        }\n\n        // move thumb\n        var pos = this.valueToPixel(value);\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.moveThumb(pos, 0);\n        } else {\n            this.moveThumb(0, pos);\n        }\n\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n *\n * @property minimum\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n *\n * @property maximum\n * @type Number\n * @default 100\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends PIXI_UI.InputControl\n * @memberof PIXI_UI\n * @param text editable text shown in input\n * @param displayAsPassword Display TextInput as Password (default false)\n * @theme default theme\n * @constructor\n */\n\nfunction TextInput(text, displayAsPassword, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    this._displayAsPassword = displayAsPassword || false;\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle);\n    this.addChild(this.cursor);\n\n    // selection background\n    this.selectionBg = new PIXI.Graphics();\n    this.addChildAt(this.selectionBg, 0);\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create(InputControl.prototype);\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field.\n * calls onTextChange callback if text changes\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function () {\n        return this._text;\n    },\n    set: function (text) {\n        text += ''; // add '' to assure text is parsed as string\n        if (this._origText === text) {\n            // return if text has not changed\n            return;\n        }\n        this._origText = text;\n        if (this._displayAsPassword) {\n            text = text.replace(/./gi, '*');\n        }\n        this._text = text || '';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.text = text;\n        }\n\n        // update text input if this text field has the focus\n        if (this.hasFocus) {\n            InputWrapper.setText(this.value);\n        }\n\n        // reposition cursor\n        this._cursorNeedsUpdate = true;\n        if (this.change) {\n            this.change(text);\n        }\n    }\n});\n\n/**\n * The maximum number of characters that may be entered. If 0,\n * any number of characters may be entered.\n * (same as maxLength for DOM inputs)\n *\n * @default 0\n * @property maxChars\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'maxChars', {\n    get: function () {\n        return this._maxChars;\n    },\n    set: function (value) {\n        if (this._maxChars === value) {\n            return;\n        }\n        InputWrapper.setMaxLength(value);\n        this._maxChars = value;\n    }\n});\n\nObject.defineProperty(TextInput.prototype, 'value', {\n    get: function() {\n        return this._origText;\n    }\n});\n\n/**\n * set text and type of DOM text input\n *\n * @method onfocus\n */\nTextInput.prototype.onfocus = function() {\n    InputWrapper.setText(this.value);\n    InputWrapper.setMaxLength(this.maxChars);\n    if (this._displayAsPassword) {\n        InputWrapper.setType('password');\n    } else {\n        InputWrapper.setType('text');\n    }\n};\n\n/**\n * set selected text\n *\n * @method updateSelection\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function (start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        this.updateSelectionBg();\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.updateSelectionBg = function() {\n    var start = this.posToCoord(this.selection[0]),\n        end = this.posToCoord(this.selection[1]);\n\n    this.selectionBg.clear();\n    if (start !== end) {\n        this.selectionBg.beginFill(0x0080ff);\n        this.selectionBg.drawRect(0, 0, end - start, this.pixiText.height);\n        this.selectionBg.x = start;\n        this.selectionBg.y = this.pixiText.y;\n    }\n};\n\nTextInput.prototype.onblur = function() {\n    this.updateSelection(0, 0);\n};\n\nTextInput.prototype.onSubmit = function () {\n};\n\nTextInput.prototype.onKeyDown = function (e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function () {\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function () {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function () {\n    if (this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if ((time - this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if (this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function () {\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function (e) {\n    var mouse = this.mousePos(e);\n    if (!this.hasFocus || !this._mouseDown || this.selectionStart < 0) { // || !this.containsPoint(mouse)) {\n        return false;\n    }\n\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this.setCursorPos();\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    this.setCursorPos();\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function (e) {\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if (!(this.selectionStart >= 0 && clickPos !== this.selectionStart)) {\n        this.cursorPos = clickPos;\n        this.setCursorPos();\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function () {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text) {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n    this.setCursorPos();\n};","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the PIXI_UI core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n\n    // controls\n    Application:            require('./controls/Application'),\n    Button:                 require('./controls/Button'),\n    InputControl:           require('./controls/InputControl'),\n    LayoutGroup:            require('./controls/LayoutGroup'),\n    Scrollable:             require('./controls/Scrollable'),\n    ScrollArea:             require('./controls/ScrollArea'),\n    ScrollBar:              require('./controls/ScrollBar'),\n    ScrollThumb:            require('./controls/ScrollThumb'),\n    Slider:                 require('./controls/Slider'),\n    TextInput:              require('./controls/TextInput'),\n    ToggleButton:           require('./controls/ToggleButton'),\n\n    // layout\n    HorizontalLayout:     require('./layout/HorizontalLayout'),\n    Layout:               require('./layout/Layout'),\n    LayoutAlignment:      require('./layout/LayoutAlignment'),\n    TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n    TiledLayout:          require('./layout/TiledLayout'),\n    TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n    VerticalLayout:       require('./layout/VerticalLayout'),\n    ViewPortBounds:       require('./layout/ViewPortBounds'),\n\n    // shapes\n    Diamond:           require('./shapes/Diamond'),\n    Ellipse:           require('./shapes/Ellipse'),\n    Line:              require('./shapes/Line'),\n    Rect:              require('./shapes/Rect'),\n    Shape:             require('./shapes/Shape'),\n\n    // skin\n    Theme:           require('./skin/Theme')\n};\n","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n// renderer\n/* istanbul ignore next */\nShape.prototype.renderWebGL = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderWebGL.call(this, renderer);\n};\n\n/* istanbul ignore next */\nShape.prototype.renderCanvas = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderCanvas.call(this, renderer);\n};\n\n// shape drawing\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\n\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    this.textStyle = this.textStyle || {};\n    // default color for label (e.g. buttons)\n    this.textStyle.fill = this.textStyle.fill || '#000';\n    // default font for label (e.g. buttons)\n    this.textStyle.font = this.textStyle.font || '12px Arial';\n\n    if (global === true || global === undefined) {\n        PIXI_UI.theme = this;\n    }\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    PIXI_UI.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    return function() {\n        return ScaleContainer.fromFrame(name, grid);\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    return function() {\n        return PIXI.Sprite.fromImage(name);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    PIXI_UI.theme = undefined;\n};","/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof PIXI_UI\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if (PIXI_UI.InputControl.currentInput)\n            {\n                PIXI_UI.InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if (PIXI_UI.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (PIXI_UI.InputControl.currentInput.hasFocus)\n                {\n                    PIXI_UI.InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(PIXI_UI.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (PIXI_UI.InputControl.currentInput.hasFocus)\n                {\n                    PIXI_UI.InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n * @private\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String} text\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n\n/**\n * set max. length setting it to 0 will allow unlimited text input\n * @param length\n */\nInputWrapper.setMaxLength = function(length) {\n    if (InputWrapper.hiddenInput) {\n        if (!length || length < 0) {\n            InputWrapper.hiddenInput.removeAttribute('maxlength');\n        } else {\n            InputWrapper.hiddenInput.setAttribute('maxlength', length);\n        }\n    } else {\n        InputWrapper._maxLength = length;\n    }\n};\n\nInputWrapper.setType = function(type) {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.type = type;\n    } else {\n        InputWrapper._type = type;\n    }\n};\n\nInputWrapper.getType = function() {\n    if (InputWrapper.hiddenInput) {\n        return InputWrapper.hiddenInput.type;\n    } else {\n        return InputWrapper._type;\n    }\n};","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.math.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof PIXI_UI\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the PIXI_UI util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (PIXI_UI._mouseWheelHandler !== undefined) {\n            return;\n        }\n        PIXI_UI._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n    } else {\n        if (PIXI_UI._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n        PIXI_UI._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.y - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}