{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","pixi_ui.min.js","src/index.js","src/controls/Application.js","src/controls/Button.js","src/controls/InputControl.js","src/controls/LayoutGroup.js","src/controls/ScrollArea.js","src/controls/ScrollBar.js","src/controls/ScrollThumb.js","src/controls/Scrollable.js","src/controls/Slider.js","src/controls/TextInput.js","src/controls/ToggleButton.js","src/controls/index.js","src/core/Control.js","src/core/Skinable.js","src/core/index.js","src/layout/HorizontalLayout.js","src/layout/Layout.js","src/layout/LayoutAlignment.js","src/layout/TiledColumnsLayout.js","src/layout/TiledLayout.js","src/layout/TiledRowsLayout.js","src/layout/VerticalLayout.js","src/layout/ViewPortBounds.js","src/layout/index.js","src/shapes/Diamond.js","src/shapes/Ellipse.js","src/shapes/Line.js","src/shapes/Rect.js","src/shapes/Shape.js","src/shapes/index.js","src/skin/Theme.js","src/skin/index.js","src/util/InputWrapper.js","src/util/ScaleContainer.js","src/util/SliderData.js","src/util/index.js","src/util/mouseWheelSupport.js","src/util/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PIXI_UI","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","controls","layout","shapes","skin","util","loader","PIXI","./controls","./core","./layout","./shapes","./skin","./util",2,"Application","background","fullscreen","renderer","stage","Container","width","height","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","_width","_height","Control","addChild","animate","prototype","Object","create","constructor","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","onresize","resize","bg","children","child","defineProperty","get","_fullscreen","set","value","removeEventListener","addEventListener","bind","_background","removeChild","Array","Sprite","addChildAt","setBackgroundColor","../core/Control",3,"Button","theme","skinName","SKIN_NAME","_validStates","stateNames","Skinable","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","preloadSkins","name","getSkin","skinCache","alpha","mousemove","mouseover","updateDimensions","hitArea","math","Rectangle","type","_enabled","currentState","_pressed","_over","redrawSkinable","redraw","createLabel","labelText","text","_label","style","textStyle","Text","updateLabelDimensions","x","Math","floor","y","skinableSetTheme","setTheme","font","labelFont","color","labelColor","_currentState","indexOf","invalidState","label","../core/Skinable",4,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","_isBitmapFont","prevCharCode","data","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../util/InputWrapper",5,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","_renderAreaWebGL","renderSession","visible","_cacheAsBitmap","_renderCachedSprite","j","_mask","_filters","spriteBatch","flush","filterManager","pushFilter","_filterBlock","stop","maskManager","pushMask","mask","start","_renderWebGL","popMask","popFilter","_renderAreaCanvas","_renderCanvas","getChildAt","max","../layout/ViewPortBounds",6,"ScrollArea","content","addListener","scrolldelta","undefined","enabled","_useMask","scrolldirection","SCROLL_AUTO","interactive","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","_scrollContent","scrollAuto","scroll","min","mouseData","getLocalPosition","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",7,"ScrollBar","scrollArea","thumb","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",8,"ScrollThumb","scrollable","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","handleDown","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","fromSkin","./Button",9,"mode","DESKTOP_MODE","_inverse","MOBILE_MODE","local","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","maxWidth","maxHeight","isNaN","showProgress","./ScrollThumb",10,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","maximum","sliderData","target","../util/SliderData",11,"TextInput","cursor","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","setText","updateSelection","end","setSelection","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","substring","cursorPos","drawCursor","time","Date","now","selectionStart","interactionManager","hitTest","mouse","mousePos","curPos","originalEvent","getText","sel","getSelection","./InputControl",12,"ToggleButton","slice","push","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","_selected","selected","state","substr","toggle","buttonHandleEvent",13,"Slicer","./Application","./LayoutGroup","./ScrollArea","./ScrollBar","./Slider","./TextInput","./ToggleButton",14,"invalidSkin","invalidDimensions",15,"controlSetTheme","changeState","_currentSkin","_lastSkin","callback","_skinName","./Control",16,"./Skinable",17,"HorizontalLayout","./LayoutAlignment",18,"Layout","gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",19,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","NaN","explicitSpace","paddingStart","position","./Layout",20,"TiledColumnsLayout","TiledLayout","_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",21,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",22,"TiledRowsLayout",23,"VerticalLayout",24,25,"./HorizontalLayout","./TiledColumnsLayout","./TiledRowsLayout","./VerticalLayout","./ViewPortBounds",26,"Diamond","Shape","_drawShape","graphics","moveTo","lineTo","./Shape",27,"Ellipse","drawEllipse",28,"Line","reverse","_reverse",29,"Rect","radius","_radius","drawRoundedRect",30,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",31,"./Diamond","./Ellipse","./Line","./Rect",32,"Theme","_skins","fill","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","add","load","loadComplete","getScaleContainer","grid","fromFrame","getImage","fromImage","removeTheme","../util/ScaleContainer",33,"./Theme",34,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","replace","../controls/InputControl",35,"texture","rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","w","h","clone","_positionTilable","rightX","bottomY","middleWidth","centerHeight","frameId","utils","TextureCache",36,37,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",38,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",39,"centerVertical","elem","parent","centerHorizontal","center"],"mappings":"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","file":"pixi_ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"var core = module.exports = require('./core');\n\n// add core plugins.\ncore.controls       = require('./controls');\ncore.layout         = require('./layout');\ncore.shapes         = require('./shapes');\ncore.skin           = require('./skin');\ncore.util           = require('./util');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export PIXI_UI globally.\nglobal.PIXI_UI = core;","var Control = require('../core/Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(width, height, gradient) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width;\n    bgCanvas.height = height;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0,0,0,height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0,0,width,height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize');\n        } else if (!this._fullscreen && value) {\n            window.addEventListener('resize', this.onresize.bind(this));\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        if (this.bg) {\n            this.removeChild(this.bg);\n            this.bg = null;\n        }\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(256, 256, value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._stage.setBackgroundColor(value);\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../core/Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.math.Rectangle(0, 0, this.width, this.height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = this.width;\n            skin.height = this.height;\n        }\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle;\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle);\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.width - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.height - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});","var Skinable = require('../core/Skinable'),\n    InputWrapper = require('../util/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || ' ';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type PIXI_UI.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText,\n        totalWidth = 0,\n        pos = text.length;\n\n    if (x < this.textWidth(text))\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (InputControl.currentInput) {\n        InputControl.currentInput.blur();\n    }\n\n    // set focus\n    InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (InputControl.currentInput === this) {\n        InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (InputControl.currentInput &&\n        !InputControl.currentInput._mouseDown) {\n        InputControl.currentInput.blur();\n        InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../core/Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n/**\n * only render specific area\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype._renderAreaWebGL = function(renderSession, x, y, width, height) {\n    this.redraw();\n\n    if(!this.visible || this.alpha <= 0) {\n        return;\n    }\n\n    if(this._cacheAsBitmap)\n    {\n        this._renderCachedSprite(renderSession);\n        return;\n    }\n\n    var i, j,child;\n\n    if(this._mask || this._filters)\n    {\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if(this._filters)\n        {\n            renderSession.spriteBatch.flush();\n            renderSession.filterManager.pushFilter(this._filterBlock);\n        }\n\n        if(this._mask)\n        {\n            renderSession.spriteBatch.stop();\n            renderSession.maskManager.pushMask(this.mask, renderSession);\n            renderSession.spriteBatch.start();\n        }\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child._renderWebGL(renderSession);\n            }\n        }\n\n        renderSession.spriteBatch.stop();\n\n        if (this._mask) {\n            renderSession.maskManager.popMask(this._mask, renderSession);\n        }\n        if (this._filters) {\n            renderSession.filterManager.popFilter();\n        }\n\n        renderSession.spriteBatch.start();\n    }\n    else\n    {\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child._renderWebGL(renderSession);\n            }\n        }\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype._renderAreaCanvas = function(renderSession, x, y, width, height) {\n    this.redraw();\n    if(this.visible === false || this.alpha === 0) {\n        return;\n    }\n\n    if(this._cacheAsBitmap)\n    {\n\n        this._renderCachedSprite(renderSession);\n        return;\n    }\n\n    if(this._mask)\n    {\n        renderSession.maskManager.pushMask(this._mask, renderSession);\n    }\n\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        if (this.childIsRenderAble(child, x, y, width, height)) {\n            child._renderCanvas(renderSession);\n        }\n    }\n\n    if(this._mask)\n    {\n        renderSession.maskManager.popMask(renderSession);\n    }\n};\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});","var Control = require('../core/Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta) {\n    this.addListener = addListener || true;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * set content (will determine scrll direction automatically if it is a\n * PIXI_UI.ScrollArea, will assume vertical scrolling as default)\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.getLocalPosition(this);\n        this._scrollContent(\n            pos.x - this._start[0],\n            pos.y - this._start[1]\n        );\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.math.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method _renderWebGL\n * @param renderSession {RenderSession}\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype._renderWebGL = function(renderSession)\n{\n    if(!this.visible || this.alpha <= 0) {\n        return;\n    }\n\n    if(this._cacheAsBitmap)\n    {\n        this._renderCachedSprite(renderSession);\n        return;\n    }\n\n    this.redraw();\n\n    var i, j, child;\n\n    if(this._mask || this._filters)\n    {\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if(this._filters)\n        {\n            renderSession.spriteBatch.flush();\n            renderSession.filterManager.pushFilter(this._filterBlock);\n        }\n\n        if(this._mask)\n        {\n            renderSession.spriteBatch.stop();\n            renderSession.maskManager.pushMask(this.mask, renderSession);\n            renderSession.spriteBatch.start();\n        }\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child._renderAreaWebGL) {\n                child._renderAreaWebGL(renderSession, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child._renderWebGL(renderSession);\n            }\n        }\n\n        renderSession.spriteBatch.stop();\n\n        if (this._mask) {\n            renderSession.maskManager.popMask(this._mask, renderSession);\n        }\n        if (this._filters) {\n            renderSession.filterManager.popFilter();\n        }\n\n        renderSession.spriteBatch.start();\n    }\n    else\n    {\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child._renderAreaWebGL) {\n                child._renderAreaWebGL(renderSession, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child._renderWebGL(renderSession);\n            }\n        }\n    }\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method _renderCanvas\n * @param renderSession {RenderSession}\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype._renderCanvas = function(renderSession)\n{\n    if(this.visible === false || this.alpha === 0) {\n        return;\n    }\n\n    if(this._cacheAsBitmap)\n    {\n\n        this._renderCachedSprite(renderSession);\n        return;\n    }\n\n    this.redraw();\n\n    if(this._mask)\n    {\n        renderSession.maskManager.pushMask(this._mask, renderSession);\n    }\n\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        if (child._renderAreaCanvas) {\n            child._renderAreaCanvas(renderSession, -this.content.x, -this.content.y, this.width, this.height);\n        } else {\n            child._renderCanvas(renderSession);\n        }\n    }\n\n    if(this._mask)\n    {\n        renderSession.maskManager.popMask(renderSession);\n    }\n};\n\nScrollArea.prototype.redraw = function() {\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar\n *\n * @class ScrollArea\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    this.skinName = this.skinName || ScrollThumb.SKIN_NAME;\n    this._validStates = ['horizontal_up', 'vertical_up', 'horizontal_down', 'vertical_down', 'horizontal_hover', 'vertical_hover'];\n    Button.call(this, theme);\n    this.invalidTrack = true;\n    this.width = 20;\n    this.height = 20;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        value = this.scrollable.orientation + '_' + value;\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    this.scrollable.handleDown(mouseData);\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mousemove;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n","var Skinable = require('../core/Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\nScrollable.DESKTOP_MODE = 'desktop';\nScrollable.MOBILE_MODE = 'mobile';\n\nScrollable.HORIZONTAL = 'horizontal';\nScrollable.VERTICAL = 'vertical';\n\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.getLocalPosition(this);\n    this._start = [local.x, local.y];\n};\n\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n * @param mouseData\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.thumb.x) {\n            this.thumb.x = x;\n            this._updateProgressSkin();\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.thumb.y) {\n            this.thumb.y = y;\n            this._updateProgressSkin();\n            return true;\n        }\n    }\n    return false;\n};\n\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../util/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10;\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var max = 1, value = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n        if (this._inverse) {\n            value = max - x;\n        } else {\n            value = x;\n        }\n    } else {\n        max = this.maxHeight();\n        if (this._inverse) {\n            value = max - y;\n        } else {\n            value = y;\n        }\n    }\n    value = value / max * (this.maximum - this.minimum) + this.minimum;\n    this.value = value;\n};\n\n/**\n * value changed\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../core/Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../util/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends PIXI_UI.InputControl\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction TextInput(text, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle );\n    this.addChild(this.cursor);\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create( InputControl.prototype );\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function() {\n        return this._text;\n    },\n    set: function(text) {\n        this._text = text || ' ';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.setText(text);\n        }\n    }\n});\n\n/**\n * set selected text\n *\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function(start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.onSubmit = function() {\n};\n\nTextInput.prototype.onKeyDown = function(e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey))\n    {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function() {\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function() {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function() {\n    if(this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if((time-this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if(this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function()\n{\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function(e) {\n\n    if(!this.hasFocus || !this._mouseDown || this.selectionStart < 0 ||\n            !this.stage.interactionManager.hitTest(this, e)) {\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function(e) {\n    if(e.originalEvent.which === 2 || e.originalEvent.which === 3)\n    {\n        e.originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function(e) {\n\n    if(e.originalEvent.which === 2 || e.originalEvent.which === 3)\n    {\n        e.originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if(!(this.selectionStart >= 0 && clickPos !== this.selectionStart))\n    {\n        this.cursorPos = clickPos;\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function() {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text)\n    {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n};\n","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the PIXI_UI controls library\n * @author      Andreas Bresser <andreasbresser@gmail.com>, Björn Friedrichs\n * @copyright   2015 Andreas Bresser, Björn Friedrichs\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.controls\n */\nmodule.exports = {\n    Application:            require('./Application'),\n    Button:                 require('./Button'),\n    InputControl:           require('./InputControl'),\n    LayoutGroup:            require('./LayoutGroup'),\n    Scrollable:             require('./Scrollable'),\n    ScrollArea:             require('./ScrollArea'),\n    ScrollBar:              require('./ScrollBar'),\n    ScrollThumb:            require('./ScrollThumb'),\n    Slicer:                 require('./Slider'),\n    TextInput:              require('./TextInput'),\n    ToggleButton:           require('./ToggleButton')\n};","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method _renderWebGL\n * @param renderSession {RenderSession}\n * @private\n */\n/* istanbul ignore next */\nControl.prototype._renderWebGL = function(renderSession) {\n    this.redraw();\n    return PIXI.Container.prototype._renderWebGL.call(this, renderSession);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method _renderWebGL\n * @param renderSession {RenderSession}\n * @private\n */\n/* istanbul ignore next */\nControl.prototype._renderCanvas = function(renderSession) {\n    this.redraw();\n    return PIXI.Container.prototype._renderCanvas.call(this, renderSession);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {x: Number, y: Number}\n */\nControl.prototype.mousePos = function(e) {\n    return e.getLocalPosition(e.target || this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n        this.invalidDimensions = true;\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n        this.invalidDimensions = true;\n    }\n});","var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || PIXI_UI.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.invalidDimensions = true;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeState\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeState = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeState);\n    }\n    if (this._currentSkin &&\n        this.invalidDimensions &&\n        this._width > 0 && this._height > 0) {\n\n        this._currentSkin.width = this._width;\n        this._currentSkin.height = this._height;\n        this.invalidDimensions = false;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});","/**\n * @file        Main export of the PIXI_UI core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable')\n};","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","/**\n * @file        Main export of the PIXI_UI layout library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.layout\n */\nmodule.exports = {\n    HorizontalLayout:     require('./HorizontalLayout'),\n    Layout:               require('./Layout'),\n    LayoutAlignment:      require('./LayoutAlignment'),\n    TiledColumnsLayout:   require('./TiledColumnsLayout'),\n    TiledLayout:          require('./TiledLayout'),\n    TiledRowsLayout:      require('./TiledRowsLayout'),\n    VerticalLayout:       require('./VerticalLayout'),\n    ViewPortBounds:       require('./ViewPortBounds')\n};","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n// renderer\n/* istanbul ignore next */\nShape.prototype._renderWebGL = function(renderSession) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype._renderWebGL.call(this, renderSession);\n};\n\n/* istanbul ignore next */\nShape.prototype._renderCanvas = function(renderSession) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype._renderCanvas.call(this, renderSession);\n};\n\n// shape drawing\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n};\n","/**\n * @file        Main export of the PIXI_UI shapes library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.shapes\n */\nmodule.exports = {\n    Diamond:           require('./Diamond'),\n    Ellipse:           require('./Ellipse'),\n    Line:              require('./Line'),\n    Rect:              require('./Rect'),\n    Shape:             require('./Shape')\n};","var ScaleContainer = require('../util/ScaleContainer');\n\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    this.textStyle = this.textStyle || {};\n    // default color for label (e.g. buttons)\n    this.textStyle.fill = this.textStyle.fill || '#000';\n    // default font for label (e.g. buttons)\n    this.textStyle.font = this.textStyle.font || '12px Arial';\n\n    if (global === true || global === undefined) {\n        PIXI_UI.theme = this;\n    }\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    PIXI_UI.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    return function() {\n        return ScaleContainer.fromFrame(name, grid);\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    return function() {\n        return PIXI.Sprite.fromImage(name);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    PIXI_UI.theme = undefined;\n};","/**\n * @file        Main export of the PIXI_UI theme library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.theme\n */\nmodule.exports = {\n    Theme:           require('./Theme')\n};","var InputControl = require('../controls/InputControl');\n\n/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof PIXI_UI\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if(InputControl.currentInput)\n            {\n                InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if(InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (InputControl.currentInput.hasFocus)\n                {\n                    InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (InputControl.currentInput.hasFocus)\n                {\n                    InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n * @returns {DOMObject}\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n * @returns {DOMObject}\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String}\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.math.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method _renderWebGL\n * @param renderSession {RenderSession}\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype._renderWebGL = function(renderSession) {\n    this.redraw();\n    return PIXI.Container.prototype._renderWebGL.call(this, renderSession);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method _renderWebGL\n * @param renderSession {RenderSession}\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype._renderCanvas = function(renderSession) {\n    this.redraw();\n    return PIXI.Container.prototype._renderCanvas.call(this, renderSession);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof PIXI_UI\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the PIXI_UI util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (PIXI_UI._mouseWheelHandler !== undefined) {\n            return;\n        }\n        PIXI_UI._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n    } else {\n        if (PIXI_UI._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n        PIXI_UI._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.y - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}