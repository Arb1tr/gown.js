{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","pixi_ui.min.js","src/index.js","src/core/Control.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mouseWheelSupport.js","src/utils/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PIXI_UI","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","utils","loader","PIXI","./core","./utils",2,"Control","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","renderWebGL","renderer","redraw","renderCanvas","mousePos","data","getLocalPosition","target","defineProperty","get","_enabled","set","value","_width","width","invalidDimensions","_height","height",3,"Skinable","skinCache","undefined","invalidState","controlSetTheme","preloadSkins","changeState","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_currentState","updateDimensions","_skinName","./Control",4,"Application","background","fullscreen","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","onresize","resize","bg","children","child","_fullscreen","removeEventListener","addEventListener","bind","_background","removeChild","Array","Sprite","../Control",5,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","hitArea","math","Rectangle","type","currentState","_pressed","_over","redrawSkinable","createLabel","labelText","text","_label","style","textStyle","Text","updateLabelDimensions","x","Math","floor","y","skinableSetTheme","font","labelFont","color","labelColor","indexOf","label","../Skinable",6,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","_isBitmapFont","prevCharCode","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",7,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","renderAreaWebGL","visible","worldAlpha","renderable","j","_mask","_filters","currentRenderer","flush","filterManager","pushFilter","maskManager","pushMask","start","_renderWebGL","popMask","popFilter","renderAreaCanvas","_renderCanvas","getChildAt","max","../layout/ViewPortBounds",8,"ScrollArea","content","addListener","scrolldelta","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","_scrollContent","scrollAuto","scroll","min","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",9,"ScrollBar","scrollArea","thumb","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",10,"ScrollThumb","scrollable","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","local","stopPropagation","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","./Button",11,"mode","DESKTOP_MODE","_inverse","touchStart","handleDown","touchEnd","MOBILE_MODE","center","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","maxWidth","maxHeight","isNaN","showProgress","./ScrollThumb",12,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","maximum","sliderData","../../utils/SliderData",13,"TextInput","cursor","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","setText","updateSelection","end","setSelection","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","substring","cursorPos","drawCursor","time","Date","now","mouse","selectionStart","containsPoint","curPos","originalEvent","getText","sel","getSelection","./InputControl",14,"ToggleButton","slice","push","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","_selected","selected","state","substr","toggle","buttonHandleEvent",15,"Slicer","HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/InputControl","./controls/LayoutGroup","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",16,"./LayoutAlignment",17,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",18,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","NaN","explicitSpace","paddingStart","position","./Layout",19,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",20,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",21,22,23,24,"_drawShape","graphics","moveTo","lineTo","./Shape",25,"drawEllipse",26,"reverse","_reverse",27,"radius","_radius","drawRoundedRect",28,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",29,"_skins","fill","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","add","load","loadComplete","getScaleContainer","grid","fromFrame","getImage","fromImage","removeTheme","../../utils/ScaleContainer",30,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","replace",31,"texture","rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","w","h","clone","_positionTilable","rightX","bottomY","middleWidth","centerHeight","frameId","TextureCache",32,33,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",34,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",35,"centerVertical","elem","parent","centerHorizontal"],"mappings":"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","file":"pixi_ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"var core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export PIXI_UI globally.\nglobal.PIXI_UI = core;","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {x: Number, y: Number}\n */\nControl.prototype.mousePos = function(e) {\n    return e.data.getLocalPosition(e.target || this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n        this.invalidDimensions = true;\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n        this.invalidDimensions = true;\n    }\n});","var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || PIXI_UI.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.invalidDimensions = true;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeState\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeState = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeState);\n    }\n    if (this._currentSkin &&\n        this.invalidDimensions &&\n        this._width > 0 && this._height > 0) {\n\n        this._currentSkin.width = this._width;\n        this._currentSkin.height = this._height;\n        this.invalidDimensions = false;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(width, height, gradient) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width;\n    bgCanvas.height = height;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0,0,0,height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0,0,width,height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize');\n        } else if (!this._fullscreen && value) {\n            window.addEventListener('resize', this.onresize.bind(this));\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        if (this.bg) {\n            this.removeChild(this.bg);\n            this.bg = null;\n        }\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(256, 256, value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.math.Rectangle(0, 0, this.width, this.height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = this.width;\n            skin.height = this.height;\n        }\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle;\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle);\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.width - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.height - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});","var Skinable = require('../Skinable'),\n    InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || ' ';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type PIXI_UI.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText,\n        totalWidth = 0,\n        pos = text.length;\n\n    if (x < this.textWidth(text))\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (InputControl.currentInput) {\n        InputControl.currentInput.blur();\n    }\n\n    // set focus\n    InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (InputControl.currentInput === this) {\n        InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (InputControl.currentInput &&\n        !InputControl.currentInput._mouseDown) {\n        InputControl.currentInput.blur();\n        InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n/**\n * only render specific area\n * @method renderAreaWebGL\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaWebGL = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if(this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * only render specific area\n * @method renderAreaWebCanvas\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaCanvas = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for (var i = 0, j = this.children.length; i < j; ++i)\n    {\n        // only render children if they are visible\n        var child = this.children[i];\n        if (this.childIsRenderAble(child, x, y, width, height)) {\n            child._renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});","var Control = require('../Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta) {\n    this.addListener = addListener || true;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * set content (will determine scrll direction automatically if it is a\n * PIXI_UI.ScrollArea, will assume vertical scrolling as default)\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.data.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.data.getLocalPosition(this);\n        this._scrollContent(\n            pos.x - this._start[0],\n            pos.y - this._start[1]\n        );\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.math.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderWebGL = function(renderer)\n{\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if (this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderCanvas = function(renderer)\n{\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        if (child.renderAreaCanvas) {\n            child.renderAreaCanvas(renderer, -this.content.x, -this.content.y, this.width, this.height);\n        } else {\n            child.renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\nScrollArea.prototype.redraw = function() {\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    this.skinName = this.skinName || ScrollThumb.SKIN_NAME;\n    this._validStates = [\n        'horizontal_up', 'vertical_up',\n        'horizontal_down', 'vertical_down',\n        'horizontal_hover', 'vertical_hover'];\n    Button.call(this, theme);\n    this.invalidTrack = true;\n    this.width = 20;\n    this.height = 20;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        value = this.scrollable.orientation + '_' + value;\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    var local = mouseData.data.getLocalPosition(this.scrollable);\n    this.scrollable._start = [local.x, local.y];\n    //this.scrollable.handleDown(mouseData);\n    mouseData.stopPropagation();\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mouseup;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n","var Skinable = require('../Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n\n    this.touchStart = this.mousedown = this.handleDown;\n    this.touchEnd = this.mouseup = this.mouseupoutside = this.handleUp;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this);\n    var center = {\n        x: local.x - this.thumb.width / 2,\n        y: local.y - this.thumb.height / 2\n    };\n    if (mouseData.target === this &&\n        this.moveThumb(center.x, center.y)) {\n        this._start = [local.x, local.y];\n        // do not override localX/localY in start\n        // if we do not move the thumb\n        this.thumbMoved(local.x, local.y);\n    }\n};\n\n/**\n * handle mouse up/touch end\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.data.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.thumb.x) {\n            this.thumb.x = x;\n            this._updateProgressSkin();\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.thumb.y) {\n            this.thumb.y = y;\n            this._updateProgressSkin();\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\n * show scroll track\n *\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * redraw track and progressbar\n */\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10;\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var max = 1, value = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n        if (this._inverse) {\n            value = max - x;\n        } else {\n            value = x;\n        }\n    } else {\n        max = this.maxHeight();\n        if (this._inverse) {\n            value = max - y;\n        } else {\n            value = y;\n        }\n    }\n    value = value / max * (this.maximum - this.minimum) + this.minimum;\n    this.value = value;\n};\n\n/**\n * value changed\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends PIXI_UI.InputControl\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction TextInput(text, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle );\n    this.addChild(this.cursor);\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create( InputControl.prototype );\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function() {\n        return this._text;\n    },\n    set: function(text) {\n        this._text = text || ' ';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.setText(text);\n        }\n    }\n});\n\n/**\n * set selected text\n *\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function(start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.onSubmit = function() {\n};\n\nTextInput.prototype.onKeyDown = function(e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey))\n    {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function() {\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function() {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function() {\n    if(this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if((time-this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if(this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function()\n{\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function(e) {\n    var mouse = this.mousePos(e);\n    if(!this.hasFocus || !this._mouseDown || this.selectionStart < 0 ||\n            !this.containsPoint(mouse)) {\n        return false;\n    }\n\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function(e) {\n    var originalEvent = e.data.originalEvent;\n    if(originalEvent.which === 2 || originalEvent.which === 3)\n    {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function(e) {\n    var originalEvent = e.data.originalEvent;\n    if(originalEvent.which === 2 || originalEvent.which === 3)\n    {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if(!(this.selectionStart >= 0 && clickPos !== this.selectionStart))\n    {\n        this.cursorPos = clickPos;\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function() {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text)\n    {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n};\n","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the PIXI_UI core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n\n    // controls\n    Application:            require('./controls/Application'),\n    Button:                 require('./controls/Button'),\n    InputControl:           require('./controls/InputControl'),\n    LayoutGroup:            require('./controls/LayoutGroup'),\n    Scrollable:             require('./controls/Scrollable'),\n    ScrollArea:             require('./controls/ScrollArea'),\n    ScrollBar:              require('./controls/ScrollBar'),\n    ScrollThumb:            require('./controls/ScrollThumb'),\n    Slicer:                 require('./controls/Slider'),\n    TextInput:              require('./controls/TextInput'),\n    ToggleButton:           require('./controls/ToggleButton'),\n\n    // layout\n    HorizontalLayout:     require('./layout/HorizontalLayout'),\n    Layout:               require('./layout/Layout'),\n    LayoutAlignment:      require('./layout/LayoutAlignment'),\n    TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n    TiledLayout:          require('./layout/TiledLayout'),\n    TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n    VerticalLayout:       require('./layout/VerticalLayout'),\n    ViewPortBounds:       require('./layout/ViewPortBounds'),\n\n    // shapes\n    Diamond:           require('./shapes/Diamond'),\n    Ellipse:           require('./shapes/Ellipse'),\n    Line:              require('./shapes/Line'),\n    Rect:              require('./shapes/Rect'),\n    Shape:             require('./shapes/Shape'),\n\n    // skin\n    Theme:           require('./skin/Theme')\n};","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n// renderer\n/* istanbul ignore next */\nShape.prototype.renderWebGL = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderWebGL.call(this, renderer);\n};\n\n/* istanbul ignore next */\nShape.prototype.renderCanvas = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderCanvas.call(this, renderer);\n};\n\n// shape drawing\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\n\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    this.textStyle = this.textStyle || {};\n    // default color for label (e.g. buttons)\n    this.textStyle.fill = this.textStyle.fill || '#000';\n    // default font for label (e.g. buttons)\n    this.textStyle.font = this.textStyle.font || '12px Arial';\n\n    if (global === true || global === undefined) {\n        PIXI_UI.theme = this;\n    }\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    PIXI_UI.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    return function() {\n        return ScaleContainer.fromFrame(name, grid);\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    return function() {\n        return PIXI.Sprite.fromImage(name);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    PIXI_UI.theme = undefined;\n};","/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof PIXI_UI\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if (PIXI_UI.InputControl.currentInput)\n            {\n                PIXI_UI.InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if (PIXI_UI.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (PIXI_UI.InputControl.currentInput.hasFocus)\n                {\n                    PIXI_UI.InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(PIXI_UI.InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (PIXI_UI.InputControl.currentInput.hasFocus)\n                {\n                    PIXI_UI.InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n * @returns {DOMObject}\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n * @returns {DOMObject}\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String}\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.math.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof PIXI_UI\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the PIXI_UI util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (PIXI_UI._mouseWheelHandler !== undefined) {\n            return;\n        }\n        PIXI_UI._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n    } else {\n        if (PIXI_UI._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n        PIXI_UI._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.y - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}