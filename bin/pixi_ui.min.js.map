{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","pixi_ui.min.js","src/index.js","src/core/Control.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mouseWheelSupport.js","src/utils/position.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PIXI_UI","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","utils","loader","PIXI","./core","./utils",2,"Control","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","renderWebGL","renderer","redraw","renderCanvas","mousePos","getLocalPosition","target","defineProperty","get","_enabled","set","value","_width","width","invalidDimensions","_height","height",3,"Skinable","skinCache","undefined","invalidState","controlSetTheme","preloadSkins","changeState","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_currentState","updateDimensions","_skinName","./Control",4,"Application","background","fullscreen","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","onresize","resize","bg","children","child","_fullscreen","removeEventListener","addEventListener","bind","_background","removeChild","Array","Sprite","../Control",5,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","hitArea","math","Rectangle","type","currentState","_pressed","_over","redrawSkinable","createLabel","labelText","text","_label","style","textStyle","Text","updateLabelDimensions","x","Math","floor","y","skinableSetTheme","font","labelFont","color","labelColor","indexOf","label","../Skinable",6,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","_isBitmapFont","prevCharCode","data","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",7,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","renderAreaWebGL","visible","worldAlpha","renderable","j","_mask","_filters","currentRenderer","flush","filterManager","pushFilter","maskManager","pushMask","start","_renderWebGL","popMask","popFilter","renderAreaCanvas","_renderCanvas","getChildAt","max","../layout/ViewPortBounds",8,"ScrollArea","content","addListener","scrolldelta","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","_scrollContent","scrollAuto","scroll","min","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",9,"ScrollBar","scrollArea","thumb","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",10,"ScrollThumb","scrollable","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","handleDown","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","./Button",11,"mode","DESKTOP_MODE","_inverse","MOBILE_MODE","local","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","maxWidth","maxHeight","isNaN","showProgress","./ScrollThumb",12,"Slider","_minimum","_maximum","step","page","_value","minimum","change","SliderData","maximum","sliderData","../../utils/SliderData",13,"TextInput","cursor","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","setText","updateSelection","end","setSelection","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","substring","cursorPos","drawCursor","time","Date","now","selectionStart","interactionManager","hitTest","mouse","curPos","originalEvent","getText","sel","getSelection","./InputControl",14,"ToggleButton","slice","push","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","_selected","selected","state","substr","toggle","buttonHandleEvent",15,"Slicer","HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/InputControl","./controls/LayoutGroup","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",16,"./LayoutAlignment",17,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",18,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","NaN","explicitSpace","paddingStart","position","./Layout",19,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",20,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",21,22,23,24,"_drawShape","graphics","moveTo","lineTo","./Shape",25,"drawEllipse",26,"reverse","_reverse",27,"radius","_radius","drawRoundedRect",28,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",29,"_skins","fill","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","add","load","loadComplete","getScaleContainer","grid","fromFrame","getImage","fromImage","removeTheme","../../utils/ScaleContainer",30,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","replace","../core/controls/InputControl",31,"texture","rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","w","h","clone","_positionTilable","rightX","bottomY","middleWidth","centerHeight","frameId","TextureCache",32,33,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mouseWheelSupport","./position",34,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",35,"centerVertical","elem","parent","centerHorizontal","center"],"mappings":"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","file":"pixi_ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"var core = module.exports = require('./core');\n\n// add core plugins.\ncore.utils          = require('./utils');\n\n// use default pixi loader\ncore.loader = PIXI.loader;\n\n// mixin the deprecation features.\n//Object.assign(core, require('./deprecation'));\n\n// export PIXI_UI globally.\nglobal.PIXI_UI = core;","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nControl.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {x: Number, y: Number}\n */\nControl.prototype.mousePos = function(e) {\n    return e.getLocalPosition(e.target || this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n    get: function() {\n        return this._width;\n        //return originalWidth.get.call(this);\n    },\n    set: function(width) {\n        this._width = width;\n        //originalWidth.set.call(this, width);\n        this.invalidDimensions = true;\n    }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n    get: function() {\n        //return originalHeight.get.call(this);\n        return this._height;\n    },\n    set: function(height) {\n        //originalHeight.set.call(this, height);\n        this._height = height;\n        this.invalidDimensions = true;\n    }\n});","var Control = require('./Control');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Skinable(theme) {\n    Control.call(this);\n    this.skinCache = {};\n    this.setTheme(theme || PIXI_UI.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    // invalidate state so the control will be redrawn next time\n    this.invalidState = true; // draw for the first time\n    this.invalidDimensions = true;\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeState\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeState = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    }\n    // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nSkinable.prototype.redraw = function() {\n    // remove last skin after new one has been added\n    // (just before rendering, otherwise we would see nothing for a frame)\n    if (this._lastSkin) {\n        //this.removeChild(this._lastSkin);\n        this._lastSkin.alpha = 0;\n        this._lastSkin = null;\n    }\n    if (this.invalidState) {\n        this.fromSkin(this._currentState, this.changeState);\n    }\n    if (this._currentSkin &&\n        this.invalidDimensions &&\n        this._width > 0 && this._height > 0) {\n\n        this._currentSkin.width = this._width;\n        this._currentSkin.height = this._height;\n        this.invalidDimensions = false;\n        this.updateDimensions();\n    }\n};\n\nSkinable.prototype.updateDimensions = function() {\n};\n\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.invalidState = true;\n    }\n});","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n *  that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        var width = 800;\n        var height = 600;\n        if (fullscreen) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        }\n        renderer = PIXI.autoDetectRenderer(\n            width, height, {backgroundColor : 0xffffff});\n        document.body.appendChild(renderer.view);\n    }\n    /* jshint ignore:start */\n    this._stage = stage;\n    this._renderer = renderer;\n    /* jshint ignore:end */\n    this._width = renderer.width;\n    this._height = renderer.height;\n\n    Control.call(this);\n    stage.addChild(this);\n    this.animate();\n\n    this.background = background;\n    this.fullscreen = fullscreen;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n    var renderer = this._renderer;\n    var stage = this._stage;\n    var animate = function() {\n        renderer.render(stage);\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(width, height, gradient) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width;\n    bgCanvas.height = height;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0,0,0,height);\n    for (var i = 0; i < gradient.length; i++) {\n        linearGradient.addColorStop(i, gradient[i]);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0,0,width,height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n    this._width = window.innerWidth;\n    this._height = window.innerHeight;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.onresize) {\n            child.onresize(this._width, this._height);\n        }\n    }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n    get: function() {\n        return this._fullscreen;\n    },\n    set: function(value) {\n        if (this._fullscreen && !value) {\n            window.removeEventListener('resize');\n        } else if (!this._fullscreen && value) {\n            window.addEventListener('resize', this.onresize.bind(this));\n        }\n        this._fullscreen = value;\n    }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        if (this.bg) {\n            this.removeChild(this.bg);\n            this.bg = null;\n        }\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(256, 256, value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Button(theme) {\n    this.skinName = this.skinName || Button.SKIN_NAME;\n    this._validStates = this._validStates || Button.stateNames;\n    Skinable.call(this, theme);\n    this.handleEvent('up');\n\n    this.updateLabel = false; // label text changed\n\n    this.touchstart = this.mousedown;\n    this.touchend = this.mouseupoutside = this.mouseup;\n    this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n        if (skin) {\n            this.addChildAt(skin, 0);\n            skin.alpha = 0.0;\n        }\n    }\n};\n\nButton.prototype.mousedown = function() {\n    this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n    this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n    this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n    this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.math.Rectangle(0, 0, this.width, this.height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = this.width;\n            skin.height = this.height;\n        }\n    }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN) {\n        this.currentState = Button.DOWN;\n        this._pressed = true;\n    } else if (type === Button.UP) {\n        this._pressed = false;\n        if (this._over) {\n            this.currentState = Button.HOVER;\n        } else {\n            this.currentState = Button.UP;\n        }\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this.theme.textStyle;\n    } else {\n        this.labelText = new PIXI.Text(this._label, this.theme.textStyle);\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text) {\n        this.labelText.x = Math.floor((this.width - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.height - this.labelText.height) / 2);\n    }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});","var Skinable = require('../Skinable'),\n    InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends PIXI_UI.Skinable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction InputControl(text, theme) {\n    Skinable.call(this, theme);\n    this.text = text || ' ';\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n    this.hasFocus = false;\n\n    /**\n     * indicates if the mouse button has been pressed\n     * @property _mouseDown\n     * @type {boolean}\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * TODO: description!\n     *\n     * @type {Array}\n     * @private\n     */\n    this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type PIXI_UI.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n    var text = this.pixiText,\n        totalWidth = 0,\n        pos = text.length;\n\n    if (x < this.textWidth(text))\n    {\n        // loop through each character to identify the position\n        for (var i=0; i<text.length; i++)\n        {\n            totalWidth += this.textWidth(text[i]);\n            if (totalWidth >= x)\n            {\n                pos = i;\n                break;\n            }\n        }\n    }\n\n    return this._clipPos[0] + pos;\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n    if(!this.text._isBitmapFont)\n    {\n        var ctx = this.pixiText.context;\n        return ctx.measureText(text || '').width;\n    }\n    else\n    {\n        var prevCharCode = null;\n        var width = 0;\n        var data = this.pixiText._data;\n        for(var i = 0; i < text.length; i++) {\n            var charCode = text.charCodeAt(i);\n            var charData = data.chars[charCode];\n            if(!charData) {\n                continue;\n            }\n            if(prevCharCode && charData.kerning[prevCharCode]) {\n                width += charData.kerning[prevCharCode];\n            }\n            width += charData.xAdvance;\n            prevCharCode = charCode;\n        }\n        return width * this.pixiText._scale;\n    }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (InputControl.currentInput) {\n        InputControl.currentInput.blur();\n    }\n\n    // set focus\n    InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    /*\n     //TODO\n     // is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n\n    // focus hidden input\n    InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n    if(this.hasFocus && !this._mouseDown)\n    {\n        this.blur();\n    }\n    this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n    if (InputControl.currentInput === this) {\n        InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n        this.onblur();\n    }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n    if (InputControl.currentInput &&\n        !InputControl.currentInput._mouseDown) {\n        InputControl.currentInput.blur();\n        InputControl.currentInput = null;\n    }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n    ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutGroup() {\n    this.percentWidth = this.percentWidth || null;\n    this.percentHeight = this.percentHeight || null;\n    Control.call(this);\n    this._viewPortBounds = new ViewPortBounds();\n    this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n        // width set - change viewport boundaries\n        this._viewPortBounds.explicitWidth = this._width;\n        dimensionChanged = true;\n    }\n    if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n        // height set - change viewport boundaries\n        this._viewPortBounds.explicitHeight = this._height;\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layout(this.children, this._viewPortBounds);\n        this._needUpdate = false;\n        this.layout._needUpdate = false;\n    }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n/**\n * only render specific area\n * @method renderAreaWebGL\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaWebGL = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if(this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0, j=this.children.length; i<j; i++)\n        {\n            // only render children if they are visible\n            child = this.children[i];\n            if (this.childIsRenderAble(child, x, y, width, height)) {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * only render specific area\n * @method renderAreaWebCanvas\n * @param renderSession\n * @param x\n * @param y\n * @param width\n * @param height\n * @returns {boolean}\n */\n/* istanbul ignore next */\nLayoutGroup.prototype.renderAreaCanvas = function(renderer, x, y, width, height) {\n    this.redraw();\n\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for (var i = 0, j = this.children.length; i < j; ++i)\n    {\n        // only render children if they are visible\n        var child = this.children[i];\n        if (this.childIsRenderAble(child, x, y, width, height)) {\n            child._renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});","var Control = require('../Control'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends PIXI_UI.Control\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta) {\n    this.addListener = addListener || true;\n    Control.call(this);\n    this.content = content || null;\n    this.mask = undefined;\n    this.enabled = true;\n    this._useMask = true;\n\n    this.scrolldirection = ScrollArea.SCROLL_AUTO;\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = scrolldelta || 10;\n\n    this.interactive = true;\n\n    this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n    this.touchstart = this.mousedown;\n    this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n    return this.content.layout &&\n        this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n    return this.content.height <= this.height &&\n        this.content.width > this.width;\n};\n\n/**\n * set content (will determine scrll direction automatically if it is a\n * PIXI_UI.ScrollArea, will assume vertical scrolling as default)\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n    // todo: press shift to switch direction\n    var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n    var scroll = ScrollArea.SCROLL_VERTICAL;\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = ScrollArea.SCROLL_HORIZONTAL;\n    }\n    if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n        if (this.content.width > this.width) {\n            // assure we are within bounds\n            x = Math.min(x, 0);\n            if (this.content.width) {\n                x = Math.max(x, -(this.content.width - this.width));\n            }\n            this.content.x = Math.floor(x);\n        }\n    }\n    if (scroll === ScrollArea.SCROLL_VERTICAL) {\n        if (this.content.height > this.height) {\n            // assure we are within bounds\n            y = Math.min(y, 0);\n            if (this.content.height && this.content.y < 0) {\n                y = Math.max(y, -(this.content.height - this.height));\n            }\n            this.content.y = Math.floor(y);\n        }\n    }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n    var pos = mouseData.getLocalPosition(this);\n    if (!this._start) {\n        this._start = [\n            pos.x - this.content.x,\n            pos.y - this.content.y\n        ];\n    }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n    if (this._start) {\n        var pos = mouseData.getLocalPosition(this);\n        this._scrollContent(\n            pos.x - this._start[0],\n            pos.y - this._start[1]\n        );\n    }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n    this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n    throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n    throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n    if (this.height && this.width && this._useMask) {\n        if (this.mask === undefined) {\n            this.mask = new PIXI.Graphics();\n        }\n        this.drawMask();\n    } else {\n        if (this.mask) {\n            this.mask.clear();\n        }\n        this.mask = undefined;\n    }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n    var pos = new PIXI.Point(0, 0);\n    var global = this.toGlobal(pos);\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(global.x, global.y, this.width, this.height)\n        .endFill();\n    if (this.hitArea) {\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    } else {\n        this.hitArea = new PIXI.math.Rectangle(0, 0, this.width, this.height);\n    }\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderWebGL = function(renderer)\n{\n    // if the object is not visible or the alpha is 0 then no need to render this element\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    var i, j, child;\n\n    // do a quick check to see if this element has a mask or a filter.\n    if (this._mask || this._filters)\n    {\n        renderer.currentRenderer.flush();\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (this._filters)\n        {\n            renderer.filterManager.pushFilter(this, this._filters);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        renderer.currentRenderer.start();\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n\n        renderer.currentRenderer.flush();\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (this._filters)\n        {\n            renderer.filterManager.popFilter();\n        }\n        renderer.currentRenderer.start();\n    }\n    else\n    {\n        this._renderWebGL(renderer);\n\n        // simple render children!\n        for(i=0,j=this.children.length; i<j; i++)\n        {\n            child = this.children[i];\n            if (child.renderAreaWebGL) {\n                child.renderAreaWebGL(renderer, -this.content.x, -this.content.y, this.width, this.height);\n            } else {\n                child.renderWebGL(renderer);\n            }\n        }\n    }\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScrollArea.prototype.renderCanvas = function(renderer)\n{\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.alpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    this.redraw();\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    this._renderCanvas(renderer);\n    for(var i=0,j=this.children.length; i<j; i++)\n    {\n        var child = this.children[i];\n        if (child.renderAreaCanvas) {\n            child.renderAreaCanvas(renderer, -this.content.x, -this.content.y, this.width, this.height);\n        } else {\n            child.renderCanvas(renderer);\n        }\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n\nScrollArea.prototype.redraw = function() {\n    if (this.invalid) {\n        this.updateMask();\n        this.invalid = false;\n    }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n    set: function(content) {\n        if (this._content) {\n            this.removeChild(content);\n        }\n        this._content = content;\n        if (content) {\n            this.addChild(content);\n        }\n    },\n    get: function() {\n        return this._content;\n    }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n    get: function() {\n        if (!this._width) {\n            return this._content.width;\n        }\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n    get: function() {\n        if (!this._height) {\n            return this._content.height;\n        }\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme) {\n    this.scrollArea = scrollArea;\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    if (this.orientation === undefined) {\n        this.orientation = Scrollable.HORIZONTAL;\n        if (scrollArea && scrollArea.content &&\n            scrollArea.content.layout.alignment ===\n                LayoutAlignment.VERTICAL_ALIGNMENT) {\n            this.orientation = Scrollable.VERTICAL;\n        }\n    }\n    Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.scrollArea && this.thumb) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(20, this.scrollArea.width /\n                    (this.scrollArea.content.width / this.scrollArea.width));\n            } else {\n                this.thumb.height = Math.max(20, this.scrollArea.height /\n                    (this.scrollArea.content.height / this.scrollArea.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.scrollArea && this.scrollArea.content) {\n\n        if (this.orientation === Scrollable.HORIZONTAL) {\n            this.scrollArea._scrollContent(\n                -(this.scrollArea.content.width - this.scrollArea.width) *\n                    (x / (this.scrollArea.width - this.thumb.width)),\n                0);\n        } else {\n            this.scrollArea._scrollContent(\n                0,\n                -(this.scrollArea.content.height - this.scrollArea.height) *\n                    (y / (this.scrollArea.height - this.thumb.height)));\n        }\n    }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme) {\n    this.scrollable = scrollable;\n    this.skinName = this.skinName || ScrollThumb.SKIN_NAME;\n    this._validStates = ['horizontal_up', 'vertical_up', 'horizontal_down', 'vertical_down', 'horizontal_hover', 'vertical_hover'];\n    Button.call(this, theme);\n    this.invalidTrack = true;\n    this.width = 20;\n    this.height = 20;\n\n    this.touchmove = this.mousemove;\n    /* jshint unused: false */\n    this.touchdown = this.mousedown;\n    /* jshint unused: false */\n    this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        value = this.scrollable.orientation + '_' + value;\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n    this.buttonmousedown(mouseData);\n    this.scrollable.handleDown(mouseData);\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n    this.buttonmousemove(mouseData);\n    this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mousemove;\nScrollThumb.prototype.mouseup = function (mouseData) {\n    this.buttonmouseup(mouseData);\n    this.scrollable.handleUp();\n};\n\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\nScrollThumb.prototype.redraw = function() {\n    this.redrawSkinable();\n    if (this.invalidTrack) {\n        this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n    }\n};\n","var Skinable = require('../Skinable'),\n    ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n    this.thumb = thumb || new ScrollThumb(this, theme);\n    this.addChild(this.thumb);\n\n    this.invalidTrack = true;\n    this._inverse = false;\n    this._start = null;\n\n    // # of pixel you scroll at a time (if the event delta is 1 / -1)\n    this.scrolldelta = 10;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.getLocalPosition(this);\n    this._start = [local.x, local.y];\n};\n\n/**\n * handle mouse up/touch end\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * thumb has new x/y position\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if(this.orientation === Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.thumb.x) {\n            this.thumb.x = x;\n            this._updateProgressSkin();\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.thumb.y) {\n            this.thumb.y = y;\n            this._updateProgressSkin();\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\n * show scroll track\n *\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * redraw track and progressbar\n */\nScrollable.prototype.redraw = function() {\n    if (this.invalidTrack && this.thumb) {\n        this.fromSkin(this.orientation+'_progress', this.showProgress);\n        this.fromSkin(this.orientation+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.orientation === Scrollable.HORIZONTAL) {\n                this.moveThumb(0, this.width - this.thumb.x);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n * (set invalidDimensions)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n","var Scrollable = require('./Scrollable'),\n    SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends PIXI_UI.Scrollable\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Slider(thumb, theme) {\n    this.skinName = this.skinName || Slider.SKIN_NAME;\n\n    this._minimum = this._minimum || 0;\n    this._maximum = this._maximum || 100;\n    this.step = this.step || 0; //TODO: implement me!\n    this.page = this.page || 10;\n    this._value = this.minimum;\n    this.change = null;\n\n    Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n    var max = 1, value = 0;\n    if (this.orientation === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n        if (this._inverse) {\n            value = max - x;\n        } else {\n            value = x;\n        }\n    } else {\n        max = this.maxHeight();\n        if (this._inverse) {\n            value = max - y;\n        } else {\n            value = y;\n        }\n    }\n    value = value / max * (this.maximum - this.minimum) + this.minimum;\n    this.value = value;\n};\n\n/**\n * value changed\n */\nObject.defineProperty(Slider.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        this._value = value;\n        if (this.change) {\n            var sliderData = new SliderData();\n            sliderData.value = this._value;\n            sliderData.target = this;\n            this.change(sliderData);\n        }\n    }\n});\n\n/**\n * set minimum and update value if necessary\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * set maximum and update value if necessary\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n","var Control = require('../Control'),\n    InputControl = require('./InputControl'),\n    InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends PIXI_UI.InputControl\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction TextInput(text, theme) {\n    // show and load background image as skin (exploiting skin states)\n    this.skinName = this.skinName || TextInput.SKIN_NAME;\n    this._validStates = this._validStates || TextInput.stateNames;\n    this._currentState = 'background';\n    this.invalidState = true;\n\n    InputControl.call(this, text, theme);\n\n    // caret/selection sprite\n    this.cursor = new PIXI.Text('|', this.theme.textStyle );\n    this.addChild(this.cursor);\n\n    /**\n     * timer used to indicate if the cursor is shown\n     *\n     * @property _cursorTimer\n     * @type {Number}\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * indicates if the cursor position has changed\n     *\n     * @property _cursorNeedsUpdate\n     * @type {Boolean}\n     * @private\n     */\n\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * interval for the cursor (in milliseconds)\n     *\n     * @property blinkInterval\n     * @type {number}\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * selected area (start and end)\n     *\n     * @type {Array}\n     * @private\n     */\n    this.selection = [0, 0];\n\n    // set up events\n    this.boundOnMouseUp = this.onMouseUp.bind(this);\n    this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n    this.boundOnMouseDown = this.onMouseDown.bind(this);\n    this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n    this.mousemove = this.touchmove = this.boundOnMouseMove;\n    this.mousedown = this.touchstart = this.boundOnMouseDown;\n    this.mouseup = this.touchend = this.boundOnMouseUp;\n    this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create( InputControl.prototype );\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n    get: function() {\n        return this._text;\n    },\n    set: function(text) {\n        this._text = text || ' ';\n        if (!this.pixiText) {\n            this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n            this.addChild(this.pixiText);\n        } else {\n            this.pixiText.setText(text);\n        }\n    }\n});\n\n/**\n * set selected text\n *\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function(start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        InputWrapper.setSelection(start, end);\n        this._cursorNeedsUpdate = true;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nTextInput.prototype.onSubmit = function() {\n};\n\nTextInput.prototype.onKeyDown = function(e) {\n    var keyCode = e.which;\n\n    // ESC\n    if (e.which === 27) {\n        this.blur();\n        return;\n    }\n\n    // add support for Ctrl/Cmd+A selection - select whole input text\n    if (keyCode === 65 && (e.ctrlKey || e.metaKey))\n    {\n        e.preventDefault();\n        this.updateSelection(0, this.text.length);\n        return;\n    }\n\n    // block keys that shouldn't be processed\n    if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n        return;\n    }\n\n    // enter key\n    if (keyCode === 13) {\n        e.preventDefault();\n        this.onSubmit(e);\n    }\n\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function() {\n    // update the canvas input state information from the hidden input\n    this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function() {\n    this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function() {\n    if(this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if((time-this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if(this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\nTextInput.prototype.redraw = function()\n{\n    this.drawCursor();\n    Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function(e) {\n\n    if(!this.hasFocus || !this._mouseDown || this.selectionStart < 0 ||\n            !this.stage.interactionManager.hitTest(this, e)) {\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n    var curPos = this.clickPos(mouse.x, mouse.y),\n        start = Math.min(this.selectionStart, curPos),\n        end = Math.max(this.selectionStart, curPos);\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\nTextInput.prototype.onMouseDown = function(e) {\n    if(e.originalEvent.which === 2 || e.originalEvent.which === 3)\n    {\n        e.originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n    var mouse = this.mousePos(e);\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.clickPos(mouse.x, mouse.y);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    return true;\n};\n\nTextInput.prototype.onMouseUp = function(e) {\n\n    if(e.originalEvent.which === 2 || e.originalEvent.which === 3)\n    {\n        e.originalEvent.preventDefault();\n        return false;\n    }\n\n    var mouse = this.mousePos(e);\n\n    // update selection if a drag has happened\n    var clickPos = this.clickPos(mouse.x, mouse.y);\n\n    // update the cursor position\n    if(!(this.selectionStart >= 0 && clickPos !== this.selectionStart))\n    {\n        this.cursorPos = clickPos;\n        this.updateSelection(this.cursorPos, this.cursorPos);\n    }\n\n    this.selectionStart = -1;\n    this._mouseDown = false;\n    return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function() {\n    var text = InputWrapper.getText();\n\n    if (text !== this.text)\n    {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n};\n","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends PIXI_UI.Button\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ToggleButton(theme) {\n    this.skinName = this.skinName || ToggleButton.SKIN_NAME;\n    this._validStates = Button.stateNames.slice(0);\n    this._validStates.push(ToggleButton.SELECTED_UP);\n    this._validStates.push(ToggleButton.SELECTED_DOWN);\n    this._validStates.push(ToggleButton.SELECTED_HOVER);\n    Button.call(this, theme);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @property selected\n     * @type Boolean\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        var state = this._currentState;\n        this.invalidState = this._selected !== selected || this.invalidState;\n        if (state.indexOf('selected_') === 0) {\n            state = state.substr(9, state.length);\n        }\n        this._selected = selected;\n        this._pressed = false; //to prevent toggling on touch/mouse up\n        this.currentState = state;\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if (type === Button.UP && this._pressed) {\n        this.toggle();\n    }\n    this.buttonHandleEvent(type);\n};\n","/**\n * @file        Main export of the PIXI_UI core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n\n    // controls\n    Application:            require('./controls/Application'),\n    Button:                 require('./controls/Button'),\n    InputControl:           require('./controls/InputControl'),\n    LayoutGroup:            require('./controls/LayoutGroup'),\n    Scrollable:             require('./controls/Scrollable'),\n    ScrollArea:             require('./controls/ScrollArea'),\n    ScrollBar:              require('./controls/ScrollBar'),\n    ScrollThumb:            require('./controls/ScrollThumb'),\n    Slicer:                 require('./controls/Slider'),\n    TextInput:              require('./controls/TextInput'),\n    ToggleButton:           require('./controls/ToggleButton'),\n\n    // layout\n    HorizontalLayout:     require('./layout/HorizontalLayout'),\n    Layout:               require('./layout/Layout'),\n    LayoutAlignment:      require('./layout/LayoutAlignment'),\n    TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n    TiledLayout:          require('./layout/TiledLayout'),\n    TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n    VerticalLayout:       require('./layout/VerticalLayout'),\n    ViewPortBounds:       require('./layout/ViewPortBounds'),\n\n    // shapes\n    Diamond:           require('./shapes/Diamond'),\n    Ellipse:           require('./shapes/Ellipse'),\n    Line:              require('./shapes/Line'),\n    Rect:              require('./shapes/Rect'),\n    Shape:             require('./shapes/Shape'),\n\n    // skin\n    Theme:           require('./skin/Theme')\n};","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n *  for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? item.width : item.height;\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    remaining -= totalExplicit;\n    var percentToPixels = remaining / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    for(i = 0; i < itemCount; i++) {\n        item = items[i];\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        if (itemPercent > 0) {\n            if (_hor) {\n                item.width = percentToPixels * itemPercent;\n            } else {\n                item.height = percentToPixels * itemPercent;\n            }\n        }\n    }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // get max. dimensions from viewport bounds\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var explicitSpace = _hor ? explicitWidth : explicitHeight;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height\n    this.applyPercent(items, explicitSpace);\n\n    var position = paddingStart;\n\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n        } else {\n            item.y = Math.floor(position);\n        }\n        var itemSpace = _hor ? item.width : item.height;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n    }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends PIXI_UI.Layout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n    this._useSquareTiles = false;\n    this._horizontalGap = 0;\n    this._verticalGap = 0;\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n    this._paging = TiledLayout.PAGING_NONE;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return;\n    }\n\n    var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n    var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n    var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n    var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n        var itemWidth = item.width;\n        var itemHeight = item.height;\n        if(itemWidth > tileWidth) {\n            tileWidth = itemWidth;\n        }\n        if(itemHeight > tileHeight) {\n            tileHeight = itemHeight;\n        }\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if(tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        }\n        else if(tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(explicitWidth)) {\n        availableWidth = explicitWidth;\n        horizontalTileCount = (explicitWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    else if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(explicitHeight)) {\n        availableHeight = explicitHeight;\n        verticalTileCount = (explicitHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    } else if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for(i = 0; i < items.length; i++)\n    {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends PIXI_UI.TiledLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends PIXI_UI.LayoutAlignment\n * @memberof PIXI_UI\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof PIXI_UI\n * @constructor\n */\nfunction ViewPortBounds() {\n    /**\n     * The explicit width of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit width value.\n     *\n     * @property explicitWidth\n     */\n    this.explicitWidth = NaN;\n\n    /**\n     * The explicit height of the view port, in pixels. If <code>NaN</code>,\n     * there is no explicit height value.\n     *\n     * @property explicitHeight\n     */\n    this.explicitHeight = NaN;\n\n    /**\n     * x-position\n     *\n     * @property x\n     */\n    this.x = 0;\n\n    /**\n     * y-position\n     *\n     * @property y\n     */\n    this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.graphics.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n    Shape.call(this, color, alpha, width, height);\n    this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends PIXI_UI.Shape\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    if (this.radius) {\n        this.drawRoundedRect(0, 0,\n            this._width, this._height,\n            this.radius);\n    } else {\n        this.drawRect(0, 0, this._width, this._height);\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n    this._color = color;\n    this._alpha = alpha || 1.0;\n    this._width = width;\n    this._height = height;\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n// renderer\n/* istanbul ignore next */\nShape.prototype.renderWebGL = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderWebGL.call(this, renderer);\n};\n\n/* istanbul ignore next */\nShape.prototype.renderCanvas = function(renderer) {\n    if (this.invalid) {\n        this.redraw();\n        this.invalid = false;\n    }\n    return PIXI.Graphics.prototype.renderCanvas.call(this, renderer);\n};\n\n// shape drawing\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n    this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor);\n    }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n    if (this.width <= 0 || this.height <= 0) {\n        return;\n    }\n    // default shape is a rect\n    this.drawRect(0, 0, this._width, this._height);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\n\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof PIXI_UI\n * @constructor\n */\nfunction Theme(global) {\n    // at its core a theme is just a dict that holds a collection of skins\n    this._skins = {};\n\n    this.textStyle = this.textStyle || {};\n    // default color for label (e.g. buttons)\n    this.textStyle.fill = this.textStyle.fill || '#000';\n    // default font for label (e.g. buttons)\n    this.textStyle.font = this.textStyle.font || '12px Arial';\n\n    if (global === true || global === undefined) {\n        PIXI_UI.theme = this;\n    }\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated  {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n    PIXI_UI.loader\n        .add(jsonPath)\n        .load(this.loadComplete.bind(this));\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n    return function() {\n        return ScaleContainer.fromFrame(name, grid);\n    };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n    return function() {\n        return PIXI.Sprite.fromImage(name);\n    };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n    PIXI_UI.theme = undefined;\n};","var InputControl = require('../core/controls/InputControl');\n\n/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof PIXI_UI\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function()\n        {\n            if(InputControl.currentInput)\n            {\n                InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key down\n        input.addEventListener('keydown', function(e)\n        {\n            if(InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (InputControl.currentInput.hasFocus)\n                {\n                    InputControl.currentInput.onKeyDown(e);\n                }\n            }\n        });\n\n        // on key up\n        input.addEventListener('keyup', function(e)\n        {\n            if(InputControl.currentInput)\n            {\n                e = e || window.event;\n                if (InputControl.currentInput.hasFocus)\n                {\n                    InputControl.currentInput.onKeyUp(e);\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n * @returns {DOMObject}\n */\nInputWrapper.focus = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * deactivate the text input\n * @returns {DOMObject}\n */\nInputWrapper.blur = function()\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.selectionStart = start;\n        InputWrapper.hiddenInput.selectionEnd = end;\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String}\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof PIXI_UI\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n    PIXI.Container.call( this );\n\n    this.rect = rect;\n    this.baseTexture = texture.baseTexture;\n    this.frame = texture.frame;\n\n    this._width = this.frame.width;\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    // top\n    if (lw > 0 && th > 0) {\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n    if (mw > 0 && th > 0) {\n        this.tm = this._getTexture(lw, 0, mw, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n    if (rw > 0 && th > 0) {\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    // center\n    if (lw > 0 && ch > 0) {\n        this.cl = this._getTexture(0, th, lw, ch);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n    if (mw > 0 && ch > 0) {\n        this.cm = this._getTexture(lw, th, mw, ch);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n    if (rw > 0 && ch > 0) {\n        this.cr = this._getTexture(lw + mw, th, rw, ch);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    // bottom\n    if (lw > 0 && bh > 0) {\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n    if (mw > 0 && bh > 0) {\n        this.bm = this._getTexture(lw, th + ch, mw, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n    if (rw > 0 && bh > 0) {\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.math.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            this._width = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            this._height = value;\n            this.invalid = true;\n        }\n    }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n\n/**\n * Renders the object using the WebGL renderer\n *\n * @method renderWebGL\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderWebGL = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderWebGL.call(this, renderer);\n};\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method renderCanvas\n * @param renderer\n * @private\n */\n/* istanbul ignore next */\nScaleContainer.prototype.renderCanvas = function(renderer) {\n    this.redraw();\n    return PIXI.Container.prototype.renderCanvas.call(this, renderer);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof PIXI_UI\n * @constructor\n */\nfunction SliderData()\n{\n    this.value = 0;\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @property target\n     * @type Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file        Main export of the PIXI_UI util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2015 Andreas Bresser\n * @license     {@link https://github.com/brean/pixi_ui/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace PIXI.util\n */\nmodule.exports = {\n    InputWrapper:           require('./InputWrapper'),\n    mouseWheelSupport:      require('./mouseWheelSupport'),\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData')\n};","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n    var canvas = stage.canvas;\n    if (enable || enable === undefined) {\n        if (PIXI_UI._mouseWheelHandler !== undefined) {\n            return;\n        }\n        PIXI_UI._mouseWheelHandler = function(event) {\n            event = window.event || event;\n            var delta = Math.max(-1, Math.min(1,\n                (event.wheelDelta || -event.detail)));\n\n            var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n            if (!target) {\n                return;\n            }\n            for(var i = 0; i < target.length; i++) {\n                var t = target[i];\n                t.mouseMove(delta);\n                /*\n                var evt = new createjs.MouseEvent(\n                    \"mousewheel\", true, false,\n                    t.x, t.y, event, -1, true, t.rawX, t.rawY);\n                evt.delta = delta;\n                t.dispatchEvent(evt);\n                */\n            }\n        };\n        if (canvas.addEventListener) {\n            canvas.addEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler, false);\n            canvas.addEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler, false);\n        } else {\n            canvas.attachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n    } else {\n        if (PIXI_UI._mouseWheelHandler === undefined) {\n            return;\n        }\n        if (canvas.removeEventListener) {\n            canvas.removeEventListener('mousewheel',\n                PIXI_UI._mouseWheelHandler);\n            canvas.removeEventListener('DOMMouseScroll',\n                PIXI_UI._mouseWheelHandler);\n        } else {\n            canvas.detachEvent('onmousewheel',\n                PIXI_UI._mouseWheelHandler);\n        }\n        PIXI_UI._mouseWheelHandler = undefined;\n    }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.y - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom\n};"],"sourceRoot":"./"}